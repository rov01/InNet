angular.module("InNet",["ui.router","ui.bootstrap","timer","angular-storage","angular-jwt","leaflet-directive","angular.filter"]),angular.module("InNet").service("BranchSvc",["$http",function(e){this.fetchByCorps=function(t){return e.get("/api/branch?corps="+t)},this.fetchByName=function(t){return e.get("/api/branch/name?branch="+t)},this.totalListFindByName=function(t){return e.get("/api/branch/name/total?branch="+t)},this.getDetails=function(t){return e.get("/api/branch/"+t)},this.fetchOnDutyBranches=function(t){return e.post("/api/branch/onduty",t)},this.update=function(t){return e.put("/api/branch/"+t.branch,t)},this.updateMission=function(t){return e.put("/api/branch?branch="+t.branch,t)}}]),angular.module("InNet").controller("CarEditCtrl",["$scope",function(e){}]),angular.module("InNet").controller("CarIndexCtrl",["$scope",function(e){}]),angular.module("InNet").service("CarSvc",["$http",function(e){this.fetchByCorps=function(t){return e.get("/api/cars?corps="+t)},this.fetchByBranch=function(t){return e.get("/api/cars?branch="+t)},this.update=function(t){return e.put("/api/cars/"+t.id,t)}}]),angular.module("InNet").controller("CaseConfirmCtrl",["$scope","UserSvc","CaseSvc","$stateParams","$state","$modalInstance",function(e,t,n,s,r,a){e.user={},e.caseInfo={id:s.id,endAt:moment().format("YYYY-MMM-DD, h:mm:ss a")},e.send=function(){t.login(e.user).success(function(t){n.closeCase(e.caseInfo).success(function(){a.dismiss("cancel"),r.go("dutyDesk.case.index")})})}}]),angular.module("InNet").controller("CaseCtrl",["$scope","$stateParams","$modal","CaseSvc","$log","SocketSvc","UserSvc","$location",function(e,t,n,s,r,a,o,c){e.maxSize=5,e.itemsPerPage=10,e.currentPage=1,e.pageChanged=function(){s.fetch(o.userCorps(),e.currentPage,e.itemsPerPage).success(function(t){e.cases=t.cases})},e.queryCases=function(){s.fetch(o.userCorps(),e.currentPage,e.itemsPerPage).success(function(t){e.cases=t.cases,e.totalItems=t.totalCases})},e.queryCases(),a.on("newCase",function(t){e.cases.unshift(t)}),a.on("caseModified",function(t){e.cases[t.caseId-1]=t}),e.choose=function(t){s.fetchById(e.cases[t]._id).success(function(t){e.caseDetails=t})}}]),angular.module("InNet").controller("CaseEditCtrl",["$scope","$stateParams","CaseSvc","CarSvc","UserSvc","BranchSvc","$window","$modal","NtfSvc",function(e,t,n,s,r,a,o,c,i){function u(t){for(var n=_.unique(t),s=[],r=0;r<e.branches.length;r++)n.indexOf(e.branches[r].name)>-1&&s.push(e.branches[r]._id);return s}var l=[];angular.extend(e,{nowPos:{lat:24.988,lng:121.5752,zoom:17},controls:{draw:{}}});var m=t.id;a.fetchByCorps(r.userCorps()).success(function(t){e.branches=t,e.currentBranch=t[0].name}),e.selectBranch=function(t){e.currentBranch=t.name},a.fetchByCorps(r.userCorps()).success(function(t){e.branches=t,e.currentBranch=t[0].name}),n.fetchById(m).success(function(t){e.currentCase=t,e.dispatchList=_.pluck(t.cars,"radioCode").join(" "),e.currentCase.carIds=_.pluck(t.cars,"_id")}).then(function(){s.fetchByCorps(r.userCorps()).success(function(t){e.cars=t;for(var n=0;n<e.cars.length;n++)e.currentCase.carIds.indexOf(e.cars[n]._id)>-1&&(e.cars[n].isChecked=!0,l.push(e.cars[n]))}),i.fetch().success(function(t){e.ntfs=t,e.currentCase.ntfs=_.pluck(t,"type"),e.currentCase.ntf=e.currentCase.ntfs[0]})}),e.dispatch=function(t){t.isChecked=!0,l.push(t),e.dispatchList=_.pluck(l,"radioCode").join(" ")},e.cancelDispatch=function(t){t.isChecked=!1,l.splice(_.pluck(l,"_id").indexOf(t._id),1),e.dispatchList=_.pluck(l,"radioCode").join(" ")},e.save=function(){var t;e.ntfs.forEach(function(n,s){n.type==e.currentCase.ntf&&(t=e.ntfs[s])}),n.update({caseId:e.currentCase._id,address:e.currentCase.address||"測試",officerReceiver:r.currentUser()||"劉曉曼",type:e.currentCase.type||"火警",types:e.currentCase.types,phone:e.currentCase.phone||"測試",branches:_.unique(_.pluck(l,"branch")),branchIds:u(e.currentCase.branches),cars:_.pluck(l,"_id"),isOngoing:!0,corps:r.userCorps(),env:e.currentCase.env,envs:e.currentCase.envs,floor:e.currentCase.floor,ntf:t._id,lastUpdate:moment().format("YYYY-MMM-DD h:mm:ss a")}).success(function(){o.history.back()})},e.terminateCase=function(){c.open({templateUrl:"views/case/case.confirm.modal.html",controller:"CaseConfirmCtrl",size:"md"})}}]),angular.module("InNet").controller("CaseModalCtrl",["$scope","CarSvc","$modalInstance","CaseSvc","$state","caseId","caseDetails","StSvc","$window","BranchSvc","UserSvc","NtfSvc",function(e,t,n,s,r,a,o,c,i,u,l,m){function d(e){var t=[],n=[],s=[];if(e.cars){for(var r=e.cars.length-1;r>=0;r--)t.push(e.cars[r].radioCode),n.push(e.cars[r]._id),s.push(e.cars[r].branch);return{dispatchList:t,carIds:n,branches:s}}return{}}function f(t){for(var n=_.unique(t),s=[],r=0;r<e.branches.length;r++)n.indexOf(e.branches[r].name)>-1&&s.push(e.branches[r]._id);return s}if(_.isEmpty(o))e.isNew=!0,h=[];else{e.isNew=!1;var h=o.cars}e.nftOption={},m.fetch().success(function(t){e.nftOption.nfts=t}).then(function(){e.nftOption.nft=e.nftOption.nfts[0]}),u.fetchByCorps(l.userCorps()).success(function(t){e.branches=t}),e.caseObj={address:o.address||null,phone:o.phone||null,type:o.type||"火警",types:["火警","救護","災害","檢舉","其他"],env:"住宅火警",envs:["住宅火警","高樓、地下與工廠","搶救困難區","其他"],floor:1,carIds:d(o).carIds||[],dispatchList:d(o).dispatchList||[],branches:d(o).branches||[]},e.dispatchList=e.caseObj.dispatchList.join(" "),e.getCars=function(n){t.fetchByBranch(n.name).success(function(t){for(var n=t.length-1;n>=0;n--)e.caseObj.carIds.indexOf(t[n]._id)>-1&&(t[n].isChecked=!0);e.cars=t})},e.cancel=function(){n.dismiss("cancel")},e.cancelDispatch=function(t){t.isChecked=!1,h.splice(h.indexOf(t),1),e.caseObj.carIds.splice(e.caseObj.dispatchList.indexOf(t._id),1),e.caseObj.dispatchList.splice(e.caseObj.dispatchList.indexOf(t.radioCode),1),e.caseObj.branches.splice(e.caseObj.dispatchList.indexOf(t.branch),1),e.dispatchList=e.caseObj.dispatchList.join(" ")},e.dispatch=function(t){t.isChecked=!0,h.push(t),e.caseObj.carIds.push(t._id),e.caseObj.dispatchList.push(t.radioCode),e.caseObj.branches.push(t.branch),e.dispatchList=e.caseObj.dispatchList.join(" ")},e.closeCase=function(){c.count(o._id).success(function(e){e>0?i.alert("尚有隊員在安全管制"):(s.closeCase({id:o._id,isOngoing:!1}).success(function(e){console.log(e)}),n.dismiss("cancel"),r.reload())})},e.save=function(){s.create({caseId:a+1,address:e.caseObj.address||"測試",officerReceiver:l.currentUser()||"劉曉曼",type:e.caseObj.type||"救護",phone:e.caseObj.phone||"測試",branches:_.unique(e.caseObj.branches),branchIds:f(e.caseObj.branches),cars:e.caseObj.carIds,isOngoing:!0,corps:l.userCorps(),env:e.caseObj.env,floor:e.caseObj.floor}).success(function(e){n.close(e)})},e.update=function(){var t={id:o._id,caseId:a,address:e.caseObj.address,officerReceiver:l.currentUser()||"劉曉曼",type:e.caseObj.type,phone:e.caseObj.phone,branches:_.unique(e.caseObj.branches),branchIds:f(e.caseObj.branches),cars:e.caseObj.carIds,isOngoing:!0,env:e.caseObj.env,floor:e.caseObj.floor};s.update(t),n.dismiss("cancel")}}]),angular.module("InNet").controller("CaseNewCtrl",["$scope","CarSvc","BranchSvc","NtfSvc","UserSvc","$location","leafletData","$stateParams","CaseSvc","$window","$state","GeoSvc",function(e,t,n,s,r,a,o,c,i,u,l,m){"use strict";m.fetchBaseLocation(r.userCorps()).success(function(t){e.locations=t});var d=[];e.locateAddress=function(){e.currentCase.address&&m.getGeoEncodedInfo(e.currentCase.address).then(function(t){e.nowPos.lat=t.H,e.nowPos.lng=t.L,e.markers.mainMarker={lat:t.H,lng:t.L,focus:!0,message:"案件標的"},t&&e.locations.forEach(function(e){var n=m.getDistance(e,{lat:t.H,lng:t.L}),s={base:e.branch,to:{lat:t.H,lng:t.L},from:{lat:e.lat,lng:e.lng},d:n};d.push(JSON.stringify(s))})})};var f,h=[];e.currentCase={address:null,phone:null,type:"火警",types:["火警","救護","災害","檢舉","其他"],env:"住宅火警",envs:["住宅火警","高樓、地下與工廠","搶救困難區","其他"],floor:1,carIds:[],dispatchList:[],branches:[]},e.dispatchList=e.currentCase.dispatchList.join(" "),angular.extend(e,{nowPos:{lat:24.988,lng:121.5752,zoom:17},markers:{}}),e.selectBranch=function(t){e.currentBranch=t.name},n.fetchByCorps(r.userCorps()).success(function(t){e.branches=t,e.currentBranch=t[0].name}),t.fetchByCorps(r.userCorps()).success(function(t){e.cars=t}),s.fetch().success(function(t){f=t,e.currentCase.ntfs=_.pluck(t,"type"),e.currentCase.ntf=e.currentCase.ntfs[0]}),e.currentTime=moment().format("h:mm:ss a"),e.dispatch=function(t){t.isChecked=!0,h.push(t),e.dispatchList=_.pluck(h,"radioCode").join(" ")},e.cancelDispatch=function(t){t.isChecked=!1,h.splice(_.pluck(h,"_id").indexOf(t._id),1),e.dispatchList=_.pluck(h,"radioCode").join(" "),e.dispatchList=e.currentCase.dispatchList.join(" ")},e.save=function(){var t,n=_.unique(_.pluck(h,"branch")),s=e.branches.filter(function(e){return n.indexOf(e.name)>-1});f.forEach(function(n,s){n.type==e.currentCase.ntf&&(t=f[s])}),i.create({address:e.currentCase.address||"測試",officerReceiver:r.currentUser()||"劉曉曼",type:e.currentCase.type||"火警",types:e.currentCase.types,phone:e.currentCase.phone||"測試",branches:_.unique(_.pluck(h,"branch")),branchIds:_.pluck(s,"_id"),cars:_.pluck(h,"_id"),corps:r.userCorps(),env:e.currentCase.env,envs:e.currentCase.envs,floor:e.currentCase.floor,ntf:t._id,createAt:moment().format("YYYY-MMM-DD, h:mm:ss a"),lastUpdate:moment().format("YYYY-MMM-DD, h:mm:ss a"),location:e.markers.mainMarker,battleRadiuss:d}).success(function(){u.history.back()})}}]),angular.module("InNet").controller("CaseShowCtrl",["$scope","StSvc","$stateParams","$interval","$state","SocketSvc","CaseSvc","BranchSvc","StMissionFac",function(e,t,n,s,r,a,o,c,i){e.isCollapsed=!0,e.members=[],e.positions=i.position().poss,a.on("newSt",function(t){if(angular.equals(u,t.caseId)){var n=angular.copy(t);e.strikeTeams.push(n)}e.deploys=m(e.strikeTeams),e.deployDetails=l(e.strikeTeams)}),a.on("updateSt",function(n){t.fetchByCase(u).success(function(t){e.strikeTeams=t,e.strikeTeams.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}),e.deploys=m(e.strikeTeams),e.deployDetails=l(e.strikeTeams)})}),a.on("dismiss",function(n){t.fetchByCase(u).success(function(t){e.strikeTeams=t,e.deploys=m(e.strikeTeams),e.deployDetails=l(e.strikeTeams)})});var u=n.id;o.fetchById(u).success(function(t){e.apartment="住宅火警"==t.env?!0:!1,e.caseDetail=t,e.position={defaultPos:"第一面",positions:["第一面","第二面","第三面","第四面"],floor:e.caseDetail.floor,floors:e.caseDetail.floor<5?_.range(1,6,1):_.range(e.caseDetail.floor-2,e.caseDetail.floor+3,1)}}).then(function(){c.fetchOnDutyBranches(e.caseDetail.branches).success(function(t){e.onDutyBranches=t})}),t.fetchByCase(u).success(function(t){t&&(e.strikeTeams=t,e.strikeTeams.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}),e.deploys=m(e.strikeTeams),e.deployDetails=l(e.strikeTeams))});var l=function(e){return _.groupBy(e,function(e){return e.position})},m=function(t){var n=_.range(4).map(function(){return _.range(5).map(function(){return{totalMember:0,stTotal:0,sts:[]}})});if(t)for(var s=t.length-1;s>=0;s--){var r=null,a=_.indexOf(t[s].positions,t[s].position);r=e.apartment?_.indexOf(t[s].floors,t[s].floor):_.indexOf(t[s].areas,t[s].area),n[a][r].stTotal+=1,n[a][r].totalMember+=t[s].members.length;var o={};o.id=t[s].branch+t[s].id,o.number=t[s].members.length,o.group=t[s].group,n[a][r].sts.push(o)}return n};e.$on("$destroy",function(e){a.removeAllListeners()})}]),angular.module("InNet").service("CaseSvc",["$http",function(e){this.fetch=function(t,n,s){return e.get("/api/cases?corps="+t+"&page="+n+"&ipp="+s)},this.fetchAll=function(){return e.get("/api/cases/details")},this.fetchRelativeCase=function(t){return e.get("/api/cases/branch?branch="+t.branch+"&accessLevel="+t.accessLevel+"&corps="+t.corps)},this.fetchDetails=function(t){return e.get("/api/cases/details/"+t)},this.fetchById=function(t){return e.get("/api/cases/"+t)},this.create=function(t){return e.post("/api/cases",t)},this["delete"]=function(t){return e.post("/api/cases/"+t)},this.update=function(t){return e.put("/api/cases/"+t.caseId,t)},this.closeCase=function(t){return e.put("/api/cases/close?id="+t.id,t)}}]),angular.module("InNet").controller("DashboardCtrl",["$scope","$location","SocketSvc","UserSvc","BranchSvc",function(e,t,n,s,r){r.fetchByCorps(s.userCorps()).success(function(t){e.branches=t}),s.fetchOnlineUser().success(function(t){e.users=t}),n.on("userLogin",function(t){e.users.push(t)}),n.on("userDisconnect",function(t){e.users=e.users.filter(function(e){return e.username!=t.username})}),n.on("userLogout",function(t){e.users=e.users.filter(function(e){return e.username!=t.username})}),e.$on("$destroy",function(e){n.removeAllListeners()})}]),angular.module("InNet").directive("minimalizaSidebar",["$timeout",function(e){return{restrict:"A",template:'<a class="navbar-minimalize minimalize-styl-2 btn btn-primary" href="" ng-click="minimalize()"><i class="fa fa-bars"></i></a>',controller:["$scope","$element",function(e,t){e.minimalize=function(){$("body").toggleClass("mini-navbar"),!$("body").hasClass("mini-navbar")||$("body").hasClass("body-small")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},100)):$("body").hasClass("fixed-sidebar")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},300)):$("#side-menu").removeAttr("style")}}]}}]).directive("sideNavigation",["$timeout",function(e){return{restrict:"A",link:function(t,n){e(function(){n.metisMenu()})}}}]).directive("iboxTools",["$timeout",function(e){return{restrict:"A",scope:!0,templateUrl:"views/common/ibox_tools.html",controller:["$scope","$element",function(t,n){t.showhide=function(){var t=n.closest("div.ibox"),s=n.find("i:first"),r=t.find("div.ibox-content");r.slideToggle(200),s.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"),t.toggleClass("").toggleClass("border-bottom"),e(function(){t.resize(),t.find("[id^=map-]").resize()},50)},t.closebox=function(){var e=n.closest("div.ibox");e.remove()}}]}}]).directive("back",["$window",function(e){return{restrict:"A",link:function(t,n,s){n.bind("click",function(){e.history.back()})}}}]),angular.module("InNet").controller("DirDutyListCtrl",["$scope","UserSvc","BranchSvc",function(e,t,n){var s=t.userBranch();n.totalListFindByName(s).success(function(t){e.branch=t,e.onDutyTotal=e.branch.members.filter(function(e){return 1==e.onDuty})})}]),angular.module("InNet").controller("DispatchCtrl",["$scope","$stateParams","$modal","CaseSvc","BranchSvc","CarSvc","UserSvc",function(e,t,n,s,r,a,o){s.fetch(o.userCorps()).success(function(n){e.cases=n,s.fetchById(e.cases[t.caseId]._id).success(function(t){e.caseDetails=t})}),r.fetchByCorps(o.userCorps()).success(function(t){e.branchList=t}),a.fetch().success(function(t){e.carsData=t}),e.addNewCase=function(){n.open({templateUrl:"/partials/casePanel/caseAddModal",controller:"CaseAddModalCtrl",size:"lg",resolve:{caseId:function(){return e.id="新增案件"},branchList:function(){return e.branchList},carsData:function(){return e.carsData},isNew:function(){return!0},caseDetails:function(){return{}}}})},e.editCase=function(){n.open({templateUrl:"/partials/casePanel/caseAddModal",controller:"CaseAddModalCtrl",size:"lg",resolve:{caseId:function(){return e.id=e.cases[t.caseId].caseId},branchList:function(){return e.branchList},carsData:function(){for(var t=e.carsData.length-1;t>=0;t--)for(var n=e.caseDetails.cars.length-1;n>=0;n--)e.carsData[t].radioCode===e.caseDetails.cars[n].radio_code&&(e.carsData[t].isChecked=!0);return e.carsData},isNew:function(){return!1},caseDetails:function(){return e.caseDetails}}})}}]),angular.module("InNet").controller("DutyListCtrl",["$scope","BranchSvc","$stateParams","SocketSvc","UserSvc","$q",function(e,t,n,s,r,a){var o=n.branch;t.totalListFindByName(o).success(function(t){e.branch=t,e.onDutyTotal=e.branch.members.filter(function(e){return 1==e.onDuty})})}]),angular.module("InNet").controller("DutyListEditCtrl",["$scope","BranchSvc","$stateParams","MemberSvc","$location","$window","UserSvc","CarSvc","StMissionFac",function(e,t,n,s,r,a,o,c,i){if(o.accessLevel()<2)var u=o.userBranch();else var u=n.branch;t.totalListFindByName(u).success(function(t){e.branch=t,e.isCorps=t.name.split("救災救護")[1];var n=_.pluck(t.members.filter(function(e){return e.level<2.4}),"name");e.branch.safetyManager=t.safetyManager,e.branch.safetyManagers=n,e.onDutyTotal=0,_.map(e.branch.members,function(t){t.groupIds=_.range(1,Math.round(e.branch.members.length/6),1),t.groupID=t.group+t.groupId})}),e.check=function(e){e.onDuty=!e.onDuty,e.groupID=e.group+e.groupId},e.save=function(){var n=_.groupBy(e.branch.members,function(e){return e.groupID=e.group+e.groupId,e.isChecked=!0,e.onDuty?e.groupID:"offDuty"});delete n.offDuty;var s=[],r=[],c=i.groups().preSt;for(var l in n){var m={caseId:"pending",branch:u,director:e.branch.director,position:i.position().defaultPos,positions:i.position().poss,groups:i.groups().branch,area:i.area().defaultArea,areas:i.area().areas,floor:1,floors:[1],creator:o.currentUser()};c.indexOf(l.slice(0,l.length-1))>-1&&(m.members=_.pluck(n[l],"_id"),m.group=l,m.workingTime=_.min(n[l],function(e){return e.workingTime}).workingTime,s.push(m),r.push.apply(r,m.members))}var d=e.branch.members.filter(function(e){return e.onDuty});e.branch.members.forEach(function(e){e.isChecked=r.indexOf(e._id)>-1}),t.updateMission({branch:e.branch.name,director:e.branch.director,dispatchNum:d.length,safetyManager:e.branch.safetyManager,members:e.branch.members,preStrikeTeams:s,strikeTeamMembers:r}),a.history.back()}}]),angular.module("InNet").service("GeoSvc",["$q","$http",function(e,t){this.getGeolocationCoordinates=function(){var t=e.defer();return navigator.geolocation.getCurrentPosition(function(e){t.resolve(e.coords)},function(e){t.resolve(null)}),t.promise},this.getGeoEncodedInfo=function(t){var n=e.defer(),s=new google.maps.Geocoder;return s&&s.geocode({address:t},function(e,t){n.resolve(t==google.maps.GeocoderStatus.OK?e[0].geometry.location:"Geocoding failed: "+t)}),n.promise},this.fetchBaseLocation=function(e){return t.get("/api/geolocations?corps="+e)},this.getDistance=function(e,t){"undefined"==typeof Number.prototype.toRad&&(Number.prototype.toRad=function(){return this*Math.PI/180});var n=6371,s=(t.lat-e.lat).toRad(),r=(t.lng-e.lng).toRad(),a=Math.sin(s/2)*Math.sin(s/2)+Math.cos(e.lat.toRad())*Math.cos(t.lat.toRad())*Math.sin(r/2)*Math.sin(r/2),o=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return n*o}}]),angular.module("InNet").controller("LoginCtrl",["$scope","UserSvc","store","$state","jwtHelper","$http","SocketSvc",function(e,t,n,s,r,a,o){var c=null;e.user={},e.login=function(){t.login(e.user).success(function(e){e.success?(n.set("jwt",e.token),a.defaults.headers.common["x-access-token"]=e.token,c=e.token):console.log("password is not existed!")}).then(function(){o.init(c),o.emit("login")}).then(function(){if("admin"==r.decodeToken(c).role){var e=r.decodeToken(c).branch;s.go("大隊"==e.slice(e.length-2,e.length)?"dutyDesk.corps":"dutyDesk.branch")}else s.go("director.safety.index")})}}]),angular.module("InNet").controller("MapIndexCtrl",["$scope","leafletData","GeoSvc",function(e,t,n){n.getGeolocationCoordinates().then(function(t){e.nowPos.lat=t.latitude,e.nowPos.lng=t.longitude,e.nowPos.zoom=17}),angular.extend(e,{nowPos:{lat:24.988,lng:121.5752,zoom:17},controls:{draw:{}}}),t.getMap().then(function(t){var n=e.controls.edit.featureGroup;t.on("draw:created",function(e){var t=e.layer;n.addLayer(t),FeatureCollections.push(t.toGeoJSON())})})}]),angular.module("InNet").controller("MemberAccountModalCtrl",["$scope","UserSvc","MemberSvc","member","$modalInstance",function(e,t,n,s,r){e.user=s,e.save=function(){_.isEmpty(e.user)?console.log("please enter your account and password!"):e.user.account?e.user.password?(t.activate(e.user),n.updateUser(s.name),r.close(e.user)):console.log("password can't be blank"):(console.log("account can't be blank!"),e.user.password||console.log("passwod can't be blank!"))},e.cancel=function(){r.dismiss("cancel")}}]),angular.module("InNet").controller("MemberCtrl",["$scope","MemberSvc","$stateParams",function(e,t,n){e.branch=n.branch,t.findByBranch(n.branch).success(function(t){e.members=t,e.members.forEach(function(e){e.workingTime=moment.duration(e.workingTime,"seconds")})})}]),angular.module("InNet").controller("MemberEditCtrl",["$scope","MemberSvc","BranchSvc","$stateParams","$window","$modal","$state","UserSvc",function(e,t,n,s,r,a,o,c){e.alerts=[],e.memberDeleted=!1;var i=null;e.accessLevel=c.accessLevel();var u=function(){t.findByBranch(s.branch).success(function(t){e.members=t,e.members.forEach(function(e){e.workingTime=moment.duration(e.workingTime,"seconds")})})};u(),e.save=function(){var t=_.pluck(e.members.filter(function(e){return e.level>1.3}),"name");n.update({branch:s.branch,members:_.pluck(e.members,"_id"),directors:t,director:t[0],safetyManager:t[0]}).success(function(){r.history.back()})},e.addNewMember=function(){var t=a.open({templateUrl:"views/member/member.modal.html",controller:"MemberModalCtrl",size:"md",resolve:{branch:function(){return s.branch},member:function(){return{workingTime:null}}}});t.result.then(function(t){t&&u(),e.alerts.push({type:"success",msg:"人員新增成功！ "+t.name+" 已加入 "+t.branch})})},e.update=function(t){var n=t,r=a.open({templateUrl:"views/member/member.modal.html",controller:"MemberModalCtrl",size:"md",resolve:{branch:function(){return s.branch},member:function(){return{memberId:t._id,id:t.id,name:t.name,title:t.title,branches:t.branches,corps:t.corps,radioCode:t.radioCode,workingTime:60*t.workingTime.minutes()+t.workingTime.seconds()}}}});r.result.then(function(t){u(),e.alerts.push({type:"info",msg:n.name+"修改成功!"})})},e.activateAccount=function(t){var n=e.members.filter(function(e){return e.isUser});if(n.length<3){var s=a.open({templateUrl:"views/member/member.account.html",controller:"MemberAccountModalCtrl",size:"md",resolve:{member:function(){return t}}});s.result.then(function(t){u(),e.alerts.push({type:"info",msg:t.name+" 已開通為使用者"})})}else e.alerts.push({type:"warning",msg:"無法開通"+t.name+" 因為使用者已超過3位，請解除其他人帳號後再開通 "})};var l=function(n){c.removeUser(i.name).success(function(s){t.removeUser(s.username),e.closeAlert(n),u()})},m=function(n){e.memberDeleted=!0,t.deleteMember(i).success(function(){e.memberDeleted=!1}),e.closeAlert(n),u()},d=function(t){e.memberDeleted=!1,e.closeAlert(t)};e.deleteAlert=function(t){e.alerts.push({type:"danger",msg:"是否確定要刪除！"+t.name,execute:m,cancel:d}),i=t},e.deActivateAlert=function(t){var n=e.members.filter(function(e){return e.isUser});1==n.length?e.alerts.push({type:"warning",msg:"每分隊至少要有1個使用者，無法取消"+t.name+"的登入權限"}):(e.alerts.push({type:"danger",msg:"是否確定要解除"+t.name+"登入權限",execute:l,cancel:d}),i=t)},e.closeAlert=function(t){e.alerts.splice(t,1)}}]),angular.module("InNet").controller("MemberModalCtrl",["$scope","branch","MemberSvc","$modalInstance","$state","member","BranchSvc","UserSvc",function(e,t,n,s,r,a,o,c){e.alerts=[],e.isNew=_.isNull(a.workingTime),e.member={id:a.id||"",name:a.name||null,title:"消防隊員",titles:["消防隊員","小隊長","分隊長","中隊長","大隊長","副大隊長"],branch:a.branch||t,workingTime:a.workingTime||1200,radioCode:a.radioCode||null,mission:"瞄子手",missions:["瞄子手","副瞄子手","司機","小組長","安全管制員","聯絡官"],corps:c.userCorps(),corpss:["第一救災救護大隊","第三救災救護大隊"]},o.fetchByCorps(c.userCorps()).success(function(t){if(e.branches=t,!e.isNew){for(var n=[],s=t.length-1;s>=0;s--)n.push(t[s].name);e.member.branches=n}});var i=function(e){var t=e.split("").slice(-2).join("");return"大隊"==t||"中隊"==t?"北海":e.split("").slice(0,2).join("")};e.save=function(){e.member.name&&(e.member.radioCodePrefix=i(e.member.branch),n.create(e.member).success(function(){e.member.workingTime=moment.duration(parseInt(e.member.workingTime),"seconds")}).then(function(){s.close(e.member)}))},e.update=function(){var t={memberId:a.memberId,id:"",name:e.member.name,corps:e.member.corps,branch:e.member.branch,title:e.member.title,workingTime:e.member.workingTime,radioCode:e.member.radioCode,radioCodePrefix:i(e.member.branch)};e.member.name&&(n.updateByMemberId(t),s.close(t))},e.cancel=function(){s.dismiss("cancel")}}]),angular.module("InNet").service("MemberSvc",["$http",function(e){this.fetch=function(){return e.get("/api/members")},this.findByBranch=function(t){return e.get("/api/members/"+t)},this.fetchOnDuty=function(t){return e.get("/api/members/onDuty?branch="+t)},this.create=function(t){return e.post("/api/members/",t)},this.update=function(t){return e.put("/api/members/",t.id)},this.updateOnDuty=function(t){return e.put("/api/members/onDuty/findById?memberId="+t.memberId,t)},this.updateByMemberId=function(t){return e.put("/api/members/findById/"+t.memberId,t)},this.updateIsChecked=function(t){return e.put("/api/members?id="+t.memberId,t)},this.updateUser=function(t){return e.put("/api/members/user?username="+t)},this.removeUser=function(t){return e.put("/api/members/user/remove?username="+t)},this.deleteMember=function(t){return e["delete"]("/api/members/"+t._id)}}]),angular.module("InNet").controller("NavCtrl",["$scope","BranchSvc","store","jwtHelper","UserSvc",function(e,t,n,s,r){e.username=r.currentUser(),e.branch=r.userBranch(),t.fetchByCorps(r.userCorps()).success(function(t){e.branches=t}),e.isValid=function(e){return r.isValid(e)},e.isCorps="大隊"==e.branch.slice(e.branch.length-2,e.branch.length)}]),angular.module("InNet").service("NtfSvc",["$http",function(e){this.fetch=function(){return e.get("/api/nfts")}}]),angular.module("InNet").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,n){t.otherwise("/login"),e.state("anon",{url:"","abstract":!0,template:"<ui-view>"}).state("anon.login",{url:"/login",templateUrl:"views/login.html",controller:"LoginCtrl"}).state("anon.404",{url:"/404",templateUrl:"views/404.html"}),e.state("dutyDesk",{"abstract":!0,url:"/dutyDesk",templateUrl:"views/common/content.html",data:{requiredLogin:!0,role:["admin"]}}).state("dutyDesk.corps",{url:"/corps",templateUrl:"views/dashboard/corps.dashboard.html",controller:"DashboardCtrl",data:{requiredLogin:!0,role:["admin"]}}).state("dutyDesk.branch",{url:"/branch",templateUrl:"views/dashboard/branch.dashboard.html",controller:"DashboardCtrl",date:{requiredLogin:!0,role:["admin"]}}).state("dutyDesk.case",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.case.index",{url:"/case",templateUrl:"views/case/case.index.html",controller:"CaseCtrl"}).state("dutyDesk.case.new",{url:"/case/new",templateUrl:"views/case/case.new.html",controller:"CaseNewCtrl"}).state("dutyDesk.case.show",{url:"/case/:id/show",templateUrl:"views/case/case.show.html",controller:"CaseShowCtrl"}).state("dutyDesk.case.edit",{url:"/case/:id/edit",templateUrl:"views/case/case.edit.html",controller:"CaseEditCtrl"}).state("dutyDesk.safety",{url:"/case/:id",templateUrl:"views/summary/summary.index.html",controller:"SummaryCtrl"}).state("dutyDesk.dutylist",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.dutylist.show",{url:"/dutylist/:branch",templateUrl:"views/dutylist/dutylist.index.html",controller:"DutyListCtrl"}).state("dutyDesk.dutylist.edit",{url:"/dutylist/:branch/edit",templateUrl:"views/dutylist/dutylist.edit.html",controller:"DutyListEditCtrl"}).state("dutyDesk.member",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.member.show",{url:"/member/:branch",templateUrl:"views/member/member.index.html",controller:"MemberCtrl"}).state("dutyDesk.member.edit",{url:"/member/:branch/edit",templateUrl:"views/member/member.edit.html",controller:"MemberEditCtrl"}).state("dutyDesk.car",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.car.show",{url:"/car/:branch",templateUrl:"views/cars/car.index.html",controller:"CarIndexCtrl"}).state("dutyDesk.car.edit",{url:"/car/:branch/edit",templateUrl:"views/cars/car.edit.html",controller:"CarEditCtrl"}),e.state("director",{"abstract":!0,url:"",templateUrl:"views/director/director.content.html",data:{requiredLogin:!0,role:["user"]}}).state("director.safety",{"abstract":!0,url:"/safety",template:"<ui-view>"}).state("director.safety.index",{url:"/index",templateUrl:"views/safety/safety.index.html",controller:"SafetyIndexCtrl"}).state("director.safety.cmdShow",{url:"/cmd/:caseId/show",templateUrl:"views/safety/safety.cmd.show.html",controller:"SafetyCmdShowCtrl"}).state("director.safety.branchShow",{url:"/:caseId/show",templateUrl:"views/safety/safety.branch.show.html",controller:"SafetyShowCtrl"}).state("director.safety.management",{url:"/:caseId/manage",templateUrl:"views/safety/safety.manage.html",controller:"SafetyManageCtrl"}).state("director.safety.summary",{url:"/:caseId/summary",templateUrl:"views/summary/summary.index.html",controller:"SummaryCtrl"}).state("director.dutylist",{"abstract":!0,url:"/dutylist",template:"<ui-view>"}).state("director.dutylist.index",{url:"/index",templateUrl:"views/dutylist/director.dutylist.index.html",controller:"DirDutyListCtrl"}).state("director.dutylist.edit",{url:"/edit",templateUrl:"views/dutylist/director.dutylist.edit.html",controller:"DutyListEditCtrl"})}]).run(["$rootScope","$state","$stateParams","store","jwtHelper","UserSvc","SocketSvc",function(e,t,n,s,r,a,o){e.$on("$stateChangeStart",function(e,n,o,c,i){"anon.login"==n.name?s.remove("jwt"):n.data&&n.data.requiredLogin&&(a.isLoggedIn()?-1==n.data.role.indexOf(r.decodeToken(s.get("jwt")).role)&&(e.preventDefault(),t.go("anon.login")):(e.preventDefault(),t.go("anon.login")))}),e.$on("$stateChangeError",function(e){e.preventDefault()})}]),angular.module("InNet").controller("SafetyCmdShowCtrl",["$scope","CaseSvc","BranchSvc","UserSvc","$stateParams","GeoSvc",function(e,t,n,s,r,a){var o=s.userBranch();n.totalListFindByName(o).success(function(t){e.members=t.members.filter(function(e){return e.limitTime=moment.duration(e.workingTime,"seconds"),1==e.onDuty})}),t.fetchDetails(r.caseId).success(function(t){if(e.caseDetail=t,t.location){var n=JSON.parse(t.location);e.markers.mainMarker={lat:Number(n.lat),lng:Number(n.lng),message:"案件標的"},e.battleRadiuss=t.battleRadiuss}}).then(function(){n.fetchOnDutyBranches(e.caseDetail.branches).success(function(t){e.onDutyBranches=t,e.onDutyBranches.forEach(function(t){t.members.forEach(function(e){t.director==e.name&&(t.directorRadioCode=e.radioCodePrefix+e.radioCode),t.safetyManager==e.name&&(t.safetyManagerRadioCode=e.radioCodePrefix+e.radioCode)}),e.battleRadiuss.forEach(function(e){var n=JSON.parse(e);t.name==n.base&&(t.estimatedArrivingTime=Math.round(n.d/50*60))})})})}),a.getGeolocationCoordinates().then(function(t){e.nowPos.lat=t.latitude,e.nowPos.lng=t.longitude,e.nowPos.zoom=17,e.markers.nowPos={lat:e.nowPos.lat,lng:e.nowPos.lng,message:"現在位置"}}),angular.extend(e,{nowPos:{lat:24.988,lng:121.5752,zoom:13},markers:{}})}]),angular.module("InNet").controller("SafetyIndexCtrl",["$scope","CaseSvc","UserSvc",function(e,t,n){var s={branch:n.userBranch(),accessLevel:n.accessLevel(),corps:n.userCorps()};t.fetchRelativeCase(s).success(function(t){e.cases=t,t.forEach(function(e){e.dispatchBranches="",e.branches.forEach(function(t){e.dispatchBranches+=t+" "})})}),e.isBranchMember=n.accessLevel()<2}]),angular.module("InNet").controller("SafetyManageCtrl",["$scope","$stateParams","$modal","StSvc","$state","MemberSvc","$log","UserSvc","BranchSvc","SocketSvc","CaseSvc","StMissionFac",function(e,t,n,s,r,a,o,c,i,u,l,m){var d=c.userBranch(),f=null;e.quickStart=!1,e.apartment=!0,e.ACCESSLEVEL=c.accessLevel(),e.branchOptions={branch:d,branches:[]},l.fetchById(t.caseId).success(function(t){f=t,e.apartment="住宅火警"==t.env?!0:!1,e.branchOptions.branches=t.branches,e.branchOptions.branches.splice(0,0,d)}),i.fetchByName(d).success(function(t){e.details=t}).then(function(){e.ACCESSLEVEL>1?s.fetchByCase(t.caseId).success(function(t){e.strikeTeams=t}):s.fetch(t.caseId,d).success(function(t){e.strikeTeams=t,e.details.members.length<8&&_.isEmpty(e.strikeTeams)&&(e.quickStart=!0)})}),u.on("newSt",function(n){e.ACCESSLEVEL>1&&angular.equals(t.caseId,n.caseId)?e.strikeTeams.push(n):angular.equals(d,n.branch)&&angular.equals(t.caseId,n.caseId)&&e.strikeTeams.push(n)}),u.on("updateSt",function(t){for(var n=(angular.copy(t.members),
e.strikeTeams.length-1);n>=0;n--)angular.equals(e.strikeTeams[n]._id,t.id)&&(e.strikeTeams[n].position=t.position,e.strikeTeams[n].area=t.area,e.strikeTeams[n].floor=t.floor,e.strikeTeams[n].mission=t.mission)}),u.on("dismiss",function(t){var n=t.stId;e.strikeTeams=e.strikeTeams.filter(function(e){return e._id!=n})}),e.strikeTeam=function(){n.open({templateUrl:"views/safety/safety.modal.html",controller:"SafetyModalCtrl",size:"md",resolve:{stId:function(){return _.isEmpty(e.strikeTeams)?0:e.strikeTeams[e.strikeTeams.length-1].id},branch:function(){return e.branchOptions.branch},caseDetail:function(){return f}}})},e.openSettingModal=function(e,t){n.open({templateUrl:"views/safety/safety.setting.modal.html",controller:"SafetySettingCtrl",size:"lg",resolve:{strikeTeam:function(){return e},caseDetail:function(){return f}}})},e.dismiss=function(t,n){u.emit("dismissStrikeTeam",{id:t._id,members:t.members}),e.strikeTeams.splice(n,1)},e.quickOrganizing=function(){e.quickStart=!1;var t=(e.details.members.filter(function(e){return"司機"==e.mission||"安全管制員"==e.mission||"救護人員"==e.mission?!1:!0}),{position:m.position().defaultPos,positions:m.position().poss,group:m.groups().branch[1],groups:m.groups().branch,area:m.area().defaultArea,areas:m.area().areas,floor:1,floors:[1,2,3,4,5]});u.emit("createStrikeTeam",t)},e.$on("$destroy",function(e){u.removeAllListeners()})}]),angular.module("InNet").controller("SafetyModalCtrl",["$scope","$modalInstance","$stateParams","StSvc","MemberSvc","$state","$window","UserSvc","BranchSvc","SocketSvc","branch","caseDetail","StMissionFac","stId",function(e,t,n,s,r,a,o,c,i,u,l,m,d,f){e.alerts=[],e.apartment="住宅火警"==m.env?!0:!1,e.title=l+(f+1),i.fetchByName(l).success(function(t){e.details=t}).then(function(){e.details&&(e.details.members=e.details.members.filter(function(e){return 1!=e.isChecked}),e.details.members.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}))}),e.strikeTeam={position:d.position().defaultPos,positions:d.position().poss,group:d.groups().branch[1],groups:d.groups().branch,area:d.area().defaultArea,areas:d.area().areas,floor:m.floor,floors:m.floor<5?_.range(1,6,1):_.range(m.floor-2,m.floor+3,1)},e.check=function(e){e.isChecked=!e.isChecked},e.cancel=function(){t.dismiss("cancel")},e.save=function(){var s=e.details.members.filter(function(e){return e.isChecked===!0});if(s.length>2){var r={id:f+1||0,caseId:n.caseId,branch:e.details.name,director:e.details.director,position:e.strikeTeam.position,positions:e.strikeTeam.positions,group:e.strikeTeam.group,groups:e.strikeTeam.groups,area:e.strikeTeam.area,areas:e.strikeTeam.areas,floor:e.strikeTeam.floor,floors:e.strikeTeam.floors,memberIds:_.pluck(s,"_id"),members:s,workingTime:_.min(s,function(e){return e.workingTime}).workingTime,creator:c.currentUser()};u.emit("createStrikeTeam",r),t.close()}else e.alerts.push({type:"danger",msg:"兩人以上才能編組"})},e.closeAlert=function(t){e.alerts.splice(t,1)}}]),angular.module("InNet").controller("SafetySettingCtrl",["$scope","strikeTeam","$modalInstance","StSvc","$state","MemberSvc","CaseSvc","$stateParams","SocketSvc","caseDetail",function(e,t,n,s,r,a,o,c,i,u){e.strikeTeam=t,e.apartment="住宅火警"==u.env?!0:!1;var l=[];o.fetchDetails(c.caseId).success(function(t){e.dispatch=t.branchIds,e.currentBranch=e.dispatch[0].name;var n=_.pluck(t.branchIds,"members");e.members=[],n.forEach(function(t){e.members.push.apply(e.members,t)}),e.members=e.members.filter(function(e){return!e.isChecked})}),e.chooseBranch=function(t){e.currentBranch=t},e.cancel=function(){n.dismiss("cancel")},e.check=function(e){e.isChecked=!e.isChecked,l.push(e)},e.uncheck=function(e,t){e.isChecked=!e.isChecked,l.splice(_.pluck(l,"_id").indexOf(e._id),1)},e.save=function(){e.strikeTeam.members.push.apply(e.strikeTeam.members,l),i.emit("updateStrikeTeam",{id:t._id,position:t.position,area:t.area,floor:t.floor,group:t.group,memberIds:_.pluck(e.strikeTeam.members,"_id"),members:e.strikeTeam.members}),n.close("dismiss")}}]),angular.module("InNet").controller("SafetyShowCtrl",["$scope","CaseSvc","UserSvc","SocketSvc","GeoSvc","BranchSvc","$stateParams",function(e,t,n,s,r,a,o){var c=n.userBranch();a.totalListFindByName(c).success(function(t){e.members=t.members.filter(function(e){return e.limitTime=moment.duration(e.workingTime,"seconds"),1==e.onDuty})}),t.fetchDetails(o.caseId).success(function(t){if(e.caseDetail=t,t.location){var n=JSON.parse(t.location);e.markers.mainMarker={lat:Number(n.lat),lng:Number(n.lng),message:"案件標的"}}}),r.getGeolocationCoordinates().then(function(t){e.nowPos.lat=t.latitude,e.nowPos.lng=t.longitude,e.nowPos.zoom=17,e.markers.nowPos={lat:e.nowPos.lat,lng:e.nowPos.lng,message:"現在位置"}}),angular.extend(e,{nowPos:{lat:24.988,lng:121.5752,zoom:13},markers:{}})}]),angular.module("InNet").service("SocketSvc",["$rootScope","store","$q","$timeout",function(e,t,n,s){this.init=function(e){var n=null;return n=e?e:t.get("jwt"),io.connect("http://localhost:3000",{query:"token="+n,forceNew:!0})};var r=this.init();this.on=function(t,n){this.init().on(t,function(){var t=arguments;e.$apply(function(){n.apply(r,t)})})},this.emit=function(t,n,s){this.init().emit(t,n,function(){var t=arguments;e.$apply(function(){s&&s.apply(r,t)})})},this.removeAllListeners=function(t,n){this.init().removeAllListeners(t,function(){var t=arguments;e.$apply(function(){n.apply(r,t)})})}}]),angular.module("InNet").factory("StMissionFac",[function(){return{groups:function(){return{corps:["聯絡組","水源組","後勤組"],squadron:[""],branch:["帶隊官","滅火小組","搜救小組","搶救小組","後勤小組"],preSt:["搜救小組","搶救小組","滅火小組"]}},position:function(){return{defaultPos:"第一面",poss:["第一面","第二面","第三面","第四面"]}},area:function(){return{defaultArea:"第一區",areas:["第一區","第二區","第三區","第四區","第五區"]}}}}]),angular.module("InNet").service("StSvc",["$http",function(e){this.fetch=function(t,n){return e.get("/api/strikeTeams?caseId="+t+"&branch="+n)},this.fetchByCase=function(t){return e.get("/api/strikeTeams/total?caseId="+t)},this.findById=function(t){return e.get("/api/strikeTeams/"+t)},this.dismissSt=function(t){return e.put("/api/strikeTeams/dismiss?id="+t.id)},this.updateSt=function(t){return e.put("/api/strikeTeams/update?id="+t.id,t)},this.updateTimeRecord=function(t){return e.put("/api/strikeTeams/time?id="+t.id,t)},this.create=function(t){return e.post("/api/strikeTeams",t)},this.count=function(t){return e.get("/api/strikeTeams/count?caseId="+t)}}]),angular.module("InNet").controller("SummaryCtrl",["$scope","StSvc","$stateParams","$interval","$state","SocketSvc","CaseSvc",function(e,t,n,s,r,a,o){e.isCollapsed=!0,e.members=[],a.on("timerRunning",function(t){for(var n=e.strikeTeams.length-1;n>=0;n--)angular.equals(e.strikeTeams[n]._id,t.stId)&&(e.strikeTeams[n].timerRunning=t.timerRunning)}),a.on("progressUpdate",function(t){for(var n=e.strikeTeams.length-1;n>=0;n--)angular.equals(e.strikeTeams[n]._id,t.id)&&(e.strikeTeams[n].timer=moment.duration(t.millis),e.strikeTeams[n].progress=t.progress,e.strikeTeams[n].progressState=t.progressState)}),a.on("newSt",function(t){if(angular.equals(c,t.caseId)){var n=angular.copy(t);e.strikeTeams.push(n)}e.deploys=i(e.strikeTeams)}),a.on("updateSt",function(n){t.fetchByCase(c).success(function(t){e.strikeTeams=t,e.strikeTeams.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}),e.deploys=i(e.strikeTeams)})}),a.on("dismiss",function(n){t.fetchByCase(c).success(function(t){e.strikeTeams=t,e.deploys=i(e.strikeTeams)})});var c=n.caseId;o.fetchById(c).success(function(t){e.apartment="住宅火警"==t.env?!0:!1,e.caseDetail=t,e.position={defaultPos:"第一面",positions:["第一面","第二面","第三面","第四面"],floor:e.caseDetail.floor,floors:e.caseDetail.floor<5?_.range(1,6,1):_.range(e.caseDetail.floor-2,e.caseDetail.floor+3,1)}}),t.fetchByCase(c).success(function(t){t&&(e.strikeTeams=t,e.strikeTeams.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}),e.deploys=i(e.strikeTeams))});var i=function(t){var n=_.range(4).map(function(){return _.range(5).map(function(){return{totalMember:0,stTotal:0,sts:[]}})});if(t)for(var s=t.length-1;s>=0;s--){var r=null,a=_.indexOf(t[s].positions,t[s].position);r=e.apartment?_.indexOf(t[s].floors,t[s].floor):_.indexOf(t[s].areas,t[s].area),n[a][r].stTotal+=1,n[a][r].totalMember+=t[s].members.length;var o={};o.id=t[s].branch+t[s].id,o.number=t[s].members.length,o.group=t[s].group,n[a][r].sts.push(o)}return n};e.$on("$destroy",function(e){a.removeAllListeners()})}]),angular.module("InNet").controller("TimerCtrl",["$scope","SocketSvc",function(e,t){e.timerRunning=!1,e.startTimer=function(n,s){e.$broadcast("timer-start"),e.timerRunning=!0,t.emit("timer",{stId:n._id,timerRunning:!0})},e.stopTimer=function(n,s){e.$broadcast("timer-stop"),e.timerRunning=!1,t.emit("timer",{stId:n._id,timerRunning:!1})}}]),angular.module("InNet").controller("TopNavCtrl",["$scope","$location","$state","$interval","store","SocketSvc","UserSvc","$window",function(e,t,n,s,r,a,o,c){e.currentTime=moment().format("MMM Do, h:mm:ss a"),s(function(){moment.locale("zh-tw"),e.currentTime=moment().format("MMM Do, h:mm:ss a")},1e3),e.logout=function(){o.currentAccount();a.emit("logout"),n.go("anon.login")}}]),angular.module("InNet").service("UserSvc",["$http","store","jwtHelper",function(e,t,n){this.fetchOnlineUser=function(){return e.get("/api/users/userState")},this.activate=function(t){return e.post("/api/users",t)},this.removeUser=function(t){return e["delete"]("/api/users/delete?username="+t)},this.login=function(t){return e.post("/api/users/authenticate",t)},this.isLoggedIn=function(){return t.get("jwt")},this.isValid=function(e){return this.isLoggedIn&&(n.decodeToken(t.get("jwt")).accessLevel>1||n.decodeToken(t.get("jwt")).branch==e)?!0:!1},this.userBranch=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).branch:void 0},this.userCorps=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).corps:void 0},this.currentUser=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).username:void 0},this.currentAccount=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).account:void 0},this.accessLevel=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).accessLevel:void 0},this.caseId=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).caseId:void 0}}]);
//# sourceMappingURL=data:application/json;base64,