angular.module("InNet",["ui.router","ui.bootstrap","timer","angular-storage","angular-jwt","leaflet-directive","angular.filter"]),angular.module("InNet").service("BranchSvc",["$http",function(e){this.fetch=function(t){return e.get("/api/branch?corps="+t)},this.fetchByName=function(t){return e.get("/api/branch/name?branch="+t)},this.totalListFindByName=function(t){return e.get("/api/branch/name/total?branch="+t)},this.getDetails=function(t){return e.get("/api/branch/"+t)},this.update=function(t){return e.put("/api/branch/"+t.branch,t)},this.updateDirector=function(t){return e.put("/api/branch?branch="+t.branch,t)}}]),angular.module("InNet").controller("CarEditCtrl",["$scope",function(e){}]),angular.module("InNet").controller("CarIndexCtrl",["$scope",function(e){}]),angular.module("InNet").service("CarSvc",["$http",function(e){this.fetch=function(){return e.get("/api/cars")},this.findByBranch=function(t){return e.get("/api/cars/"+t)},this.update=function(t){return e.put("/api/cars/"+t.id,t)}}]),angular.module("InNet").controller("CaseCtrl",["$scope","$stateParams","$modal","CaseSvc","$log","SocketSvc","UserSvc",function(e,t,n,s,r,i,a){e.maxSize=5,e.bigTotalItems=175,e.bigCurrentPage=1,s.fetch(a.userCorps()).success(function(t){e.cases=t}),i.on("newCase",function(t){e.cases.unshift(t)}),i.on("caseModified",function(t){e.cases[t.caseId-1]=t}),e.choose=function(t){s.findById(e.cases[t]._id).success(function(t){e.caseDetails=t})},e.addNewCase=function(){var t=n.open({templateUrl:"views/case/case.modal.html",controller:"CaseModalCtrl",size:"lg",resolve:{caseId:function(){return _.isEmpty(e.cases)?0:e.cases[0].caseId},caseDetails:function(){return{}}}});t.result.then(function(e){console.log(e)},function(){r.info("Modal dismissed at: "+new Date)})},e.editCase=function(t){n.open({templateUrl:"views/case/case.modal.html",controller:"CaseModalCtrl",size:"lg",resolve:{caseId:function(){return t},caseDetails:function(){return e.caseDetails}}})}}]),angular.module("InNet").controller("CaseModalCtrl",["$scope","CarSvc","$modalInstance","CaseSvc","$state","caseId","caseDetails","StSvc","$window","BranchSvc","UserSvc","NtfSvc",function(e,t,n,s,r,i,a,c,o,u,l,m){function d(e){var t=[],n=[],s=[];if(e.cars){for(var r=e.cars.length-1;r>=0;r--)t.push(e.cars[r].radioCode),n.push(e.cars[r]._id),s.push(e.cars[r].branch);return{dispatchList:t,carIds:n,branches:s}}return{}}function f(t){for(var n=_.unique(t),s=[],r=0;r<e.branches.length;r++)n.indexOf(e.branches[r].name)>-1&&s.push(e.branches[r]._id);return s}if(_.isEmpty(a))e.isNew=!0,h=[];else{e.isNew=!1;var h=a.cars}e.nftOption={},m.fetch().success(function(t){e.nftOption.nfts=t}).then(function(){e.nftOption.nft=e.nftOption.nfts[0]}),u.fetch(l.userCorps()).success(function(t){e.branches=t}),e.caseObj={address:a.address||null,phone:a.phone||null,type:a.type||"火警",types:["火警","救護","災害","檢舉","其他"],env:"住宅火警",envs:["住宅火警","高樓、地下與工廠","搶救困難區","其他"],floor:1,carIds:d(a).carIds||[],dispatchList:d(a).dispatchList||[],branches:d(a).branches||[]},e.dispatchList=e.caseObj.dispatchList.join(" "),e.getCars=function(n){t.findByBranch(n.name).success(function(t){for(var n=t.length-1;n>=0;n--)e.caseObj.carIds.indexOf(t[n]._id)>-1&&(t[n].isChecked=!0);e.cars=t})},e.cancel=function(){n.dismiss("cancel")},e.cancelDispatch=function(t){t.isChecked=!1,h.splice(h.indexOf(t),1),e.caseObj.carIds.splice(e.caseObj.dispatchList.indexOf(t._id),1),e.caseObj.dispatchList.splice(e.caseObj.dispatchList.indexOf(t.radioCode),1),e.caseObj.branches.splice(e.caseObj.dispatchList.indexOf(t.branch),1),e.dispatchList=e.caseObj.dispatchList.join(" ")},e.dispatch=function(t){t.isChecked=!0,h.push(t),e.caseObj.carIds.push(t._id),e.caseObj.dispatchList.push(t.radioCode),e.caseObj.branches.push(t.branch),e.dispatchList=e.caseObj.dispatchList.join(" ")},e.closeCase=function(){c.count(a._id).success(function(e){e>0?o.alert("尚有隊員在安全管制"):(s.closeCase({id:a._id,isOngoing:!1}).success(function(e){console.log(e)}),n.dismiss("cancel"),r.reload())})},e.save=function(){s.create({caseId:i+1,address:e.caseObj.address||"測試",officerReceiver:l.currentUser()||"劉曉曼",type:e.caseObj.type||"救護",phone:e.caseObj.phone||"測試",branches:_.unique(e.caseObj.branches),branchIds:f(e.caseObj.branches),cars:e.caseObj.carIds,isOngoing:!0,corps:l.userCorps(),env:e.caseObj.env,floor:e.caseObj.floor}).success(function(e){n.close(e)})},e.update=function(){var t={id:a._id,caseId:i,address:e.caseObj.address,officerReceiver:l.currentUser()||"劉曉曼",type:e.caseObj.type,phone:e.caseObj.phone,branches:_.unique(e.caseObj.branches),branchIds:f(e.caseObj.branches),cars:e.caseObj.carIds,isOngoing:!0,env:e.caseObj.env,floor:e.caseObj.floor};s.update(t),n.dismiss("cancel")}}]),angular.module("InNet").service("CaseSvc",["$http",function(e){this.fetch=function(t){return e.get("/api/cases?corps="+t)},this.fetchAll=function(){return e.get("/api/cases/details")},this.fetchRelativeCase=function(t){return e.get("/api/cases/branch?branch="+t.branch+"&accessLevel="+t.accessLevel+"&corps="+t.corps)},this.fetchDetails=function(t){return e.get("/api/cases/details/"+t)},this.findById=function(t){return e.get("/api/cases/"+t)},this.create=function(t){return e.post("/api/cases",t)},this.update=function(t){return e.put("/api/cases/"+t.id,t)},this["delete"]=function(t){return e.post("/api/cases/"+t)},this.closeCase=function(t){return e.put("/api/cases/close?id="+t.id,t)}}]),angular.module("InNet").controller("DashboardCtrl",["$scope","$location","SocketSvc","UserSvc","BranchSvc",function(e,t,n,s,r){r.fetch(s.userCorps()).success(function(t){e.branches=t}),s.fetchOnlineUser().success(function(t){e.users=t}),n.on("userLogin",function(t){e.users.push(t)}),n.on("userDisconnect",function(t){e.users=e.users.filter(function(e){return e.username!=t.username})}),n.on("userLogout",function(t){e.users=e.users.filter(function(e){return e.username!=t.username})}),e.$on("$destroy",function(e){n.removeAllListeners()})}]),angular.module("InNet").directive("minimalizaSidebar",["$timeout",function(e){return{restrict:"A",template:'<a class="navbar-minimalize minimalize-styl-2 btn btn-primary" href="" ng-click="minimalize()"><i class="fa fa-bars"></i></a>',controller:["$scope","$element",function(e,t){e.minimalize=function(){$("body").toggleClass("mini-navbar"),!$("body").hasClass("mini-navbar")||$("body").hasClass("body-small")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},100)):$("body").hasClass("fixed-sidebar")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},300)):$("#side-menu").removeAttr("style")}}]}}]).directive("sideNavigation",["$timeout",function(e){return{restrict:"A",link:function(t,n){e(function(){n.metisMenu()})}}}]).directive("iboxTools",["$timeout",function(e){return{restrict:"A",scope:!0,templateUrl:"views/common/ibox_tools.html",controller:["$scope","$element",function(t,n){t.showhide=function(){var t=n.closest("div.ibox"),s=n.find("i:first"),r=t.find("div.ibox-content");r.slideToggle(200),s.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"),t.toggleClass("").toggleClass("border-bottom"),e(function(){t.resize(),t.find("[id^=map-]").resize()},50)},t.closebox=function(){var e=n.closest("div.ibox");e.remove()}}]}}]).directive("back",["$window",function(e){return{restrict:"A",link:function(t,n,s){n.bind("click",function(){e.history.back()})}}}]),angular.module("InNet").controller("DirDutyListCtrl",["$scope","UserSvc","BranchSvc",function(e,t,n){var s=t.userBranch();n.totalListFindByName(s).success(function(t){e.branch=t,e.onDutyTotal=e.branch.members.filter(function(e){return 1==e.onDuty})})}]),angular.module("InNet").controller("DispatchCtrl",["$scope","$stateParams","$modal","CaseSvc","BranchSvc","CarSvc","UserSvc",function(e,t,n,s,r,i,a){s.fetch(a.userCorps()).success(function(n){e.cases=n,s.findById(e.cases[t.caseId]._id).success(function(t){e.caseDetails=t})}),r.fetch(a.userCorps()).success(function(t){e.branchList=t}),i.fetch().success(function(t){e.carsData=t}),e.addNewCase=function(){n.open({templateUrl:"/partials/casePanel/caseAddModal",controller:"CaseAddModalCtrl",size:"lg",resolve:{caseId:function(){return e.id="新增案件"},branchList:function(){return e.branchList},carsData:function(){return e.carsData},isNew:function(){return!0},caseDetails:function(){return{}}}})},e.editCase=function(){n.open({templateUrl:"/partials/casePanel/caseAddModal",controller:"CaseAddModalCtrl",size:"lg",resolve:{caseId:function(){return e.id=e.cases[t.caseId].caseId},branchList:function(){return e.branchList},carsData:function(){for(var t=e.carsData.length-1;t>=0;t--)for(var n=e.caseDetails.cars.length-1;n>=0;n--)e.carsData[t].radioCode===e.caseDetails.cars[n].radio_code&&(e.carsData[t].isChecked=!0);return e.carsData},isNew:function(){return!1},caseDetails:function(){return e.caseDetails}}})}}]),angular.module("InNet").controller("DutyListCtrl",["$scope","BranchSvc","$stateParams","SocketSvc","UserSvc","$q",function(e,t,n,s,r,i){var a=n.branch;t.totalListFindByName(a).success(function(t){e.branch=t,e.onDutyTotal=e.branch.members.filter(function(e){return 1==e.onDuty})})}]),angular.module("InNet").controller("DutyListEditCtrl",["$scope","BranchSvc","$stateParams","MemberSvc","$location","$window","UserSvc",function(e,t,n,s,r,i,a){if(a.accessLevel()<2)var c=a.userBranch();else var c=n.branch;t.totalListFindByName(c).success(function(t){e.branch=t,e.onDutyTotal=0}),e.check=function(e){e.onDuty=!e.onDuty},e.save=function(){var n=e.branch.members.filter(function(e){return e.onDuty});t.updateDirector({branch:e.branch.name,director:e.branch.director,dispatchNum:n.length}).success(function(){for(var t=0;t<e.branch.members.length;t++)s.updateOnDuty({memberId:e.branch.members[t]._id,onDuty:e.branch.members[t].onDuty,mission:e.branch.members[t].mission})}).then(function(){i.history.back()})}}]),angular.module("InNet").service("GeoSvc",["$q",function(e){this.getGeolocationCoordinates=function(){var t=e.defer();return navigator.geolocation.getCurrentPosition(function(e){t.resolve(e.coords)},function(e){t.resolve(null)}),t.promise}}]),angular.module("InNet").controller("LoginCtrl",["$scope","UserSvc","store","$state","jwtHelper","$http","SocketSvc",function(e,t,n,s,r,i,a){var c=null;e.user={},e.login=function(){t.login(e.user).success(function(e){e.success?(n.set("jwt",e.token),i.defaults.headers.common["x-access-token"]=e.token,c=e.token):console.log("password is not existed!")}).then(function(){a.init(c),a.emit("login")}).then(function(){s.go("admin"==r.decodeToken(c).role?"dutyDesk.dashboard":"director.safety.index")})}}]),angular.module("InNet").controller("MapIndexCtrl",["$scope","leafletData","GeoSvc",function(e,t,n){n.getGeolocationCoordinates().then(function(t){e.nowPos.lat=t.latitude,e.nowPos.lng=t.longitude,e.nowPos.zoom=17}),angular.extend(e,{nowPos:{lat:24.988,lng:121.5752,zoom:17},controls:{draw:{}}}),t.getMap().then(function(t){var n=e.controls.edit.featureGroup;t.on("draw:created",function(e){var t=e.layer;n.addLayer(t),FeatureCollections.push(t.toGeoJSON())})})}]),angular.module("InNet").controller("MemberAccountModalCtrl",["$scope","UserSvc","MemberSvc","member","$modalInstance",function(e,t,n,s,r){e.user=s,e.save=function(){_.isEmpty(e.user)?console.log("please enter your account and password!"):e.user.account?e.user.password?(t.activate(e.user),n.updateUser(s.name),r.close(e.user)):console.log("password can't be blank"):(console.log("account can't be blank!"),e.user.password||console.log("passwod can't be blank!"))},e.cancel=function(){r.dismiss("cancel")}}]),angular.module("InNet").controller("MemberCtrl",["$scope","MemberSvc","$stateParams",function(e,t,n){e.branch=n.branch,t.findByBranch(n.branch).success(function(t){e.members=t,e.members.forEach(function(e){e.workingTime=moment.duration(e.workingTime,"seconds")})})}]),angular.module("InNet").controller("MemberEditCtrl",["$scope","MemberSvc","BranchSvc","$stateParams","$window","$modal","$state","UserSvc",function(e,t,n,s,r,i,a,c){e.alerts=[],e.memberDeleted=!1;var o=null;e.accessLevel=c.accessLevel();var u=function(){t.findByBranch(s.branch).success(function(t){e.members=t,e.members.forEach(function(e){e.workingTime=moment.duration(e.workingTime,"seconds")})})};u(),e.save=function(){for(var t=[],i=[],a=0;a<e.members.length;a++)t.push(e.members[a]._id),i.push(e.members[a].name),("分隊長"==e.members[a].title||"小隊長"==e.members[a].title||"中隊長"==e.members[a].title||"大隊長"==e.members[a].title)&&(director=e.members[a].name);n.update({branch:s.branch,members:t,directors:i,director:director}),r.history.back()},e.addNewMember=function(){var t=i.open({templateUrl:"views/member/member.modal.html",controller:"MemberModalCtrl",size:"md",resolve:{branch:function(){return s.branch},member:function(){return{workingTime:null}}}});t.result.then(function(t){t&&u(),e.alerts.push({type:"success",msg:"人員新增成功！ "+t.name+" 已加入 "+t.branch})})},e.update=function(t){var n=t,r=i.open({templateUrl:"views/member/member.modal.html",controller:"MemberModalCtrl",size:"md",resolve:{branch:function(){return s.branch},member:function(){return{memberId:t._id,id:t.id,name:t.name,title:t.title,branches:t.branches,corps:t.corps,radioCode:t.radioCode,workingTime:60*t.workingTime.minutes()+t.workingTime.seconds()}}}});r.result.then(function(t){u(),e.alerts.push({type:"info",msg:n.name+"修改成功!"})})},e.activateAccount=function(t){var n=e.members.filter(function(e){return e.isUser});if(n.length<3){var s=i.open({templateUrl:"views/member/member.account.html",controller:"MemberAccountModalCtrl",size:"md",resolve:{member:function(){return t}}});s.result.then(function(t){u(),e.alerts.push({type:"info",msg:t.name+" 已開通為使用者"})})}else e.alerts.push({type:"warning",msg:"無法開通"+t.name+" 因為使用者已超過3位，請解除其他人帳號後再開通 "})};var l=function(n){c.removeUser(o.name).success(function(s){t.removeUser(s.username),e.closeAlert(n),u()})},m=function(n){e.memberDeleted=!0,t.deleteMember(o).success(function(){e.memberDeleted=!1}),e.closeAlert(n),u()},d=function(t){e.memberDeleted=!1,e.closeAlert(t)};e.deleteAlert=function(t){e.alerts.push({type:"danger",msg:"是否確定要刪除！"+t.name,execute:m,cancel:d}),o=t},e.deActivateAlert=function(t){var n=e.members.filter(function(e){return e.isUser});1==n.length?e.alerts.push({type:"warning",msg:"每分隊至少要有1個使用者，無法取消"+t.name+"的登入權限"}):(e.alerts.push({type:"danger",msg:"是否確定要解除"+t.name+"登入權限",execute:l,cancel:d}),o=t)},e.closeAlert=function(t){e.alerts.splice(t,1)}}]),angular.module("InNet").controller("MemberModalCtrl",["$scope","branch","MemberSvc","$modalInstance","$state","member","BranchSvc","UserSvc",function(e,t,n,s,r,i,a,c){e.alerts=[],e.isNew=_.isNull(i.workingTime),e.member={id:i.id||"",name:i.name||null,title:"消防隊員",titles:["消防隊員","小隊長","分隊長","中隊長","大隊長","副大隊長"],branch:i.branch||t,workingTime:i.workingTime||1200,radioCode:i.radioCode||null,mission:"瞄子手",missions:["瞄子手","副瞄子手","司機","小組長","安全管制員","聯絡官"],corps:c.userCorps(),corpss:["第一救災救護大隊","第三救災救護大隊"]},a.fetch(c.userCorps()).success(function(t){if(e.branches=t,!e.isNew){for(var n=[],s=t.length-1;s>=0;s--)n.push(t[s].name);e.member.branches=n}});var o=function(e){var t=e.split("").slice(-2).join("");return"大隊"==t||"中隊"==t?"北海":e.split("").slice(0,2).join("")};e.save=function(){e.member.name&&(e.member.radioCodePrefix=o(e.member.branch),n.create(e.member).success(function(){e.member.workingTime=moment.duration(parseInt(e.member.workingTime),"seconds")}).then(function(){s.close(e.member)}))},e.update=function(){var t={memberId:i.memberId,id:"",name:e.member.name,corps:e.member.corps,branch:e.member.branch,title:e.member.title,workingTime:e.member.workingTime,radioCode:e.member.radioCode,radioCodePrefix:o(e.member.branch)};e.member.name&&(n.updateByMemberId(t),s.close(t))},e.cancel=function(){s.dismiss("cancel")}}]),angular.module("InNet").service("MemberSvc",["$http",function(e){this.fetch=function(){return e.get("/api/members")},this.findByBranch=function(t){return e.get("/api/members/"+t)},this.fetchOnDuty=function(t){return e.get("/api/members/onDuty?branch="+t)},this.updateOnDuty=function(t){return e.put("/api/members/onDuty/findById?memberId="+t.memberId,t)},this.create=function(t){return e.post("/api/members/",t)},this.update=function(t){return e.put("/api/members/",t.id)},this.updateByMemberId=function(t){return e.put("/api/members/findById/"+t.memberId,t)},this.updateIsChecked=function(t){return e.put("/api/members?id="+t.memberId,t)},this.updateUser=function(t){return e.put("/api/members/user?username="+t)},this.removeUser=function(t){return e.put("/api/members/user/remove?username="+t)},this.deleteMember=function(t){return e["delete"]("/api/members/"+t._id)}}]),angular.module("InNet").controller("NavCtrl",["$scope","BranchSvc","store","jwtHelper","UserSvc",function(e,t,n,s,r){e.username=r.currentUser(),e.branch=r.userBranch(),t.fetch(r.userCorps()).success(function(t){e.branches=t}),e.isValid=function(e){return r.isValid(e)}}]),angular.module("InNet").service("NtfSvc",["$http",function(e){this.fetch=function(){return e.get("/api/nfts")}}]),angular.module("InNet").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,n){t.otherwise("/login"),e.state("anon",{url:"","abstract":!0,template:"<ui-view>"}).state("anon.login",{url:"/login",templateUrl:"views/login.html",controller:"LoginCtrl"}).state("anon.404",{url:"/404",templateUrl:"views/404.html"}),e.state("dutyDesk",{"abstract":!0,url:"/dutyDesk",templateUrl:"views/common/content.html",data:{requiredLogin:!0,role:["admin"]}}).state("dutyDesk.dashboard",{url:"/dashboard",templateUrl:"views/dashboard.html",controller:"DashboardCtrl",data:{requiredLogin:!0,role:["admin"]}}).state("dutyDesk.case",{url:"/case",templateUrl:"views/case/case.index.html",controller:"CaseCtrl"}).state("dutyDesk.safety",{url:"/case/:id",templateUrl:"views/summary/summary.index.html",controller:"SummaryCtrl"}).state("dutyDesk.dutylist",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.dutylist.show",{url:"/dutylist/:branch",templateUrl:"views/dutylist/dutylist.index.html",controller:"DutyListCtrl"}).state("dutyDesk.dutylist.edit",{url:"/dutylist/:branch/edit",templateUrl:"views/dutylist/dutylist.edit.html",controller:"DutyListEditCtrl"}).state("dutyDesk.member",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.member.show",{url:"/member/:branch",templateUrl:"views/member/member.index.html",controller:"MemberCtrl"}).state("dutyDesk.member.edit",{url:"/member/:branch/edit",templateUrl:"views/member/member.edit.html",controller:"MemberEditCtrl"}).state("dutyDesk.car",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.car.show",{url:"/car/:branch",templateUrl:"views/cars/car.index.html",controller:"CarIndexCtrl"}).state("dutyDesk.car.edit",{url:"/car/:branch/edit",templateUrl:"views/cars/car.edit.html",controller:"CarEditCtrl"}),e.state("director",{"abstract":!0,url:"",templateUrl:"views/director/director.content.html",data:{requiredLogin:!0,role:["user"]}}).state("director.safety",{"abstract":!0,url:"/safety",template:"<ui-view>"}).state("director.safety.index",{url:"/index",templateUrl:"views/safety/safety.index.html",controller:"SafetyIndexCtrl"}).state("director.safety.management",{url:"/index/:id",templateUrl:"views/safety/safety.manage.html",controller:"SafetyManageCtrl"}).state("director.safety.summary",{url:"/summary/:id",templateUrl:"views/summary/summary.index.html",controller:"SummaryCtrl"}).state("director.map",{url:"/map",templateUrl:"views/map/map.index.html",controller:"MapIndexCtrl"}).state("director.dutylist",{"abstract":!0,url:"/dutylist",template:"<ui-view>"}).state("director.dutylist.index",{url:"/index",templateUrl:"views/dutylist/director.dutylist.index.html",controller:"DirDutyListCtrl"}).state("director.dutylist.edit",{url:"/edit",templateUrl:"views/dutylist/director.dutylist.edit.html",controller:"DutyListEditCtrl"})}]).run(["$rootScope","$state","$stateParams","store","jwtHelper","UserSvc","SocketSvc",function(e,t,n,s,r,i,a){e.$on("$stateChangeStart",function(e,n,a,c,o){"anon.login"==n.name?s.remove("jwt"):n.data&&n.data.requiredLogin&&(i.isLoggedIn()?-1==n.data.role.indexOf(r.decodeToken(s.get("jwt")).role)&&(e.preventDefault(),t.go("anon.login")):(e.preventDefault(),t.go("anon.login")))}),e.$on("$stateChangeError",function(e){e.preventDefault()})}]),angular.module("InNet").controller("SafetyIndexCtrl",["$scope","CaseSvc","UserSvc","SocketSvc","$rootScope",function(e,t,n,s,r){s.on("newCase",function(t){e.cases.push(t)}),s.on("caseClose",function(t){t.isOngoing||(e.cases=e.cases.filter(function(e){return e._id!=t.caseId}))});var i={branch:n.userBranch(),accessLevel:n.accessLevel(),corps:n.userCorps()};t.fetchRelativeCase(i).success(function(t){e.cases=t}),e.$on("$destroy",function(e){s.removeAllListeners()}),e.accessLevel=n.accessLevel()}]),angular.module("InNet").controller("SafetyManageCtrl",["$scope","$stateParams","$modal","StSvc","$state","MemberSvc","$log","UserSvc","BranchSvc","SocketSvc","CaseSvc",function(e,t,n,s,r,i,a,c,o,u,l){e.quickStart=!1;var m=c.userBranch();e.ACCESSLEVEL=c.accessLevel(),e.branchOptions={branch:m,branches:[]},l.findById(t.id).success(function(t){e.branchOptions.branches=t.branches,e.branchOptions.branches.splice(0,0,m)}),o.fetchByName(m).success(function(t){e.details=t}).then(function(){ACCESSLEVEL>1?s.fetchByCase(t.id).success(function(t){e.strikeTeams=t}):s.fetch(t.id,m).success(function(t){e.strikeTeams=t,e.details.members.length<8&&_.isEmpty(e.strikeTeams)&&(e.quickStart=!0)})}),u.on("newSt",function(n){ACCESSLEVEL>1&&angular.equals(t.id,n.caseId)?e.strikeTeams.push(n):angular.equals(m,n.branch)&&angular.equals(t.id,n.caseId)&&e.strikeTeams.push(n)}),u.on("updateSt",function(t){for(var n=angular.copy(t.members),s=e.strikeTeams.length-1;s>=0;s--)angular.equals(e.strikeTeams[s]._id,t.id)&&(e.strikeTeams[s].position=t.position,e.strikeTeams[s].area=t.area,e.strikeTeams[s].members.push.apply(e.strikeTeams[s].members,n))}),u.on("dismiss",function(t){var n=t.stId;e.strikeTeams=e.strikeTeams.filter(function(e){return e._id!=n})}),e.strikeTeam=function(){n.open({templateUrl:"views/safety/safety.modal.html",controller:"SafetyModalCtrl",size:"md",resolve:{stId:function(){return _.isEmpty(e.strikeTeams)?0:e.strikeTeams[e.strikeTeams.length-1].id},branch:function(){return e.branchOptions.branch}}})},e.openSettingModal=function(t,s){var r=n.open({templateUrl:"views/safety/safety.setting.modal.html",controller:"SafetySettingCtrl",size:"lg",resolve:{strikeTeam:function(){return t}}});r.result.then(function(t){for(var n=e.strikeTeams.length-1;n>=0;n--)angular.equals(e.strikeTeams[n]._id,t.id)&&(e.strikeTeams[n].position=t.position,e.strikeTeams[n].area=t.area,e.strikeTeams[n].members.push.apply(e.strikeTeams[n].members,t.members))},function(){a.info("Modal dismissed at: "+new Date)})},e.dismiss=function(t,n){s.dismissSt({id:t._id}).success(function(){for(var e=t.members.length-1;e>=0;e--)i.updateIsChecked({memberId:t.members[e]._id,mission:t.members[e].mission,isChecked:!1})}),e.strikeTeams.splice(n,1)},e.quickOrganizing=function(){e.quickStart=!1;for(var n=e.details.members.filter(function(e){return"司機"==e.mission||"安全管制員"==e.mission||"救護人員"==e.mission?!1:!0}),s={id:1,caseId:t.id,branch:e.details.name,director:e.details.director,position:"第一面",positions:["第一面","第二面","第三面","第四面"],mission:"滅火小組",missions:["滅火小組","破壞小組","搜救小組"],area:"第一區",areas:["第一區","第二區","第三區","第四區","第五區"],members:n,isDismissed:!1,workingTime:_.min(n,function(e){return e.workingTime}).workingTime,creator:c.currentUser()},r=n.length-1;r>=0;r--)i.updateIsChecked({memberId:n[r]._id,isChecked:!0,mission:n[r].mission});u.emit("createStrikeTeam",s)},e.$on("$destroy",function(e){u.removeAllListeners()})}]),angular.module("InNet").controller("SafetyModalCtrl",["$scope","$modalInstance","$stateParams","StSvc","MemberSvc","$state","$window","stId","UserSvc","BranchSvc","SocketSvc","branch",function(e,t,n,s,r,i,a,c,o,u,l,m){e.title=m+(c+1),u.fetchByName(m).success(function(t){e.details=t}).then(function(){e.details&&(e.details.members=e.details.members.filter(function(e){return 1!=e.isChecked}),e.details.members.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}))}),e.strikeTeam={position:"第一面",positions:["第一面","第二面","第三面","第四面"],mission:"滅火小組",missions:["滅火小組","破壞小組","搜救小組"],area:"第一區",areas:["第一區","第二區","第三區","第四區","第五區"]},e.check=function(e){e.isChecked=!e.isChecked},e.cancel=function(){t.dismiss("cancel")},e.save=function(){var s=e.details.members.filter(function(e){return e.isChecked===!0});if(s.length>-1){for(var i={id:c+1||0,caseId:n.id,branch:e.details.name,director:e.details.director,position:e.strikeTeam.position,positions:e.strikeTeam.positions,mission:e.strikeTeam.mission,missions:e.strikeTeam.missions,area:e.strikeTeam.area,areas:e.strikeTeam.areas,members:s,isDismissed:!1,workingTime:_.min(s,function(e){return e.workingTime}).workingTime,creator:o.currentUser()},u=s.length-1;u>=0;u--)r.updateIsChecked({memberId:s[u]._id,isChecked:s[u].isChecked,mission:s[u].mission});l.emit("createStrikeTeam",i),t.close()}else a.alert("you must organize strike team")}}]),angular.module("InNet").controller("SafetySettingCtrl",["$scope","strikeTeam","$modalInstance","StSvc","$state","MemberSvc","CaseSvc","$stateParams","SocketSvc",function(e,t,n,s,r,i,a,c,o){var u=[],l=[];e.strikeTeam=t,a.fetchDetails(c.id).success(function(t){e.dispatch=t.branchIds}),e.chooseBranch=function(t){e.members=e.dispatch[t].members;for(var n=e.members.length-1;n>=0;n--)e.members[n].isChecked&&e.members.splice(n,1)},e.cancel=function(){n.dismiss("cancel")},e.check=function(e){e.isChecked=!e.isChecked,u.push(e._id),l.push(e)},e.uncheck=function(e,t){e.isChecked=!e.isChecked,u.splice(t,1),l.splice(t,1)},e.save=function(){s.updateSt({id:t._id,position:t.position,area:t.area,mission:t.mission,memberIds:u}).success(function(){for(var e=u.length-1;e>=0;e--)i.updateIsChecked({memberId:l[e]._id,mission:l[e].mission,isChecked:!0})}),n.close({id:t._id,position:t.position,area:t.area,members:l,caseId:t.caseId})}}]),angular.module("InNet").service("SocketSvc",["$rootScope","store","$q","$timeout",function(e,t,n,s){this.init=function(e){var n=null;return n=e?e:t.get("jwt"),io.connect("http://localhost:3000",{query:"token="+n,forceNew:!0})};var r=this.init();this.on=function(t,n){this.init().on(t,function(){var t=arguments;e.$apply(function(){n.apply(r,t)})})},this.emit=function(t,n,s){this.init().emit(t,n,function(){var t=arguments;e.$apply(function(){s&&s.apply(r,t)})})},this.removeAllListeners=function(t,n){this.init().removeAllListeners(t,function(){var t=arguments;e.$apply(function(){n.apply(r,t)})})}}]),angular.module("InNet").service("StSvc",["$http",function(e){this.fetch=function(t,n){return e.get("/api/strikeTeams?caseId="+t+"&branch="+n)},this.fetchByCase=function(t){return e.get("/api/strikeTeams/total?caseId="+t)},this.findById=function(t){return e.get("/api/strikeTeams/"+t)},this.dismissSt=function(t){return e.put("/api/strikeTeams/dismiss?id="+t.id)},this.updateSt=function(t){return e.put("/api/strikeTeams/update?id="+t.id,t)},this.updateTimeRecord=function(t){return e.put("/api/strikeTeams/time?id="+t.id,t)},this.create=function(t){return e.post("/api/strikeTeams",t)},this.count=function(t){return e.get("/api/strikeTeams/count?caseId="+t)}}]),angular.module("InNet").controller("SummaryCtrl",["$scope","StSvc","$stateParams","$interval","$state","SocketSvc",function(e,t,n,s,r,i){i.on("timerRunning",function(t){for(var n=e.strikeTeams.length-1;n>=0;n--)angular.equals(e.strikeTeams[n]._id,t.stId)&&(e.strikeTeams[n].timerRunning=t.timerRunning)}),i.on("progressUpdate",function(t){for(var n=e.strikeTeams.length-1;n>=0;n--)angular.equals(e.strikeTeams[n]._id,t.id)&&(e.strikeTeams[n].timer=moment.duration(t.millis),e.strikeTeams[n].progress=t.progress,e.strikeTeams[n].progressState=t.progressState)}),i.on("newSt",function(t){if(angular.equals(a,t.caseId)){var n=angular.copy(t);e.strikeTeams.push(n)}e.deploys=c(e.strikeTeams)}),i.on("updateSt",function(n){t.fetchByCase(a).success(function(t){e.strikeTeams=t,e.strikeTeams.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}),e.deploys=c(e.strikeTeams)})}),i.on("dismiss",function(n){t.fetchByCase(a).success(function(t){e.strikeTeams=t,e.deploys=c(e.strikeTeams)})});var a=n.id;t.fetchByCase(a).success(function(t){e.strikeTeams=t,e.strikeTeams.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}),e.deploys=c(e.strikeTeams)}),e.position={defaultPos:"第一面",positions:["第一面","第二面","第三面","第四面"]};var c=function(e){var t=_.range(4).map(function(){return _.range(5).map(function(){return{totalMember:0,stTotal:0}})});if(e)for(var n=e.length-1;n>=0;n--){var s=_.indexOf(e[n].positions,e[n].position),r=_.indexOf(e[n].areas,e[n].area);t[s][r].stTotal+=1,t[s][r].totalMember+=e[n].members.length}return t};e.$on("$destroy",function(e){i.removeAllListeners()})}]),angular.module("InNet").controller("TimerCtrl",["$scope","SocketSvc",function(e,t){e.timerRunning=!1,e.startTimer=function(n,s){e.$broadcast("timer-start"),e.timerRunning=!0,t.emit("timer",{stId:n._id,timerRunning:!0})},e.stopTimer=function(n,s){e.$broadcast("timer-stop"),e.timerRunning=!1,t.emit("timer",{stId:n._id,timerRunning:!1})}}]),angular.module("InNet").controller("TopNavCtrl",["$scope","$location","$state","$interval","store","SocketSvc","UserSvc","$window",function(e,t,n,s,r,i,a,c){e.currentTime=moment().format("MMM Do, h:mm:ss a"),s(function(){moment.locale("zh-tw"),e.currentTime=moment().format("MMM Do, h:mm:ss a")},1e3),e.logout=function(){a.currentAccount();i.emit("logout"),n.go("anon.login")}}]),angular.module("InNet").service("UserSvc",["$http","store","jwtHelper",function(e,t,n){this.fetchOnlineUser=function(){return e.get("/api/users/userState")},this.activate=function(t){return e.post("/api/users",t)},this.removeUser=function(t){return e["delete"]("/api/users/delete?username="+t)},this.login=function(t){return e.post("/api/users/authenticate",t)},this.isLoggedIn=function(){return t.get("jwt")},this.isValid=function(e){return this.isLoggedIn&&(n.decodeToken(t.get("jwt")).accessLevel>1||n.decodeToken(t.get("jwt")).branch==e)?!0:!1},this.userBranch=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).branch:void 0},this.userCorps=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).corps:void 0},this.currentUser=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).username:void 0},this.currentAccount=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).account:void 0},this.accessLevel=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).accessLevel:void 0},this.caseId=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).caseId:void 0}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImJyYW5jaC5zdmMuanMiLCJjYXIuZWRpdC5jdHJsLmpzIiwiY2FyLmluZGV4LmN0cmwuanMiLCJjYXJzLnN2Yy5qcyIsImNhc2UuY3RybC5qcyIsImNhc2UubW9kYWwuY3RybC5qcyIsImNhc2Uuc3ZjLmpzIiwiZGFzaGJvYXJkLmN0cmwuanMiLCJkaXJlY3RpdmVzLmpzIiwiZGlyZWN0b3IuZHV0eWxpc3QuY3RybC5qcyIsImRpc3BhdGNoLmN0cmwuanMiLCJkdXR5bGlzdC5jdHJsLmpzIiwiZHV0eWxpc3QuZWRpdC5jdHJsLmpzIiwiZ2VvLnN2Yy5qcyIsImxvZ2luLmN0cmwuanMiLCJtYXAuaW5kZXguY3RybC5qcyIsIm1lbWJlci5hY2NvdW50Lm1vZGFsLmN0cmwuanMiLCJtZW1iZXIuY3RybC5qcyIsIm1lbWJlci5lZGl0LmN0cmwuanMiLCJtZW1iZXIubW9kYWwuY3RybC5qcyIsIm1lbWJlci5zdmMuanMiLCJuYXYuY3RybC5qcyIsIm50Zi5zdmMuanMiLCJyb3V0ZXIuanMiLCJzYWZldHkuaW5kZXguY3RybC5qcyIsInNhZmV0eS5tYW5hZ2UuY3RybC5qcyIsInNhZmV0eS5tb2RhbC5jdHJsLmpzIiwic2FmZXR5LnNldHRpbmcubW9kYWwuanMiLCJzb2NrZXQuc3ZjLmpzIiwic3Quc3ZjLmpzIiwic3VtbWFyeS5jdHJsLmpzIiwidGltZXIuY3RybC5qcyIsInRvcG5hdmJhci5jdHJsLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJmZXRjaCIsImNvcnBzIiwiZ2V0IiwiZmV0Y2hCeU5hbWUiLCJicmFuY2giLCJ0b3RhbExpc3RGaW5kQnlOYW1lIiwiZ2V0RGV0YWlscyIsImlkIiwidXBkYXRlIiwiZGF0YSIsInB1dCIsInVwZGF0ZURpcmVjdG9yIiwiY29udHJvbGxlciIsIiRzY29wZSIsImZpbmRCeUJyYW5jaCIsIiRzdGF0ZVBhcmFtcyIsIiRtb2RhbCIsIkNhc2VTdmMiLCIkbG9nIiwiU29ja2V0U3ZjIiwiVXNlclN2YyIsIm1heFNpemUiLCJiaWdUb3RhbEl0ZW1zIiwiYmlnQ3VycmVudFBhZ2UiLCJ1c2VyQ29ycHMiLCJzdWNjZXNzIiwiY2FzZXMiLCJvbiIsIl9jYXNlIiwidW5zaGlmdCIsImNhc2VJZCIsImNob29zZSIsImZpbmRCeUlkIiwiX2lkIiwiY2FzZURldGFpbHMiLCJhZGROZXdDYXNlIiwibW9kYWxJbnN0YW5jZSIsIm9wZW4iLCJ0ZW1wbGF0ZVVybCIsInNpemUiLCJyZXNvbHZlIiwiXyIsImlzRW1wdHkiLCJyZXN1bHQiLCJ0aGVuIiwibXNnIiwiY29uc29sZSIsImxvZyIsImluZm8iLCJEYXRlIiwiZWRpdENhc2UiLCJDYXJTdmMiLCIkbW9kYWxJbnN0YW5jZSIsIiRzdGF0ZSIsIlN0U3ZjIiwiJHdpbmRvdyIsIkJyYW5jaFN2YyIsIk50ZlN2YyIsImdldENhcnNEZXRhaWwiLCJvYmoiLCJkaXNwYXRjaExpc3QiLCJjYXJJZHMiLCJicmFuY2hlcyIsImNhcnMiLCJpIiwibGVuZ3RoIiwicHVzaCIsInJhZGlvQ29kZSIsImdldEJyYW5jaElkIiwiYnJhbmNoZXNMaXN0IiwidW5pcXVlIiwiYnJhbmNoSWRzIiwiaW5kZXhPZiIsIm5hbWUiLCJpc05ldyIsImNhck9ianMiLCJuZnRPcHRpb24iLCJuZnRzIiwibmZ0IiwiY2FzZU9iaiIsImFkZHJlc3MiLCJwaG9uZSIsInR5cGUiLCJ0eXBlcyIsImVudiIsImVudnMiLCJmbG9vciIsImpvaW4iLCJnZXRDYXJzIiwiaXNDaGVja2VkIiwiY2FuY2VsIiwiZGlzbWlzcyIsImNhbmNlbERpc3BhdGNoIiwiY2FyIiwic3BsaWNlIiwiZGlzcGF0Y2giLCJjbG9zZUNhc2UiLCJjb3VudCIsInRvdGFsIiwiYWxlcnQiLCJpc09uZ29pbmciLCJyZWxvYWQiLCJzYXZlIiwiY3JlYXRlIiwib2ZmaWNlclJlY2VpdmVyIiwiY3VycmVudFVzZXIiLCJuZXdDYXNlIiwiY2xvc2UiLCJjb250ZW50IiwiZmV0Y2hBbGwiLCJmZXRjaFJlbGF0aXZlQ2FzZSIsImNvbiIsImFjY2Vzc0xldmVsIiwiZmV0Y2hEZXRhaWxzIiwiY2FzZV9pbmZvIiwicG9zdCIsInVwZGF0ZWRfY2FzZSIsIiRsb2NhdGlvbiIsImZldGNoT25saW5lVXNlciIsInVzZXJzIiwidXNlciIsImRpc2Nvbm5lY3RVc2VyIiwiZmlsdGVyIiwidXNlcm5hbWUiLCJsb2dvdXRVc2VyIiwiJG9uIiwiZXZlbnQiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJkaXJlY3RpdmUiLCIkdGltZW91dCIsInJlc3RyaWN0IiwidGVtcGxhdGUiLCIkZWxlbWVudCIsIm1pbmltYWxpemUiLCIkIiwidG9nZ2xlQ2xhc3MiLCJoYXNDbGFzcyIsImhpZGUiLCJzZXRUaW1lb3V0IiwiZmFkZUluIiwicmVtb3ZlQXR0ciIsImxpbmsiLCJzY29wZSIsImVsZW1lbnQiLCJtZXRpc01lbnUiLCJzaG93aGlkZSIsImlib3giLCJjbG9zZXN0IiwiaWNvbiIsImZpbmQiLCJzbGlkZVRvZ2dsZSIsInJlc2l6ZSIsImNsb3NlYm94IiwicmVtb3ZlIiwiaUVsZW1lbnQiLCJpQXR0cnMiLCJiaW5kIiwiaGlzdG9yeSIsImJhY2siLCJ1c2VyQnJhbmNoIiwib25EdXR5VG90YWwiLCJtZW1iZXJzIiwibWVtYmVyIiwib25EdXR5IiwiYnJhbmNoTGlzdCIsImNhcnNEYXRhIiwiaiIsInJhZGlvX2NvZGUiLCIkcSIsIk1lbWJlclN2YyIsImNoZWNrIiwiRGlzcGF0Y2hOdW1iZXIiLCJkaXJlY3RvciIsImRpc3BhdGNoTnVtIiwidXBkYXRlT25EdXR5IiwibWVtYmVySWQiLCJtaXNzaW9uIiwiZ2V0R2VvbG9jYXRpb25Db29yZGluYXRlcyIsImRlZmVycmVkIiwiZGVmZXIiLCJuYXZpZ2F0b3IiLCJnZW9sb2NhdGlvbiIsImdldEN1cnJlbnRQb3NpdGlvbiIsInBvc2l0aW9uIiwiY29vcmRzIiwiZXJyb3IiLCJwcm9taXNlIiwic3RvcmUiLCJqd3RIZWxwZXIiLCJ0b2tlbiIsImxvZ2luIiwic2V0IiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIiwiaW5pdCIsImVtaXQiLCJnbyIsImRlY29kZVRva2VuIiwicm9sZSIsImxlYWZsZXREYXRhIiwiR2VvU3ZjIiwiY29vcmQiLCJub3dQb3MiLCJsYXQiLCJsYXRpdHVkZSIsImxuZyIsImxvbmdpdHVkZSIsInpvb20iLCJleHRlbmQiLCJjb250cm9scyIsImRyYXciLCJnZXRNYXAiLCJtYXAiLCJkcmF3bkl0ZW1zIiwiZWRpdCIsImZlYXR1cmVHcm91cCIsImUiLCJsYXllciIsImFkZExheWVyIiwiRmVhdHVyZUNvbGxlY3Rpb25zIiwidG9HZW9KU09OIiwiYWNjb3VudCIsInBhc3N3b3JkIiwiYWN0aXZhdGUiLCJ1cGRhdGVVc2VyIiwiZm9yRWFjaCIsIndvcmtpbmdUaW1lIiwibW9tZW50IiwiZHVyYXRpb24iLCJhbGVydHMiLCJtZW1iZXJEZWxldGVkIiwidGVtcERlbE1lbWJlciIsIm1lbWJlckluaXQiLCJtZW1iZXJJZHMiLCJkaXJlY3RvcnMiLCJ0aXRsZSIsImFkZE5ld01lbWJlciIsIm9sZE1lbWJlciIsIm1pbnV0ZXMiLCJzZWNvbmRzIiwiYWN0aXZhdGVBY2NvdW50IiwiaXNVc2VyIiwiZGVBY3RpdmF0ZUFjY291bnQiLCJpbmRleCIsInJlbW92ZVVzZXIiLCJjbG9zZUFsZXJ0IiwiZGVsZXRlTWVtYmVyIiwiY2FuY2VsRGVsIiwiZGVsZXRlQWxlcnQiLCJleGVjdXRlIiwiZGVBY3RpdmF0ZUFsZXJ0IiwiaXNOdWxsIiwidGl0bGVzIiwibWlzc2lvbnMiLCJjb3Jwc3MiLCJicmFuY2hBcnJ5IiwicmFkaW9Db2RlUHJlZml4Iiwic3VmZml4Iiwic3BsaXQiLCJzbGljZSIsInBhcnNlSW50IiwidXBkYXRlTWVtYmVyIiwidXBkYXRlQnlNZW1iZXJJZCIsImZldGNoT25EdXR5IiwidXBkYXRlSXNDaGVja2VkIiwibWVtYmVyRGF0YSIsImlzVmFsaWQiLCJjb25maWciLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwib3RoZXJ3aXNlIiwic3RhdGUiLCJ1cmwiLCJhYnN0cmFjdCIsInJlcXVpcmVkTG9naW4iLCJydW4iLCIkcm9vdFNjb3BlIiwidG9TdGF0ZSIsInRvUGFyYW1zIiwiZnJvbVN0YXRlIiwiZnJvbVBhcmFtcyIsImlzTG9nZ2VkSW4iLCJwcmV2ZW50RGVmYXVsdCIsInVzZXJDb25kaXRpb24iLCJxdWlja1N0YXJ0IiwiQlJBTkNIIiwiQUNDRVNTTEVWRUwiLCJicmFuY2hPcHRpb25zIiwiZGV0YWlscyIsImZldGNoQnlDYXNlIiwic3RzIiwic3RyaWtlVGVhbXMiLCJzdCIsImVxdWFscyIsImNvcHkiLCJhcmVhIiwiYXBwbHkiLCJfc3RJZCIsInN0SWQiLCJzdHJpa2VUZWFtIiwib3BlblNldHRpbmdNb2RhbCIsInVwZGF0ZWRTdCIsImRpc21pc3NTdCIsInF1aWNrT3JnYW5pemluZyIsInBvc2l0aW9ucyIsImFyZWFzIiwiaXNEaXNtaXNzZWQiLCJtaW4iLCJjcmVhdG9yIiwibGltaXRUaW1lIiwibWVtYmVyT2JqcyIsImNob29zZUJyYW5jaCIsInVuY2hlY2siLCJ1cGRhdGVTdCIsImF1dGhUb2tlbiIsImlvIiwiY29ubmVjdCIsInF1ZXJ5IiwiZm9yY2VOZXciLCJzb2NrZXQiLCJldmVudE5hbWUiLCJjYWxsYmFjayIsImFyZ3MiLCJhcmd1bWVudHMiLCIkYXBwbHkiLCJ1cGRhdGVUaW1lUmVjb3JkIiwiJGludGVydmFsIiwidGltZXJSdW5uaW5nIiwidGltZXIiLCJtaWxsaXMiLCJwcm9ncmVzcyIsInByb2dyZXNzU3RhdGUiLCJuZXdTdCIsImRlcGxveXMiLCJpbml0VGFibGUiLCJkZWZhdWx0UG9zIiwiZGVwbG95QXJyYXkiLCJyYW5nZSIsInRvdGFsTWVtYmVyIiwic3RUb3RhbCIsIngiLCJ5Iiwic3RhcnRUaW1lciIsIiRicm9hZGNhc3QiLCJzdG9wVGltZXIiLCJjdXJyZW50VGltZSIsImZvcm1hdCIsImxvY2FsZSIsImxvZ291dCIs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QUFBaFcsTUFBQTRSLFdBQ0EvRixFQUFBVSxZQUFBWCxFQUFBekwsSUFBQSxRQUFBNE4sUUFEQSxRQUtBL04sS0FBQWlILFlBQUEsV0FDQSxNQUFBakgsTUFBQTRSLFdBQ0EvRixFQUFBVSxZQUFBWCxFQUFBekwsSUFBQSxRQUFBOEcsWUFEQSxRQUtBakgsS0FBQStCLE9BQUEsV0FDQSxNQUFBL0IsTUFBQTRSLFdBQ0EvRixFQUFBVSxZQUFBWCxFQUFBekwsSUFBQSxRQUFBNEIsT0FEQSIsImZpbGUiOiJpbm5ldC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogSW5OZXQgTW9kJ3VpLnJvdXRlJ3VsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcsIFsndWkucm91dGVyJywndWkuYm9vdHN0cmFwJywgJ3RpbWVyJywnYW5ndWxhci1zdG9yYWdlJywgJ2FuZ3VsYXItand0JywnbGVhZmxldC1kaXJlY3RpdmUnLCAnYW5ndWxhci5maWx0ZXInXSkiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5zZXJ2aWNlKCdCcmFuY2hTdmMnLCBbICckaHR0cCcsIGZ1bmN0aW9uICgkaHR0cCkge1xuXG5cdHRoaXMuZmV0Y2ggPSBmdW5jdGlvbihjb3Jwcyl7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9icmFuY2g/Y29ycHM9JyArIGNvcnBzKTtcblx0fTtcblxuXHR0aGlzLmZldGNoQnlOYW1lID0gZnVuY3Rpb24oYnJhbmNoKXtcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2JyYW5jaC9uYW1lP2JyYW5jaD0nICsgYnJhbmNoKTtcblx0fTtcblxuXHR0aGlzLnRvdGFsTGlzdEZpbmRCeU5hbWUgPSBmdW5jdGlvbihicmFuY2gpe1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvYnJhbmNoL25hbWUvdG90YWw/YnJhbmNoPScgKyBicmFuY2gpXG5cdH1cblxuXHR0aGlzLmdldERldGFpbHMgPSBmdW5jdGlvbihpZCl7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9icmFuY2gvJyArIGlkKTtcblx0fTtcblxuXHR0aGlzLnVwZGF0ZSA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvYnJhbmNoLycgKyBkYXRhLmJyYW5jaCAsIGRhdGEpO1xuXHR9O1xuXG5cdHRoaXMudXBkYXRlRGlyZWN0b3IgPSBmdW5jdGlvbihkYXRhKXtcblx0XHRyZXR1cm4gJGh0dHAucHV0KCcvYXBpL2JyYW5jaD9icmFuY2g9JyArIGRhdGEuYnJhbmNoLCBkYXRhKVxuXHR9XG5cdFxufV0pIiwiLyoqXG4qJ0luTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uY29udHJvbGxlcignQ2FyRWRpdEN0cmwnLCBbJyRzY29wZScsIGZ1bmN0aW9uICgkc2NvcGUpIHtcblx0XG59XSkiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdDYXJJbmRleEN0cmwnLCBbJyRzY29wZScsIGZ1bmN0aW9uICgkc2NvcGUpIHtcblx0XG59XSkiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5zZXJ2aWNlKCdDYXJTdmMnLCBbJyRodHRwJyxmdW5jdGlvbiAoJGh0dHApIHtcblxuXHR0aGlzLmZldGNoID0gZnVuY3Rpb24oKXtcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2NhcnMnKVxuXHR9XG5cblx0dGhpcy5maW5kQnlCcmFuY2ggPSBmdW5jdGlvbiggYnJhbmNoICl7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9jYXJzLycgKyBicmFuY2ggKVxuXHR9XG5cdFxuXHR0aGlzLnVwZGF0ZSA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvY2Fycy8nICsgZGF0YS5pZCAsIGRhdGEpXG5cdH1cblxufV0pIiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uY29udHJvbGxlcignQ2FzZUN0cmwnLCBbJyRzY29wZScsJyRzdGF0ZVBhcmFtcycsJyRtb2RhbCcsJ0Nhc2VTdmMnLCAnJGxvZycsICdTb2NrZXRTdmMnLCAnVXNlclN2YycsXG5cdGZ1bmN0aW9uICgkc2NvcGUgLCAkc3RhdGVQYXJhbXMsICRtb2RhbCwgQ2FzZVN2YywgJGxvZywgU29ja2V0U3ZjLCBVc2VyU3ZjKSB7XG5cblx0JHNjb3BlLm1heFNpemUgPSA1O1xuXHQkc2NvcGUuYmlnVG90YWxJdGVtcyA9IDE3NTtcblx0JHNjb3BlLmJpZ0N1cnJlbnRQYWdlID0gMTtcblxuXHRDYXNlU3ZjLmZldGNoKFVzZXJTdmMudXNlckNvcnBzKCkpLnN1Y2Nlc3MoZnVuY3Rpb24oY2FzZXMpe1xuXHRcdCRzY29wZS5jYXNlcyA9IGNhc2VzO1xuXHR9KTtcblxuXHRTb2NrZXRTdmMub24oJ25ld0Nhc2UnLGZ1bmN0aW9uKF9jYXNlKXtcblx0XHQkc2NvcGUuY2FzZXMudW5zaGlmdChfY2FzZSk7XG5cdH0pO1xuXG5cdFNvY2tldFN2Yy5vbignY2FzZU1vZGlmaWVkJyxmdW5jdGlvbihfY2FzZSl7XG5cdFx0JHNjb3BlLmNhc2VzW19jYXNlLmNhc2VJZC0xXSA9IF9jYXNlO1xuXHR9KTtcblxuXHQkc2NvcGUuY2hvb3NlID0gZnVuY3Rpb24oaWQpe1xuXHRcdENhc2VTdmMuZmluZEJ5SWQoJHNjb3BlLmNhc2VzW2lkXS5faWQpLnN1Y2Nlc3MoZnVuY3Rpb24oX2Nhc2Upe1xuXHRcdFx0XHQkc2NvcGUuY2FzZURldGFpbHMgPSBfY2FzZTtcblx0XHR9KTtcblx0fTtcblxuXHQkc2NvcGUuYWRkTmV3Q2FzZSA9IGZ1bmN0aW9uICgpIHtcblx0ICBcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdCAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2Nhc2UvY2FzZS5tb2RhbC5odG1sJyxcblx0XHQgICAgY29udHJvbGxlcjogJ0Nhc2VNb2RhbEN0cmwnLFxuXHRcdCAgICBzaXplOiBcImxnXCIsXG5cdFx0ICAgIHJlc29sdmUgOiB7XG5cdFx0ICAgIFx0Y2FzZUlkIDogZnVuY3Rpb24oKXtcblx0XHRcdCAgICBcdFx0aWYgKCBfLmlzRW1wdHkoJHNjb3BlLmNhc2VzKSkge1xuXHRcdFx0ICAgIFx0XHRcdHJldHVybiAwXG5cdFx0XHQgICAgXHRcdH0gZWxzZXtcblx0XHRcdCAgICBcdFx0XHRyZXR1cm4gJHNjb3BlLmNhc2VzWzBdLmNhc2VJZDtcblx0XHRcdCAgICBcdFx0fTtcblx0XHRcdCAgICB9LFxuXHRcdCAgICBcdGNhc2VEZXRhaWxzIDogZnVuY3Rpb24oKXtcblx0XHQgICAgXHRcdHJldHVybiB7fVxuXHRcdCAgICBcdH1cblx0XHQgICAgfVxuXHQgICAgfSk7XG5cdCAgICBtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uIChtc2cpIHtcblx0ICAgICAgLy8gJHNjb3BlLmNhc2VzLnVuc2hpZnQobmV3Q2FzZSk7XG5cdCAgICAgIGNvbnNvbGUubG9nKG1zZyk7XG5cdCAgICB9LCBmdW5jdGlvbiAoKSB7XG5cdCAgICAgICRsb2cuaW5mbygnTW9kYWwgZGlzbWlzc2VkIGF0OiAnICsgbmV3IERhdGUoKSk7XG5cdCAgICB9KTtcblx0IH07XG5cblx0ICRzY29wZS5lZGl0Q2FzZSA9IGZ1bmN0aW9uKGlkKXtcblx0IFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7XG5cdFx0ICBcdHRlbXBsYXRlVXJsOiAndmlld3MvY2FzZS9jYXNlLm1vZGFsLmh0bWwnLFxuXHRcdCAgICBjb250cm9sbGVyOiAnQ2FzZU1vZGFsQ3RybCcsXG5cdFx0ICAgIHNpemU6IFwibGdcIixcblx0XHQgICAgcmVzb2x2ZSA6IHtcblx0XHQgICAgXHRjYXNlSWQgOiBmdW5jdGlvbigpe1xuXHRcdCAgICBcdFx0cmV0dXJuIGlkXG5cdFx0ICAgIFx0fSxcblx0XHQgICAgXHRjYXNlRGV0YWlscyA6IGZ1bmN0aW9uKCl7XG5cdFx0ICAgIFx0XHRyZXR1cm4gJHNjb3BlLmNhc2VEZXRhaWxzXG5cdFx0ICAgIFx0fVxuXHRcdCAgICB9XG5cdCAgICB9KTtcblx0IH07XG59XSlcbiIsIi8qKlxuKiBJbk5ldCBNb2R1bGVcbipcbiogRGVzY3JpcHRpb25cbiovXG5hbmd1bGFyLm1vZHVsZSgnSW5OZXQnKVxuLmNvbnRyb2xsZXIoJ0Nhc2VNb2RhbEN0cmwnLCBbJyRzY29wZScsICdDYXJTdmMnLCAnJG1vZGFsSW5zdGFuY2UnLCAnQ2FzZVN2YycsJyRzdGF0ZScsICdjYXNlSWQnLCdjYXNlRGV0YWlscycsICdTdFN2YycsICckd2luZG93JywgJ0JyYW5jaFN2YycsICdVc2VyU3ZjJywgJ050ZlN2YycsXG5cdGZ1bmN0aW9uICgkc2NvcGUsIENhclN2YywgJG1vZGFsSW5zdGFuY2UsIENhc2VTdmMsICRzdGF0ZSwgY2FzZUlkLCBjYXNlRGV0YWlscywgU3RTdmMgLCAkd2luZG93LCBCcmFuY2hTdmMsIFVzZXJTdmMsIE50ZlN2Yykge1xuXG5cdGlmIChfLmlzRW1wdHkoY2FzZURldGFpbHMpKSB7XG5cdFx0JHNjb3BlLmlzTmV3ID0gdHJ1ZTtcblx0XHRjYXJPYmpzID0gW107XG5cblx0fWVsc2V7XG5cdFx0JHNjb3BlLmlzTmV3ID0gZmFsc2U7XG5cdFx0dmFyIGNhck9ianMgPSBjYXNlRGV0YWlscy5jYXJzO1xuXHR9O1xuXHRcblx0JHNjb3BlLm5mdE9wdGlvbiA9IHt9O1xuXG5cdE50ZlN2Yy5mZXRjaCgpLnN1Y2Nlc3MoZnVuY3Rpb24obmZ0cyl7XG5cdFx0JHNjb3BlLm5mdE9wdGlvbi5uZnRzID0gbmZ0cztcblx0fSkudGhlbihmdW5jdGlvbigpe1xuXHRcdCRzY29wZS5uZnRPcHRpb24ubmZ0ID0gJHNjb3BlLm5mdE9wdGlvbi5uZnRzWzBdO1xuXHR9KVxuXG5cdEJyYW5jaFN2Yy5mZXRjaChVc2VyU3ZjLnVzZXJDb3JwcygpKS5zdWNjZXNzKGZ1bmN0aW9uKGJyYW5jaGVzKXtcblx0ICAgICRzY29wZS5icmFuY2hlcyA9IGJyYW5jaGVzO1xuXHR9KTtcblxuXHRmdW5jdGlvbiBnZXRDYXJzRGV0YWlsKG9iail7XG5cdFx0dmFyIGRpc3BhdGNoTGlzdCA9IFtdO1xuXHRcdHZhciBjYXJJZHMgPSBbXTtcblx0XHR2YXIgYnJhbmNoZXMgPSBbXTtcblxuXHRcdGlmIChvYmouY2Fycykge1xuXHRcdFx0Zm9yICh2YXIgaSA9IG9iai5jYXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHRcdGRpc3BhdGNoTGlzdC5wdXNoKG9iai5jYXJzW2ldLnJhZGlvQ29kZSk7XG5cdFx0XHRcdGNhcklkcy5wdXNoKG9iai5jYXJzW2ldLl9pZCk7XG5cdFx0XHRcdGJyYW5jaGVzLnB1c2gob2JqLmNhcnNbaV0uYnJhbmNoKTsgXG5cdFx0XHR9O1xuXHRcdFx0cmV0dXJuIHtkaXNwYXRjaExpc3QgOiBkaXNwYXRjaExpc3QgLCBjYXJJZHMgOiBjYXJJZHMgLCBicmFuY2hlcyA6ICBicmFuY2hlc31cblxuXHRcdH1lbHNle1xuXHRcdFx0cmV0dXJuIHt9O1xuXHRcdH07XG5cdH07XG5cblx0ZnVuY3Rpb24gZ2V0QnJhbmNoSWQoYnJhbmNoZXNMaXN0KXtcblx0XHR2YXIgYnJhbmNoZXMgPSBfLnVuaXF1ZShicmFuY2hlc0xpc3QpO1xuXHRcdHZhciBicmFuY2hJZHMgPSBbXTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8ICRzY29wZS5icmFuY2hlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKGJyYW5jaGVzLmluZGV4T2YoJHNjb3BlLmJyYW5jaGVzW2ldLm5hbWUpID4gLTEpIHtcblx0XHRcdFx0YnJhbmNoSWRzLnB1c2goJHNjb3BlLmJyYW5jaGVzW2ldLl9pZCk7XG5cdFx0XHR9O1xuXHRcdH07XG5cdFx0cmV0dXJuICBicmFuY2hJZHM7XG5cdH07XG5cblx0JHNjb3BlLmNhc2VPYmogPSB7XG5cdFx0YWRkcmVzcyA6IGNhc2VEZXRhaWxzLmFkZHJlc3MgfHwgbnVsbCxcblx0XHRwaG9uZSA6IGNhc2VEZXRhaWxzLnBob25lIHx8IG51bGwsXG5cdCAgICB0eXBlIDogY2FzZURldGFpbHMudHlwZSB8fCAgXCLngavoraZcIiwgXG5cdCAgICB0eXBlcyA6IFsgXCLngavoraZcIiwgXCLmlZHorbdcIiwgXCLngb3lrrNcIiwgXCLmqqLoiIlcIixcIuWFtuS7llwiXSxcblx0ICAgIGVudiAgIDogXCLkvY/lroXngavoraZcIixcblx0ICAgIGVudnMgIDogW1wi5L2P5a6F54Gr6K2mXCIsXCLpq5jmqJPjgIHlnLDkuIvoiIflt6Xlu6BcIixcIuaQtuaVkeWbsOmbo+WNgFwiLFwi5YW25LuWXCJdLFxuXHQgICAgZmxvb3IgOiAxLCBcblx0ICAgIGNhcklkcyA6IGdldENhcnNEZXRhaWwoY2FzZURldGFpbHMpLmNhcklkcyAgfHwgW10sXG5cdCAgICBkaXNwYXRjaExpc3QgOiBnZXRDYXJzRGV0YWlsKGNhc2VEZXRhaWxzKS5kaXNwYXRjaExpc3QgfHwgIFtdLFxuXHQgICAgYnJhbmNoZXMgOiBnZXRDYXJzRGV0YWlsKGNhc2VEZXRhaWxzKS5icmFuY2hlcyB8fCAgW11cblx0fTtcblxuXHQkc2NvcGUuZGlzcGF0Y2hMaXN0ID0gJHNjb3BlLmNhc2VPYmouZGlzcGF0Y2hMaXN0LmpvaW4oXCIgXCIpO1xuXG5cdCRzY29wZS5nZXRDYXJzID0gZnVuY3Rpb24oIGJyYW5jaCApe1xuXHRcdCBDYXJTdmMuZmluZEJ5QnJhbmNoKGJyYW5jaC5uYW1lKS5zdWNjZXNzKGZ1bmN0aW9uKGNhcnMpe1xuXHRcdCBcdGZvciAodmFyIGkgPSBjYXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0IFx0XHRpZiAoJHNjb3BlLmNhc2VPYmouY2FySWRzLmluZGV4T2YoY2Fyc1tpXS5faWQpID4gLTEgKSB7XG5cdFx0IFx0XHRcdGNhcnNbaV0uaXNDaGVja2VkID0gdHJ1ZTsgXG5cdFx0IFx0XHR9O1xuXHRcdCBcdH07XG5cdFx0IFx0JHNjb3BlLmNhcnMgPSBjYXJzO1xuXHRcdCB9KTtcblx0fTtcblxuXHQkc2NvcGUuY2FuY2VsID0gZnVuY3Rpb24gKCkge1xuXHRcdCRtb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpO1xuXHR9O1xuXG5cdCRzY29wZS5jYW5jZWxEaXNwYXRjaCA9IGZ1bmN0aW9uKGNhcil7XG5cdFx0Y2FyLmlzQ2hlY2tlZCA9IGZhbHNlO1xuXHRcdGNhck9ianMuc3BsaWNlKGNhck9ianMuaW5kZXhPZihjYXIpLDEpXG5cdFx0JHNjb3BlLmNhc2VPYmouY2FySWRzLnNwbGljZSgkc2NvcGUuY2FzZU9iai5kaXNwYXRjaExpc3QuaW5kZXhPZihjYXIuX2lkKSwxKTtcblx0XHQkc2NvcGUuY2FzZU9iai5kaXNwYXRjaExpc3Quc3BsaWNlKCRzY29wZS5jYXNlT2JqLmRpc3BhdGNoTGlzdC5pbmRleE9mKGNhci5yYWRpb0NvZGUpLDEpO1xuXHRcdCRzY29wZS5jYXNlT2JqLmJyYW5jaGVzLnNwbGljZSgkc2NvcGUuY2FzZU9iai5kaXNwYXRjaExpc3QuaW5kZXhPZihjYXIuYnJhbmNoKSwxKTtcblx0XHQkc2NvcGUuZGlzcGF0Y2hMaXN0ID0gJHNjb3BlLmNhc2VPYmouZGlzcGF0Y2hMaXN0LmpvaW4oXCIgXCIpO1xuXHR9O1xuXG5cdCRzY29wZS5kaXNwYXRjaCA9IGZ1bmN0aW9uKCBjYXIgKXtcblx0XHRjYXIuaXNDaGVja2VkID0gdHJ1ZTsgXG5cdFx0Y2FyT2Jqcy5wdXNoKGNhcik7XG5cdFx0JHNjb3BlLmNhc2VPYmouY2FySWRzLnB1c2goY2FyLl9pZCk7XG5cdFx0JHNjb3BlLmNhc2VPYmouZGlzcGF0Y2hMaXN0LnB1c2goY2FyLnJhZGlvQ29kZSk7XG5cdFx0JHNjb3BlLmNhc2VPYmouYnJhbmNoZXMucHVzaChjYXIuYnJhbmNoKTtcblx0XHQkc2NvcGUuZGlzcGF0Y2hMaXN0ID0gJHNjb3BlLmNhc2VPYmouZGlzcGF0Y2hMaXN0LmpvaW4oXCIgXCIpO1xuXHR9O1xuXG5cdCRzY29wZS5jbG9zZUNhc2UgPSBmdW5jdGlvbigpe1xuXHRcdFN0U3ZjLmNvdW50KGNhc2VEZXRhaWxzLl9pZCkuc3VjY2VzcyhmdW5jdGlvbih0b3RhbCl7XG5cdFx0XHRpZiAodG90YWwgPiAwICkge1xuXHRcdFx0XHQkd2luZG93LmFsZXJ0KFwi5bCa5pyJ6ZqK5ZOh5Zyo5a6J5YWo566h5Yi2XCIpXG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0Q2FzZVN2Yy5jbG9zZUNhc2Uoe1xuXHRcdFx0XHRcdGlkIDogY2FzZURldGFpbHMuX2lkLFxuXHRcdFx0XHRcdGlzT25nb2luZyA6IGZhbHNlXG5cdFx0XHRcdH0pLnN1Y2Nlc3MoZnVuY3Rpb24obXNnKXtcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhtc2cpXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHQkbW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcblx0XHRcdFx0JHN0YXRlLnJlbG9hZCgpXG5cdFx0XHR9O1xuXHRcdH0pO1xuXHR9O1xuXG5cdCRzY29wZS5zYXZlID0gZnVuY3Rpb24oKXtcblx0XHRDYXNlU3ZjLmNyZWF0ZSh7XG5cdFx0XHRjYXNlSWQgICA6IGNhc2VJZCArIDEsIFxuXHRcdFx0YWRkcmVzcyAgIDogJHNjb3BlLmNhc2VPYmouYWRkcmVzcyB8fCBcIua4rOipplwiLFxuXHRcdFx0b2ZmaWNlclJlY2VpdmVyIDogVXNlclN2Yy5jdXJyZW50VXNlcigpIHx8ICBcIuWKieabieabvFwiLFxuXHRcdFx0dHlwZSAgICAgIDogJHNjb3BlLmNhc2VPYmoudHlwZSB8fCBcIuaVkeitt1wiLFxuXHRcdFx0cGhvbmUgICAgIDogJHNjb3BlLmNhc2VPYmoucGhvbmUgfHwgXCLmuKzoqaZcIixcblx0XHRcdGJyYW5jaGVzICA6IF8udW5pcXVlKCRzY29wZS5jYXNlT2JqLmJyYW5jaGVzKSxcblx0XHRcdGJyYW5jaElkcyA6IGdldEJyYW5jaElkKCRzY29wZS5jYXNlT2JqLmJyYW5jaGVzKSxcblx0ICBcdFx0Y2FycyAgICAgIDogJHNjb3BlLmNhc2VPYmouY2FySWRzLFxuXHRcdFx0aXNPbmdvaW5nIDogdHJ1ZSxcblx0XHRcdGNvcnBzIFx0ICA6IFVzZXJTdmMudXNlckNvcnBzKCksXG5cdFx0XHRlbnYgXHQgIDogJHNjb3BlLmNhc2VPYmouZW52LFxuXHRcdFx0Zmxvb3IgXHQgIDogJHNjb3BlLmNhc2VPYmouZmxvb3Jcblx0XHR9KS5zdWNjZXNzKGZ1bmN0aW9uKG5ld0Nhc2Upe1xuXHRcdFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UobmV3Q2FzZSlcblx0XHR9KTtcblx0fTtcblxuXHQkc2NvcGUudXBkYXRlID0gZnVuY3Rpb24oKXtcblx0XHR2YXIgY29udGVudCA9IHtcblx0XHRcdGlkIDogY2FzZURldGFpbHMuX2lkLFxuXHRcdFx0Y2FzZUlkICAgOiBjYXNlSWQsIFxuXHRcdFx0YWRkcmVzcyAgIDogJHNjb3BlLmNhc2VPYmouYWRkcmVzcyxcblx0XHRcdG9mZmljZXJSZWNlaXZlciA6IFVzZXJTdmMuY3VycmVudFVzZXIoKSB8fCBcIuWKieabieabvFwiLFxuXHRcdFx0dHlwZSAgICAgIDogJHNjb3BlLmNhc2VPYmoudHlwZSxcblx0XHRcdHBob25lICAgICA6ICRzY29wZS5jYXNlT2JqLnBob25lLFxuXHRcdFx0YnJhbmNoZXMgIDogXy51bmlxdWUoJHNjb3BlLmNhc2VPYmouYnJhbmNoZXMpLFxuXHRcdFx0YnJhbmNoSWRzIDogZ2V0QnJhbmNoSWQoJHNjb3BlLmNhc2VPYmouYnJhbmNoZXMpLFxuXHQgIFx0XHRjYXJzICAgICAgOiAkc2NvcGUuY2FzZU9iai5jYXJJZHMsXG5cdFx0XHRpc09uZ29pbmcgOiB0cnVlLFxuXHRcdFx0ZW52IFx0ICA6ICRzY29wZS5jYXNlT2JqLmVudixcblx0XHRcdGZsb29yIFx0ICA6ICRzY29wZS5jYXNlT2JqLmZsb29yXG5cdFx0fTtcblx0XHRcblx0XHRDYXNlU3ZjLnVwZGF0ZShjb250ZW50KTtcblx0XHQkbW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcblx0fTtcbn1dKTsiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5zZXJ2aWNlKCdDYXNlU3ZjJywgWyckaHR0cCcsZnVuY3Rpb24gKCRodHRwKSB7XG5cblx0dGhpcy5mZXRjaCA9IGZ1bmN0aW9uKGNvcnBzKXtcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2Nhc2VzP2NvcnBzPScgKyBjb3JwcyApO1xuXHR9O1xuXG5cdHRoaXMuZmV0Y2hBbGwgPSBmdW5jdGlvbigpe1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvY2FzZXMvZGV0YWlscycpO1xuXHR9O1xuXG5cdHRoaXMuZmV0Y2hSZWxhdGl2ZUNhc2UgPSBmdW5jdGlvbihjb24pe1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvY2FzZXMvYnJhbmNoP2JyYW5jaD0nICsgY29uLmJyYW5jaCArICcmYWNjZXNzTGV2ZWw9JyArIGNvbi5hY2Nlc3NMZXZlbCArICcmY29ycHM9JyArIGNvbi5jb3JwcyApO1xuXHR9XG5cblx0dGhpcy5mZXRjaERldGFpbHMgPSBmdW5jdGlvbiggY2FzZUlkKXtcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2Nhc2VzL2RldGFpbHMvJyArIGNhc2VJZCk7XG5cdH07XG5cblx0dGhpcy5maW5kQnlJZCA9IGZ1bmN0aW9uKCBjYXNlSWQgKXtcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2Nhc2VzLycgKyBjYXNlSWQgKTtcblx0fTtcblxuXHR0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uKGNhc2VfaW5mbyl7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoJy9hcGkvY2FzZXMnLCBjYXNlX2luZm8pO1xuXHR9O1xuXG5cdHRoaXMudXBkYXRlID0gZnVuY3Rpb24odXBkYXRlZF9jYXNlKXtcblx0XHRyZXR1cm4gJGh0dHAucHV0KCcvYXBpL2Nhc2VzLycgKyB1cGRhdGVkX2Nhc2UuaWQgLCB1cGRhdGVkX2Nhc2UpO1xuXHR9O1xuXG5cdHRoaXMuZGVsZXRlID0gZnVuY3Rpb24oY2FzZUlkKXtcblx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9jYXNlcy8nICsgY2FzZUlkKTtcblx0fTtcblxuXHR0aGlzLmNsb3NlQ2FzZSA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvY2FzZXMvY2xvc2U/aWQ9JyArIGRhdGEuaWQsIGRhdGEgKVxuXHR9XG59XSkiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdEYXNoYm9hcmRDdHJsJywgWyckc2NvcGUnLCAnJGxvY2F0aW9uJywgJ1NvY2tldFN2YycsICdVc2VyU3ZjJywgJ0JyYW5jaFN2YycsXG5cdGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgU29ja2V0U3ZjLCBVc2VyU3ZjLCBCcmFuY2hTdmMpIHtcblxuXHRcdEJyYW5jaFN2Yy5mZXRjaChVc2VyU3ZjLnVzZXJDb3JwcygpKS5zdWNjZXNzKGZ1bmN0aW9uKGJyYW5jaGVzKXtcblx0XHRcdCRzY29wZS5icmFuY2hlcyA9IGJyYW5jaGVzO1xuXHRcdH0pO1xuXG5cdFx0VXNlclN2Yy5mZXRjaE9ubGluZVVzZXIoKS5zdWNjZXNzKGZ1bmN0aW9uKHVzZXJzKXtcblx0XHRcdCRzY29wZS51c2VycyA9IHVzZXJzO1xuXHRcdH0pXG5cblx0XHRTb2NrZXRTdmMub24oJ3VzZXJMb2dpbicsZnVuY3Rpb24odXNlcil7XG5cdFx0XHQkc2NvcGUudXNlcnMucHVzaCh1c2VyKTtcblx0XHR9KTtcblxuXHRcdFNvY2tldFN2Yy5vbigndXNlckRpc2Nvbm5lY3QnLGZ1bmN0aW9uKGRpc2Nvbm5lY3RVc2VyKXtcblx0XHRcdCRzY29wZS51c2VycyA9ICRzY29wZS51c2Vycy5maWx0ZXIoZnVuY3Rpb24odXNlcikge1xuXHRcdFx0XHRyZXR1cm4gdXNlci51c2VybmFtZSAhPSBkaXNjb25uZWN0VXNlci51c2VybmFtZVxuXHRcdFx0fSk7XG5cdFx0fSk7XG5cblx0XHRTb2NrZXRTdmMub24oJ3VzZXJMb2dvdXQnLGZ1bmN0aW9uKGxvZ291dFVzZXIpe1xuXHRcdFx0JHNjb3BlLnVzZXJzID0gJHNjb3BlLnVzZXJzLmZpbHRlcihmdW5jdGlvbih1c2VyKSB7XG5cdFx0XHRcdHJldHVybiB1c2VyLnVzZXJuYW1lICE9IGxvZ291dFVzZXIudXNlcm5hbWVcblx0XHRcdH0pO1xuXHRcdH0pO1xuXG5cdFx0JHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoZXZlbnQpIHtcblx0ICAgICAgICBTb2NrZXRTdmMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG5cdCAgICB9KTtcblxufV0pIiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cblxuXG5hbmd1bGFyLm1vZHVsZSgnSW5OZXQnKVxuLmRpcmVjdGl2ZSgnbWluaW1hbGl6YVNpZGViYXInLCBbICckdGltZW91dCcsIGZ1bmN0aW9uICgkdGltZW91dCkge1xuXHRyZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgICB0ZW1wbGF0ZTogJzxhIGNsYXNzPVwibmF2YmFyLW1pbmltYWxpemUgbWluaW1hbGl6ZS1zdHlsLTIgYnRuIGJ0bi1wcmltYXJ5XCIgaHJlZj1cIlwiIG5nLWNsaWNrPVwibWluaW1hbGl6ZSgpXCI+PGkgY2xhc3M9XCJmYSBmYS1iYXJzXCI+PC9pPjwvYT4nLFxuICAgICAgICBjb250cm9sbGVyOiBmdW5jdGlvbiAoJHNjb3BlLCAkZWxlbWVudCkge1xuICAgICAgICAgICAgJHNjb3BlLm1pbmltYWxpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgJChcImJvZHlcIikudG9nZ2xlQ2xhc3MoXCJtaW5pLW5hdmJhclwiKTtcbiAgICAgICAgICAgICAgICBpZiAoISQoJ2JvZHknKS5oYXNDbGFzcygnbWluaS1uYXZiYXInKSB8fCAkKCdib2R5JykuaGFzQ2xhc3MoJ2JvZHktc21hbGwnKSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBIaWRlIG1lbnUgaW4gb3JkZXIgdG8gc21vb3RobHkgdHVybiBvbiB3aGVuIG1heGltaXplIG1lbnVcbiAgICAgICAgICAgICAgICAgICAgJCgnI3NpZGUtbWVudScpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gRm9yIHNtb290aGx5IHR1cm4gb24gbWVudVxuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNzaWRlLW1lbnUnKS5mYWRlSW4oNTAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIDEwMCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ2ZpeGVkLXNpZGViYXInKSl7XG4gICAgICAgICAgICAgICAgICAgICQoJyNzaWRlLW1lbnUnKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3NpZGUtbWVudScpLmZhZGVJbig1MDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMzAwKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBSZW1vdmUgYWxsIGlubGluZSBzdHlsZSBmcm9tIGpxdWVyeSBmYWRlSW4gZnVuY3Rpb24gdG8gcmVzZXQgbWVudSBzdGF0ZVxuICAgICAgICAgICAgICAgICAgICAkKCcjc2lkZS1tZW51JykucmVtb3ZlQXR0cignc3R5bGUnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XSlcblxuLmRpcmVjdGl2ZSgnc2lkZU5hdmlnYXRpb24nLCBbICckdGltZW91dCcsIGZ1bmN0aW9uKCAkdGltZW91dCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50KSB7XG4gICAgICAgICAgICAvLyBDYWxsIHRoZSBtZXRzaU1lbnUgcGx1Z2luIGFuZCBwbHVnIGl0IHRvIHNpZGViYXIgbmF2aWdhdGlvblxuICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICBlbGVtZW50Lm1ldGlzTWVudSgpO1xuXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG59XSlcblxuLmRpcmVjdGl2ZSgnaWJveFRvb2xzJywgWyAnJHRpbWVvdXQnLGZ1bmN0aW9uICgkdGltZW91dCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICAgIHNjb3BlOiB0cnVlLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2NvbW1vbi9pYm94X3Rvb2xzLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiBmdW5jdGlvbiAoJHNjb3BlLCAkZWxlbWVudCkge1xuICAgICAgICAgICAgLy8gRnVuY3Rpb24gZm9yIGNvbGxhcHNlIGlib3hcbiAgICAgICAgICAgICRzY29wZS5zaG93aGlkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgaWJveCA9ICRlbGVtZW50LmNsb3Nlc3QoJ2Rpdi5pYm94Jyk7XG4gICAgICAgICAgICAgICAgdmFyIGljb24gPSAkZWxlbWVudC5maW5kKCdpOmZpcnN0Jyk7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBpYm94LmZpbmQoJ2Rpdi5pYm94LWNvbnRlbnQnKTtcbiAgICAgICAgICAgICAgICBjb250ZW50LnNsaWRlVG9nZ2xlKDIwMCk7XG4gICAgICAgICAgICAgICAgLy8gVG9nZ2xlIGljb24gZnJvbSB1cCB0byBkb3duXG4gICAgICAgICAgICAgICAgaWNvbi50b2dnbGVDbGFzcygnZmEtY2hldnJvbi11cCcpLnRvZ2dsZUNsYXNzKCdmYS1jaGV2cm9uLWRvd24nKTtcbiAgICAgICAgICAgICAgICBpYm94LnRvZ2dsZUNsYXNzKCcnKS50b2dnbGVDbGFzcygnYm9yZGVyLWJvdHRvbScpO1xuICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWJveC5yZXNpemUoKTtcbiAgICAgICAgICAgICAgICAgICAgaWJveC5maW5kKCdbaWRePW1hcC1dJykucmVzaXplKCk7XG4gICAgICAgICAgICAgICAgfSwgNTApO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAvLyBGdW5jdGlvbiBmb3IgY2xvc2UgaWJveFxuICAgICAgICAgICAgICAgICRzY29wZS5jbG9zZWJveCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlib3ggPSAkZWxlbWVudC5jbG9zZXN0KCdkaXYuaWJveCcpO1xuICAgICAgICAgICAgICAgICAgICBpYm94LnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59XSlcblxuLmRpcmVjdGl2ZSgnYmFjaycsIFsnJHdpbmRvdycgLCBmdW5jdGlvbiAoJHdpbmRvdykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgaUVsZW1lbnQsIGlBdHRycykge1xuICAgICAgICAgICAgaUVsZW1lbnQuYmluZCgnY2xpY2snLGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgJHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9O1xufV0pXG4iLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdEaXJEdXR5TGlzdEN0cmwnLCBbJyRzY29wZScsICdVc2VyU3ZjJywgJ0JyYW5jaFN2YycsIFxuXHRmdW5jdGlvbiAoJHNjb3BlLCBVc2VyU3ZjLCBCcmFuY2hTdmMpIHtcblxuXHRcdHZhciBicmFuY2ggPSBVc2VyU3ZjLnVzZXJCcmFuY2goKTtcblx0XHRcblx0XHRCcmFuY2hTdmMudG90YWxMaXN0RmluZEJ5TmFtZShicmFuY2gpLnN1Y2Nlc3MoZnVuY3Rpb24oYnJhbmNoKXtcblx0XHRcdCRzY29wZS5icmFuY2ggPSBicmFuY2g7XG5cdFx0XHQkc2NvcGUub25EdXR5VG90YWwgPSAkc2NvcGUuYnJhbmNoLm1lbWJlcnMuZmlsdGVyKGZ1bmN0aW9uKG1lbWJlcikge1xuXHRcdFx0XHRyZXR1cm4gbWVtYmVyLm9uRHV0eSA9PSB0cnVlIFxuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdFxufV0pIiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uY29udHJvbGxlcignRGlzcGF0Y2hDdHJsJywgWyckc2NvcGUnLCckc3RhdGVQYXJhbXMnLCckbW9kYWwnLCdDYXNlU3ZjJywnQnJhbmNoU3ZjJywgJ0NhclN2YycsICdVc2VyU3ZjJyxcblx0ZnVuY3Rpb24gKCRzY29wZSAsICRzdGF0ZVBhcmFtcywgJG1vZGFsLCBDYXNlU3ZjLCBCcmFuY2hTdmMsIENhclN2YywgVXNlclN2Yykge1xuXG5cdENhc2VTdmMuZmV0Y2goVXNlclN2Yy51c2VyQ29ycHMoKSkuc3VjY2VzcyhmdW5jdGlvbihjYXNlcyl7XG5cdFx0JHNjb3BlLmNhc2VzID0gY2FzZXM7XG5cdFx0Q2FzZVN2Yy5maW5kQnlJZCgkc2NvcGUuY2FzZXNbJHN0YXRlUGFyYW1zLmNhc2VJZF0uX2lkKS5zdWNjZXNzKGZ1bmN0aW9uKF9jYXNlKXtcblx0XHRcdFx0JHNjb3BlLmNhc2VEZXRhaWxzID0gX2Nhc2Vcblx0XHR9KVxuXHR9KVxuXG5cdEJyYW5jaFN2Yy5mZXRjaChVc2VyU3ZjLnVzZXJDb3JwcygpKS5zdWNjZXNzKGZ1bmN0aW9uKGJyYW5jaGVzKXtcblx0ICAgICRzY29wZS5icmFuY2hMaXN0ID0gYnJhbmNoZXM7XG5cblx0IH0pXG5cblx0Q2FyU3ZjLmZldGNoKCkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKXtcblx0ICAgICRzY29wZS5jYXJzRGF0YSA9IGRhdGFcblx0fSlcblxuXHQkc2NvcGUuYWRkTmV3Q2FzZSA9IGZ1bmN0aW9uICgpIHtcblx0ICBcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdCAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFscy9jYXNlUGFuZWwvY2FzZUFkZE1vZGFsJyxcblx0XHQgICAgY29udHJvbGxlcjogJ0Nhc2VBZGRNb2RhbEN0cmwnLFxuXHRcdCAgICBzaXplOiBcImxnXCIsXG5cdFx0ICAgIHJlc29sdmUgOiB7XG5cdFx0ICAgIFx0Y2FzZUlkIDogZnVuY3Rpb24oKXtcblx0XHQgICAgXHRcdHJldHVybiAkc2NvcGUuaWQgPSBcIuaWsOWinuahiOS7tlwiXG5cdFx0ICAgIFx0fSxcblx0XHQgICAgXHRicmFuY2hMaXN0IDogZnVuY3Rpb24oKXtcblx0XHQgICAgXHRcdHJldHVybiAkc2NvcGUuYnJhbmNoTGlzdFxuXHRcdCAgICBcdH0sXG5cdFx0ICAgIFx0Y2Fyc0RhdGEgOiBmdW5jdGlvbigpe1xuXHRcdCAgICBcdFx0cmV0dXJuICRzY29wZS5jYXJzRGF0YVxuXHRcdCAgICBcdH0sXG5cdFx0ICAgIFx0aXNOZXcgOiBmdW5jdGlvbigpe1xuXHRcdCAgICBcdFx0cmV0dXJuIHRydWVcblx0XHQgICAgXHR9LFxuXHRcdCAgICBcdGNhc2VEZXRhaWxzIDogZnVuY3Rpb24oKXtcblx0XHQgICAgXHRcdHJldHVybiB7fVxuXHRcdCAgICBcdH1cblx0XHQgICAgfVxuXHQgICAgfSk7XG5cdCB9O1xuXG5cdCAkc2NvcGUuZWRpdENhc2UgPSBmdW5jdGlvbigpe1xuXHQgXHR2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHtcblx0XHQgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvY2FzZVBhbmVsL2Nhc2VBZGRNb2RhbCcsXG5cdFx0ICAgIGNvbnRyb2xsZXI6ICdDYXNlQWRkTW9kYWxDdHJsJyxcblx0XHQgICAgc2l6ZTogXCJsZ1wiLFxuXHRcdCAgICByZXNvbHZlIDoge1xuXHRcdCAgICBcdGNhc2VJZCA6IGZ1bmN0aW9uKCl7XG5cdFx0ICAgIFx0XHRyZXR1cm4gJHNjb3BlLmlkID0gJHNjb3BlLmNhc2VzWyRzdGF0ZVBhcmFtcy5jYXNlSWRdLmNhc2VJZCBcblx0XHQgICAgXHR9LFxuXHRcdCAgICBcdGJyYW5jaExpc3QgOiBmdW5jdGlvbigpe1xuXHRcdCAgICBcdFx0cmV0dXJuICRzY29wZS5icmFuY2hMaXN0XG5cdFx0ICAgIFx0fSxcblx0XHQgICAgXHRjYXJzRGF0YSA6IGZ1bmN0aW9uKCl7XG5cdFx0ICAgIFx0XHRmb3IgKHZhciBpID0gJHNjb3BlLmNhcnNEYXRhLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0ICAgIFx0XHRcdGZvciAodmFyIGogPSAkc2NvcGUuY2FzZURldGFpbHMuY2Fycy5sZW5ndGggLSAxOyBqID49IDA7IGotLSkge1xuXHRcdCAgICBcdFx0XHRcdGlmICggJHNjb3BlLmNhcnNEYXRhW2ldLnJhZGlvQ29kZSA9PT0gJHNjb3BlLmNhc2VEZXRhaWxzLmNhcnNbal0ucmFkaW9fY29kZSkge1xuXHRcdCAgICBcdFx0XHRcdFx0JHNjb3BlLmNhcnNEYXRhW2ldLmlzQ2hlY2tlZCA9IHRydWUgXG5cdFx0ICAgIFx0XHRcdFx0fTtcblx0XHQgICAgXHRcdFx0fTtcdFx0ICAgIFx0XHRcdFxuXHRcdCAgICBcdFx0fTtcblx0XHQgICAgXHRcdHJldHVybiAkc2NvcGUuY2Fyc0RhdGFcblx0XHQgICAgXHR9LFxuXHRcdCAgICBcdGlzTmV3IDogZnVuY3Rpb24oKXtcblx0XHQgICAgXHRcdHJldHVybiBmYWxzZSBcblx0XHQgICAgXHR9LFxuXHRcdCAgICBcdGNhc2VEZXRhaWxzIDogZnVuY3Rpb24oKXtcblx0XHQgICAgXHRcdHJldHVybiAkc2NvcGUuY2FzZURldGFpbHNcblx0XHQgICAgXHR9XG5cdFx0ICAgIH1cblx0ICAgIH0pO1xuXHQgfTtcblxufV0pIiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uY29udHJvbGxlcignRHV0eUxpc3RDdHJsJywgWyckc2NvcGUnLCAnQnJhbmNoU3ZjJywgJyRzdGF0ZVBhcmFtcycsICdTb2NrZXRTdmMnLCAnVXNlclN2YycsICckcScsXG5cdGZ1bmN0aW9uICgkc2NvcGUsIEJyYW5jaFN2YywgJHN0YXRlUGFyYW1zLCBTb2NrZXRTdmMsIFVzZXJTdmMsICRxKSB7XG5cblx0XHR2YXIgYnJhbmNoID0gJHN0YXRlUGFyYW1zLmJyYW5jaFxuXHRcdFxuXHRcdEJyYW5jaFN2Yy50b3RhbExpc3RGaW5kQnlOYW1lKGJyYW5jaCkuc3VjY2VzcyhmdW5jdGlvbihicmFuY2gpe1xuXHRcdFx0JHNjb3BlLmJyYW5jaCA9IGJyYW5jaDtcblx0XHRcdCRzY29wZS5vbkR1dHlUb3RhbCA9ICRzY29wZS5icmFuY2gubWVtYmVycy5maWx0ZXIoZnVuY3Rpb24obWVtYmVyKSB7XG5cdFx0XHRcdHJldHVybiBtZW1iZXIub25EdXR5ID09IHRydWVcblx0XHRcdH0pO1xuXHRcdH0pO1xufV0pIiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uY29udHJvbGxlcignRHV0eUxpc3RFZGl0Q3RybCcsIFsnJHNjb3BlJywgJ0JyYW5jaFN2YycsICckc3RhdGVQYXJhbXMnLCdNZW1iZXJTdmMnLCAnJGxvY2F0aW9uJywgJyR3aW5kb3cnLCAnVXNlclN2YycsXG5cdGZ1bmN0aW9uICgkc2NvcGUsIEJyYW5jaFN2YywgJHN0YXRlUGFyYW1zLCBNZW1iZXJTdmMsICRsb2NhdGlvbiwgJHdpbmRvdywgVXNlclN2Yykge1xuXG5cdFx0aWYgKFVzZXJTdmMuYWNjZXNzTGV2ZWwoKSA8IDIgKSB7XG5cdFx0XHR2YXIgYnJhbmNoID0gVXNlclN2Yy51c2VyQnJhbmNoKCk7XG5cdFx0fSBlbHNle1xuXHRcdFx0dmFyIGJyYW5jaCA9ICRzdGF0ZVBhcmFtcy5icmFuY2hcblx0XHR9O1xuXG5cdFx0QnJhbmNoU3ZjLnRvdGFsTGlzdEZpbmRCeU5hbWUoYnJhbmNoKS5zdWNjZXNzKGZ1bmN0aW9uKGJyYW5jaCl7XG5cdFx0XHQkc2NvcGUuYnJhbmNoID0gYnJhbmNoO1xuXHRcdFx0JHNjb3BlLm9uRHV0eVRvdGFsID0gMDtcblx0XHR9KTtcblxuXHRcdCRzY29wZS5jaGVjayA9IGZ1bmN0aW9uKG1lbWJlcil7XG5cdFx0XHRtZW1iZXIub25EdXR5ID0gIW1lbWJlci5vbkR1dHlcblx0XHR9O1xuXG5cdFx0JHNjb3BlLnNhdmUgPSBmdW5jdGlvbigpe1xuXG5cdFx0XHR2YXIgRGlzcGF0Y2hOdW1iZXIgPSAkc2NvcGUuYnJhbmNoLm1lbWJlcnMuZmlsdGVyKGZ1bmN0aW9uKG1lbWJlcikge1xuXHRcdFx0XHRyZXR1cm4gbWVtYmVyLm9uRHV0eVxuXHRcdFx0fSk7XG5cblx0XHRcdEJyYW5jaFN2Yy51cGRhdGVEaXJlY3Rvcih7XG5cdFx0XHRcdGJyYW5jaCAgIDogJHNjb3BlLmJyYW5jaC5uYW1lLFxuXHRcdFx0XHRkaXJlY3RvciA6ICRzY29wZS5icmFuY2guZGlyZWN0b3IsXG5cdFx0XHRcdGRpc3BhdGNoTnVtIDogRGlzcGF0Y2hOdW1iZXIubGVuZ3RoXG5cdFx0XHR9KS5zdWNjZXNzKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgJHNjb3BlLmJyYW5jaC5tZW1iZXJzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0TWVtYmVyU3ZjLnVwZGF0ZU9uRHV0eSh7XG5cdFx0XHRcdFx0XHRtZW1iZXJJZCA6ICRzY29wZS5icmFuY2gubWVtYmVyc1tpXS5faWQsXG5cdFx0XHRcdFx0XHRvbkR1dHkgICA6ICRzY29wZS5icmFuY2gubWVtYmVyc1tpXS5vbkR1dHksXG5cdFx0XHRcdFx0XHRtaXNzaW9uICA6ICRzY29wZS5icmFuY2gubWVtYmVyc1tpXS5taXNzaW9uXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH07XG5cdFx0XHR9KS50aGVuKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCR3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XG5cdFx0XHR9KTtcblx0XHR9O1xuXHRcbn1dKSIsIi8qKlxuKiBJbk5ldCBNb2R1bGVcbipcbiogRGVzY3JpcHRpb25cbiovXG5hbmd1bGFyLm1vZHVsZSgnSW5OZXQnKVxuLnNlcnZpY2UoJ0dlb1N2YycsIFsgJyRxJywgZnVuY3Rpb24gKCAkcSApIHtcblxuXHR0aGlzLmdldEdlb2xvY2F0aW9uQ29vcmRpbmF0ZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihcbiAgICAgICAgICAgIGZ1bmN0aW9uKHBvc2l0aW9uKSB7IGRlZmVycmVkLnJlc29sdmUocG9zaXRpb24uY29vcmRzKTsgfSxcbiAgICAgICAgICAgIGZ1bmN0aW9uKGVycm9yKSB7IGRlZmVycmVkLnJlc29sdmUobnVsbCk7IH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfTtcblxuXHRcbn1dKSIsIi8qKlxuKiBJbk5ldCBNb2R1bGVcbipcbiogRGVzY3JpcHRpb25cbiovXG5hbmd1bGFyLm1vZHVsZSgnSW5OZXQnKVxuLmNvbnRyb2xsZXIoJ0xvZ2luQ3RybCcsIFsnJHNjb3BlJywnVXNlclN2YycsICdzdG9yZScsICckc3RhdGUnLCdqd3RIZWxwZXInLCckaHR0cCcsICdTb2NrZXRTdmMnLFxuXHRmdW5jdGlvbiAoJHNjb3BlLCBVc2VyU3ZjLCBzdG9yZSwgJHN0YXRlLCBqd3RIZWxwZXIsICRodHRwLCBTb2NrZXRTdmMpIHtcblxuXHR2YXIgdG9rZW4gPSBudWxsO1xuXHQkc2NvcGUudXNlciA9IHt9O1xuXHQkc2NvcGUubG9naW4gPSBmdW5jdGlvbigpe1xuXHRcdFVzZXJTdmMubG9naW4oJHNjb3BlLnVzZXIpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSl7XG5cdFx0XHRpZiAoZGF0YS5zdWNjZXNzKSB7XG5cdFx0XHRcdHN0b3JlLnNldCgnand0JywgZGF0YS50b2tlbik7XG5cdFx0XHRcdCRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWyd4LWFjY2Vzcy10b2tlbiddID0gZGF0YS50b2tlbjtcblx0XHRcdFx0dG9rZW4gPSBkYXRhLnRva2VuO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwicGFzc3dvcmQgaXMgbm90IGV4aXN0ZWQhXCIpO1xuXHRcdFx0fTtcblx0XHR9KS50aGVuKGZ1bmN0aW9uKCl7XG5cdFx0XHRTb2NrZXRTdmMuaW5pdCh0b2tlbik7XG5cdFx0XHRTb2NrZXRTdmMuZW1pdCgnbG9naW4nKTtcblx0XHR9KVxuXHRcdC50aGVuKGZ1bmN0aW9uKCl7XG5cdFx0XHRpZiAoand0SGVscGVyLmRlY29kZVRva2VuKHRva2VuKS5yb2xlID09IFwiYWRtaW5cIikge1xuXHRcdFx0XHQkc3RhdGUuZ28oJ2R1dHlEZXNrLmRhc2hib2FyZCcpXG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0JHN0YXRlLmdvKCdkaXJlY3Rvci5zYWZldHkuaW5kZXgnKVxuXHRcdFx0fVxuXHRcdH0pXG5cdH07XG59XSkiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdNYXBJbmRleEN0cmwnLCBbJyRzY29wZScsICdsZWFmbGV0RGF0YScsICdHZW9TdmMnLFxuICAgIGZ1bmN0aW9uICgkc2NvcGUsIGxlYWZsZXREYXRhLCBHZW9TdmMpIHtcbiAgICAgICAgXG4gICAgR2VvU3ZjLmdldEdlb2xvY2F0aW9uQ29vcmRpbmF0ZXMoKS50aGVuKGZ1bmN0aW9uKGNvb3JkKXtcbiAgICAgICAgJHNjb3BlLm5vd1Bvcy5sYXQgPSBjb29yZC5sYXRpdHVkZTtcbiAgICAgICAgJHNjb3BlLm5vd1Bvcy5sbmcgPSBjb29yZC5sb25naXR1ZGU7XG4gICAgICAgICRzY29wZS5ub3dQb3Muem9vbSA9IDE3O1xuICAgIH0pXG5cbiAgICBhbmd1bGFyLmV4dGVuZCgkc2NvcGUsIHtcbiAgICAgICAgbm93UG9zOiB7XG4gICAgICAgICAgICBsYXQ6IDI0Ljk4OCxcbiAgICAgICAgICAgIGxuZzogMTIxLjU3NTIsXG4gICAgICAgICAgICB6b29tOiAxN1xuICAgICAgICB9LFxuICAgICAgICBjb250cm9sczoge1xuICAgICAgICAgICAgZHJhdzoge31cbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICBsZWFmbGV0RGF0YS5nZXRNYXAoKS50aGVuKGZ1bmN0aW9uKG1hcCkge1xuICAgICAgdmFyIGRyYXduSXRlbXMgPSAkc2NvcGUuY29udHJvbHMuZWRpdC5mZWF0dXJlR3JvdXA7XG4gICAgICBtYXAub24oJ2RyYXc6Y3JlYXRlZCcsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBsYXllciA9IGUubGF5ZXI7XG4gICAgICAgIGRyYXduSXRlbXMuYWRkTGF5ZXIobGF5ZXIpO1xuICAgICAgICBcbiAgICAgICAgRmVhdHVyZUNvbGxlY3Rpb25zLnB1c2gobGF5ZXIudG9HZW9KU09OKCkpXG4gICAgICAgIFxuICAgICAgfSk7XG4gICAgfSlcblxuXHRcbn1dKSIsIi8qKlxuKiBJbk5ldCBNb2R1bGVcbipcbiogRGVzY3JpcHRpb25cbiovXG5hbmd1bGFyLm1vZHVsZSgnSW5OZXQnKVxuLmNvbnRyb2xsZXIoJ01lbWJlckFjY291bnRNb2RhbEN0cmwnLCBbJyRzY29wZScsICdVc2VyU3ZjJywgJ01lbWJlclN2YycsICdtZW1iZXInLCAnJG1vZGFsSW5zdGFuY2UnLFxuXHRmdW5jdGlvbiAoJHNjb3BlLCBVc2VyU3ZjLCBNZW1iZXJTdmMsIG1lbWJlciwgJG1vZGFsSW5zdGFuY2UpIHtcblxuXHQkc2NvcGUudXNlciA9IG1lbWJlcjtcblxuXHQkc2NvcGUuc2F2ZSA9IGZ1bmN0aW9uKCl7XG5cdFx0aWYgKF8uaXNFbXB0eSgkc2NvcGUudXNlcikpIHtcblx0XHRcdGNvbnNvbGUubG9nKFwicGxlYXNlIGVudGVyIHlvdXIgYWNjb3VudCBhbmQgcGFzc3dvcmQhXCIpXG5cdFx0fSBlbHNle1xuXHRcdFx0aWYgKCEkc2NvcGUudXNlci5hY2NvdW50KSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiYWNjb3VudCBjYW4ndCBiZSBibGFuayFcIilcblx0XHRcdFx0aWYgKCEkc2NvcGUudXNlci5wYXNzd29yZCkge1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwicGFzc3dvZCBjYW4ndCBiZSBibGFuayFcIilcblx0XHRcdFx0fTtcblx0XHRcdH0gZWxzZSBpZiAoISRzY29wZS51c2VyLnBhc3N3b3JkKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwicGFzc3dvcmQgY2FuJ3QgYmUgYmxhbmtcIilcblx0XHRcdH1lbHNle1xuXHRcdFx0XHRVc2VyU3ZjLmFjdGl2YXRlKCRzY29wZS51c2VyKTtcblx0XHRcdFx0TWVtYmVyU3ZjLnVwZGF0ZVVzZXIobWVtYmVyLm5hbWUpO1xuXHRcdFx0XHQkbW9kYWxJbnN0YW5jZS5jbG9zZSgkc2NvcGUudXNlcik7XG5cdFx0XHR9O1xuXHRcdH07XG5cdH07XG5cblx0JHNjb3BlLmNhbmNlbCA9IGZ1bmN0aW9uKCl7XG5cdFx0JG1vZGFsSW5zdGFuY2UuZGlzbWlzcygnY2FuY2VsJyk7XG5cdH1cbn1dKSIsIi8qKlxuKiBJbk5ldCBNb2R1bGVcbipcbiogRGVzY3JpcHRpb25cbiovXG5hbmd1bGFyLm1vZHVsZSgnSW5OZXQnKVxuLmNvbnRyb2xsZXIoJ01lbWJlckN0cmwnLCBbJyRzY29wZScsICdNZW1iZXJTdmMnLCAnJHN0YXRlUGFyYW1zJyxcblx0ZnVuY3Rpb24gKCRzY29wZSwgTWVtYmVyU3ZjLCAkc3RhdGVQYXJhbXMpIHtcblxuXHRcdCRzY29wZS5icmFuY2ggPSAkc3RhdGVQYXJhbXMuYnJhbmNoO1xuXG5cdFx0TWVtYmVyU3ZjLmZpbmRCeUJyYW5jaCgkc3RhdGVQYXJhbXMuYnJhbmNoKS5zdWNjZXNzKGZ1bmN0aW9uKG1lbWJlcnMpe1xuXHRcdFx0JHNjb3BlLm1lbWJlcnMgPSBtZW1iZXJzO1xuXHRcdFx0JHNjb3BlLm1lbWJlcnMuZm9yRWFjaChmdW5jdGlvbihtZW1iZXIpe1xuXHRcdFx0XHRtZW1iZXIud29ya2luZ1RpbWUgPSBtb21lbnQuZHVyYXRpb24obWVtYmVyLndvcmtpbmdUaW1lLCdzZWNvbmRzJyk7XG5cdFx0XHR9KTtcblx0XHR9KTtcblxufV0pIiwiYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdNZW1iZXJFZGl0Q3RybCcsIFsnJHNjb3BlJywgJ01lbWJlclN2YycsICdCcmFuY2hTdmMnLCAnJHN0YXRlUGFyYW1zJywgJyR3aW5kb3cnLCckbW9kYWwnLCAnJHN0YXRlJywgJ1VzZXJTdmMnLFxuXHRmdW5jdGlvbiAoJHNjb3BlLCBNZW1iZXJTdmMsIEJyYW5jaFN2YywgJHN0YXRlUGFyYW1zLCAkd2luZG93LCAkbW9kYWwsICRzdGF0ZSwgVXNlclN2Yykge1xuXG5cdFx0JHNjb3BlLmFsZXJ0cyA9IFtdO1xuXHRcdCRzY29wZS5tZW1iZXJEZWxldGVkID0gZmFsc2U7XG5cdFx0dmFyIHRlbXBEZWxNZW1iZXIgPSBudWxsO1xuXHRcdCRzY29wZS5hY2Nlc3NMZXZlbCA9IFVzZXJTdmMuYWNjZXNzTGV2ZWwoKTtcblx0XHRcblx0XHR2YXIgbWVtYmVySW5pdCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRNZW1iZXJTdmMuZmluZEJ5QnJhbmNoKCRzdGF0ZVBhcmFtcy5icmFuY2gpLnN1Y2Nlc3MoZnVuY3Rpb24obWVtYmVycyl7XG5cdFx0XHRcdCRzY29wZS5tZW1iZXJzID0gbWVtYmVycztcblx0XHRcdFx0JHNjb3BlLm1lbWJlcnMuZm9yRWFjaChmdW5jdGlvbihtZW1iZXIpe1xuXHRcdFx0XHRcdG1lbWJlci53b3JraW5nVGltZSA9IG1vbWVudC5kdXJhdGlvbihtZW1iZXIud29ya2luZ1RpbWUsJ3NlY29uZHMnKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0bWVtYmVySW5pdCgpO1xuXG5cdFx0JHNjb3BlLnNhdmUgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIG1lbWJlcklkcyA9IFtdO1xuXHRcdFx0dmFyIGRpcmVjdG9ycyA9IFtdO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAkc2NvcGUubWVtYmVycy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRtZW1iZXJJZHMucHVzaCgkc2NvcGUubWVtYmVyc1tpXS5faWQpO1xuXHRcdFx0XHRkaXJlY3RvcnMucHVzaCgkc2NvcGUubWVtYmVyc1tpXS5uYW1lKTtcblx0XHRcdFx0aWYgKCRzY29wZS5tZW1iZXJzW2ldLnRpdGxlID09IFwi5YiG6ZqK6ZW3XCIgfHwgJHNjb3BlLm1lbWJlcnNbaV0udGl0bGUgPT0gXCLlsI/pmorplbdcIiB8fCAkc2NvcGUubWVtYmVyc1tpXS50aXRsZSA9PSBcIuS4remaiumVt1wiIHx8ICRzY29wZS5tZW1iZXJzW2ldLnRpdGxlID09IFwi5aSn6ZqK6ZW3XCIpIHtcblx0XHRcdFx0XHRkaXJlY3RvciA9ICRzY29wZS5tZW1iZXJzW2ldLm5hbWU7XG5cdFx0XHRcdH07XG5cdFx0XHR9O1xuXG5cdFx0XHRCcmFuY2hTdmMudXBkYXRlKHtcblx0XHRcdFx0YnJhbmNoIDogJHN0YXRlUGFyYW1zLmJyYW5jaCxcblx0XHRcdFx0bWVtYmVycyA6IG1lbWJlcklkcyxcblx0XHRcdFx0ZGlyZWN0b3JzIDogZGlyZWN0b3JzLFxuXHRcdFx0XHRkaXJlY3RvciA6IGRpcmVjdG9yXG5cdFx0XHR9KTtcblxuXHRcdFx0ICR3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5hZGROZXdNZW1iZXIgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7XG5cdFx0XHQgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9tZW1iZXIvbWVtYmVyLm1vZGFsLmh0bWwnLFxuXHRcdFx0ICAgIGNvbnRyb2xsZXI6ICdNZW1iZXJNb2RhbEN0cmwnLFxuXHRcdFx0ICAgIHNpemU6IFwibWRcIixcblx0XHRcdCAgICByZXNvbHZlIDoge1xuXHRcdFx0ICAgIFx0YnJhbmNoIDogZnVuY3Rpb24oKXtcblx0XHRcdCAgICBcdFx0cmV0dXJuICRzdGF0ZVBhcmFtcy5icmFuY2ggXG5cdFx0XHQgICAgXHR9LFxuXHRcdFx0ICAgIFx0bWVtYmVyIDogZnVuY3Rpb24oKXtcblx0XHRcdCAgICBcdFx0cmV0dXJuIHsgd29ya2luZ1RpbWUgOiBudWxsIH07XG5cdFx0XHQgICAgXHR9XG5cdFx0XHQgICAgfVxuXHRcdCAgICB9KTtcblxuXHRcdCAgICBtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uKG1lbWJlcil7XG5cdFx0ICAgIFx0aWYgKG1lbWJlcikge1xuXHRcdCAgICBcdFx0bWVtYmVySW5pdCgpO1xuXHRcdCAgICBcdH1cblx0XHQgICAgXHQkc2NvcGUuYWxlcnRzLnB1c2goeyB0eXBlIDogXCJzdWNjZXNzXCIgLCAgbXNnOiAn5Lq65ZOh5paw5aKe5oiQ5Yqf77yBICcgKyBtZW1iZXIubmFtZSArICcg5bey5Yqg5YWlICcgKyBtZW1iZXIuYnJhbmNofSk7XG5cdFx0ICAgIH0pXG5cdFx0fTtcblxuXHRcdCRzY29wZS51cGRhdGUgPSBmdW5jdGlvbihtZW1iZXIpe1xuXHRcdFx0dmFyIG9sZE1lbWJlciA9IG1lbWJlcjtcblx0XHRcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdFx0ICAgIHRlbXBsYXRlVXJsOiAndmlld3MvbWVtYmVyL21lbWJlci5tb2RhbC5odG1sJyxcblx0XHRcdCAgICBjb250cm9sbGVyOiAnTWVtYmVyTW9kYWxDdHJsJyxcblx0XHRcdCAgICBzaXplOiBcIm1kXCIsXG5cdFx0XHQgICAgcmVzb2x2ZSA6IHtcblx0XHRcdCAgICBcdGJyYW5jaCA6IGZ1bmN0aW9uKCl7XG5cdFx0XHQgICAgXHRcdHJldHVybiAkc3RhdGVQYXJhbXMuYnJhbmNoIFxuXHRcdFx0ICAgIFx0fSxcblx0XHRcdCAgICBcdG1lbWJlciA6IGZ1bmN0aW9uKCl7XG5cdFx0XHQgICAgXHRcdHJldHVybiB7XG5cdFx0XHQgICAgXHRcdFx0bWVtYmVySWQgOiBtZW1iZXIuX2lkLFxuXHRcdFx0ICAgIFx0XHRcdGlkIDogbWVtYmVyLmlkLFxuXHRcdFx0ICAgIFx0XHRcdG5hbWUgOiBtZW1iZXIubmFtZSxcblx0XHRcdCAgICBcdFx0XHR0aXRsZSA6IG1lbWJlci50aXRsZSxcblx0XHRcdCAgICBcdFx0XHRicmFuY2hlcyA6IG1lbWJlci5icmFuY2hlcyxcblx0XHRcdCAgICBcdFx0XHRjb3JwcyA6IG1lbWJlci5jb3Jwcyxcblx0XHRcdCAgICBcdFx0XHRyYWRpb0NvZGUgOiBtZW1iZXIucmFkaW9Db2RlLCBcblx0XHRcdCAgICBcdFx0XHR3b3JraW5nVGltZSA6IG1lbWJlci53b3JraW5nVGltZS5taW51dGVzKCkgKiA2MCArIG1lbWJlci53b3JraW5nVGltZS5zZWNvbmRzKClcblx0XHRcdCAgICBcdFx0fVxuXHRcdFx0ICAgIFx0fVxuXHRcdFx0ICAgIH1cblx0XHQgICAgfSk7XG5cblx0XHQgICAgbW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbihtZW1iZXIpe1xuXHRcdCAgICBcdG1lbWJlckluaXQoKTtcblx0XHQgICAgXHQkc2NvcGUuYWxlcnRzLnB1c2goeyB0eXBlIDogXCJpbmZvXCIgLCAgbXNnOiAgb2xkTWVtYmVyLm5hbWUgKyAn5L+u5pS55oiQ5YqfIScgfSk7XG5cdFx0ICAgIH0pO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuYWN0aXZhdGVBY2NvdW50ID0gZnVuY3Rpb24obWVtYmVyKXtcblxuXHRcdFx0dmFyIHVzZXJzID0gJHNjb3BlLm1lbWJlcnMuZmlsdGVyKGZ1bmN0aW9uKG1lbWJlcikge1xuXHRcdFx0XHRyZXR1cm4gbWVtYmVyLmlzVXNlcjtcblx0XHRcdH0pO1xuXG5cdFx0XHRpZiAodXNlcnMubGVuZ3RoIDwgMyApIHtcblx0XHRcdFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7XG5cdFx0XHRcdCAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL21lbWJlci9tZW1iZXIuYWNjb3VudC5odG1sJyxcblx0XHRcdFx0ICAgIGNvbnRyb2xsZXI6ICdNZW1iZXJBY2NvdW50TW9kYWxDdHJsJyxcblx0XHRcdFx0ICAgIHNpemU6IFwibWRcIixcblx0XHRcdFx0ICAgIHJlc29sdmUgOiB7XG5cdFx0XHRcdCAgICBcdG1lbWJlciA6IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCAgICBcdFx0cmV0dXJuIG1lbWJlclxuXHRcdFx0XHQgICAgXHR9XG5cdFx0XHRcdCAgICB9XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdG1vZGFsSW5zdGFuY2UucmVzdWx0LnRoZW4oZnVuY3Rpb24obWVtYmVyKXtcblx0XHRcdFx0XHRtZW1iZXJJbml0KCk7XG5cdFx0XHRcdFx0JHNjb3BlLmFsZXJ0cy5wdXNoKHsgdHlwZSA6IFwiaW5mb1wiICwgbXNnIDogbWVtYmVyLm5hbWUgKyBcIiDlt7LplovpgJrngrrkvb/nlKjogIVcIiB9KVxuXHRcdFx0XHR9KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdCRzY29wZS5hbGVydHMucHVzaCh7IHR5cGUgOiBcIndhcm5pbmdcIiAsIG1zZyA6IFwi54Sh5rOV6ZaL6YCaXCIgKyBtZW1iZXIubmFtZSArIFwiIOWboOeCuuS9v+eUqOiAheW3sui2hemBjjPkvY3vvIzoq4vop6PpmaTlhbbku5bkurrluLPomZ/lvozlho3plovpgJogXCJ9KTtcblx0XHRcdH07XG5cdFx0fTtcblxuXHRcdHZhciBkZUFjdGl2YXRlQWNjb3VudCA9IGZ1bmN0aW9uKGluZGV4KXtcblx0XHRcdFVzZXJTdmMucmVtb3ZlVXNlcih0ZW1wRGVsTWVtYmVyLm5hbWUpLnN1Y2Nlc3MoZnVuY3Rpb24odXNlcil7XG5cdFx0XHRcdE1lbWJlclN2Yy5yZW1vdmVVc2VyKHVzZXIudXNlcm5hbWUpO1xuXHRcdFx0XHQkc2NvcGUuY2xvc2VBbGVydChpbmRleCk7XG5cdFx0XHRcdG1lbWJlckluaXQoKTtcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdHZhciBkZWxldGVNZW1iZXIgPSBmdW5jdGlvbihpbmRleCl7XG5cdFx0XHQkc2NvcGUubWVtYmVyRGVsZXRlZCA9IHRydWU7XG5cdFx0XHRNZW1iZXJTdmMuZGVsZXRlTWVtYmVyKHRlbXBEZWxNZW1iZXIpLnN1Y2Nlc3MoZnVuY3Rpb24oKXtcblx0XHRcdFx0JHNjb3BlLm1lbWJlckRlbGV0ZWQgPSBmYWxzZTtcblx0XHRcdH0pO1xuXHRcdFx0JHNjb3BlLmNsb3NlQWxlcnQoaW5kZXgpO1xuXHRcdFx0bWVtYmVySW5pdCgpO1xuXHRcdH07XG5cblx0XHR2YXIgY2FuY2VsRGVsID0gZnVuY3Rpb24oaW5kZXgpe1xuXHRcdFx0JHNjb3BlLm1lbWJlckRlbGV0ZWQgPSBmYWxzZTtcblx0XHRcdCRzY29wZS5jbG9zZUFsZXJ0KGluZGV4KTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLmRlbGV0ZUFsZXJ0ID0gZnVuY3Rpb24obWVtYmVyKXtcblx0XHRcdCRzY29wZS5hbGVydHMucHVzaCh7IFx0XG5cdFx0XHRcdHR5cGUgOiBcImRhbmdlclwiICwgIFxuXHRcdFx0XHRtc2c6ICfmmK/lkKbnorrlrpropoHliKrpmaTvvIEnICsgbWVtYmVyLm5hbWUsIFxuXHRcdFx0XHRleGVjdXRlIDogZGVsZXRlTWVtYmVyLFxuXHRcdFx0XHRjYW5jZWwgOiAgY2FuY2VsRGVsXG5cdFx0XHR9KTtcblx0XHRcdHRlbXBEZWxNZW1iZXIgPSBtZW1iZXI7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5kZUFjdGl2YXRlQWxlcnQgPSBmdW5jdGlvbihtZW1iZXIpe1xuXHRcdFx0dmFyIHVzZXJzID0gJHNjb3BlLm1lbWJlcnMuZmlsdGVyKGZ1bmN0aW9uKG1lbWJlcikge1xuXHRcdFx0XHRyZXR1cm4gbWVtYmVyLmlzVXNlcjtcblx0XHRcdH0pO1xuXHRcdFx0aWYgKHVzZXJzLmxlbmd0aCA9PSAxICkge1xuXHRcdFx0XHQkc2NvcGUuYWxlcnRzLnB1c2goeyBcblx0XHRcdFx0XHR0eXBlIDogXCJ3YXJuaW5nXCIsICBcblx0XHRcdFx0XHRtc2c6ICfmr4/liIbpmoroh7PlsJHopoHmnIkx5YCL5L2/55So6ICF77yM54Sh5rOV5Y+W5raIJyArIG1lbWJlci5uYW1lICsgXCLnmoTnmbvlhaXmrIrpmZBcIixcblx0XHRcdFx0fSk7XG5cdFx0XHR9IGVsc2V7XG5cdFx0XHRcdCRzY29wZS5hbGVydHMucHVzaCh7IFxuXHRcdFx0XHRcdHR5cGUgOiBcImRhbmdlclwiLCAgXG5cdFx0XHRcdFx0bXNnOiAn5piv5ZCm56K65a6a6KaB6Kej6ZmkJyArIG1lbWJlci5uYW1lICsgXCLnmbvlhaXmrIrpmZBcIixcblx0XHRcdFx0XHRleGVjdXRlIDogZGVBY3RpdmF0ZUFjY291bnQsXG5cdFx0XHRcdFx0Y2FuY2VsIDogY2FuY2VsRGVsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR0ZW1wRGVsTWVtYmVyID0gbWVtYmVyO1xuXHRcdFx0fTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLmNsb3NlQWxlcnQgPSBmdW5jdGlvbihpbmRleCl7XG5cdFx0XHQkc2NvcGUuYWxlcnRzLnNwbGljZShpbmRleCwxKVxuXHRcdH07XG59XSkiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdNZW1iZXJNb2RhbEN0cmwnLCBbJyRzY29wZScsICdicmFuY2gnLCAnTWVtYmVyU3ZjJywgJyRtb2RhbEluc3RhbmNlJywgJyRzdGF0ZScsICdtZW1iZXInLCdCcmFuY2hTdmMnLCAnVXNlclN2YycsXG5cdGZ1bmN0aW9uICgkc2NvcGUsIGJyYW5jaCwgTWVtYmVyU3ZjLCAkbW9kYWxJbnN0YW5jZSwgJHN0YXRlLCBtZW1iZXIsIEJyYW5jaFN2YywgVXNlclN2Yykge1xuXHRcblx0JHNjb3BlLmFsZXJ0cyA9IFtdO1xuXHQkc2NvcGUuaXNOZXcgPSBfLmlzTnVsbChtZW1iZXIud29ya2luZ1RpbWUpO1xuXG5cdCRzY29wZS5tZW1iZXIgPSB7XG5cdFx0aWQgXHRcdCBcdDogbWVtYmVyLmlkIHx8ICBcIlwiLCBcblx0XHRuYW1lIFx0IFx0OiBtZW1iZXIubmFtZSB8fCBudWxsICwgXG5cdFx0dGl0bGUgICAgXHQ6IFwi5raI6Ziy6ZqK5ZOhXCIsXG5cdFx0dGl0bGVzICAgXHQ6IFtcIua2iOmYsumaiuWToVwiLFwi5bCP6ZqK6ZW3XCIsXCLliIbpmorplbdcIixcIuS4remaiumVt1wiLFwi5aSn6ZqK6ZW3XCIsXCLlia/lpKfpmorplbdcIl0sXG5cdFx0YnJhbmNoICAgXHQ6IG1lbWJlci5icmFuY2ggfHwgYnJhbmNoLFxuXHRcdHdvcmtpbmdUaW1lIDogbWVtYmVyLndvcmtpbmdUaW1lIHx8ICAxMjAwLFxuXHRcdHJhZGlvQ29kZSBcdDogbWVtYmVyLnJhZGlvQ29kZSB8fCAgbnVsbCwgXG5cdFx0bWlzc2lvbiAgXHQ6IFwi556E5a2Q5omLXCIsXG5cdFx0bWlzc2lvbnMgXHQ6IFtcIueehOWtkOaJi1wiLFwi5Ymv556E5a2Q5omLXCIsXCLlj7jmqZ9cIixcIuWwj+e1hOmVt1wiLFwi5a6J5YWo566h5Yi25ZOhXCIsXCLoga/ntaHlrphcIixdLFxuXHRcdGNvcnBzXHQgXHQ6IFVzZXJTdmMudXNlckNvcnBzKCksXG5cdFx0Y29ycHNzIFx0IFx0OiBbXCLnrKzkuIDmlZHngb3mlZHorbflpKfpmopcIixcIuesrOS4ieaVkeeBveaVkeitt+Wkp+mailwiXSxcblx0fTtcblxuXHRCcmFuY2hTdmMuZmV0Y2goVXNlclN2Yy51c2VyQ29ycHMoKSkuc3VjY2VzcyhmdW5jdGlvbihicmFuY2hlcyl7XG5cdFx0JHNjb3BlLmJyYW5jaGVzID0gYnJhbmNoZXM7IFxuXHRcdGlmICghJHNjb3BlLmlzTmV3KSB7XG5cdFx0XHR2YXIgYnJhbmNoQXJyeSA9IFtdO1xuXHRcdFx0Zm9yICh2YXIgaSA9IGJyYW5jaGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHRcdGJyYW5jaEFycnkucHVzaChicmFuY2hlc1tpXS5uYW1lKTtcblx0XHRcdH07XG5cdFx0XHQkc2NvcGUubWVtYmVyLmJyYW5jaGVzID0gYnJhbmNoQXJyeTtcblx0XHR9OyBcblx0fSk7XG5cblx0dmFyIHJhZGlvQ29kZVByZWZpeCA9IGZ1bmN0aW9uKGJyYW5jaCl7XG5cdFx0dmFyIHN1ZmZpeCA9ICBicmFuY2guc3BsaXQoJycpLnNsaWNlKC0yKS5qb2luKCcnKTtcblx0XHRpZiAoc3VmZml4ID09IFwi5aSn6ZqKXCIgfHwgc3VmZml4ID09IFwi5Lit6ZqKXCIpIHtcblx0XHRcdHJldHVybiBcIuWMl+a1t1wiO1xuXHRcdH0gZWxzZXtcblx0XHRcdHJldHVybiBicmFuY2guc3BsaXQoJycpLnNsaWNlKDAsMikuam9pbignJyk7XG5cdFx0fTtcblx0fTtcblxuXHQkc2NvcGUuc2F2ZSA9IGZ1bmN0aW9uKCl7XG5cdFx0aWYgKCRzY29wZS5tZW1iZXIubmFtZSkge1xuXHRcdFx0JHNjb3BlLm1lbWJlci5yYWRpb0NvZGVQcmVmaXggPSByYWRpb0NvZGVQcmVmaXgoJHNjb3BlLm1lbWJlci5icmFuY2gpO1xuXHRcdFx0TWVtYmVyU3ZjLmNyZWF0ZSgkc2NvcGUubWVtYmVyKS5zdWNjZXNzKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCRzY29wZS5tZW1iZXIud29ya2luZ1RpbWUgPSBtb21lbnQuZHVyYXRpb24ocGFyc2VJbnQoJHNjb3BlLm1lbWJlci53b3JraW5nVGltZSksJ3NlY29uZHMnKTtcblx0XHRcdH0pLnRoZW4oZnVuY3Rpb24oKXtcblx0XHRcdFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UoJHNjb3BlLm1lbWJlcik7XG5cdFx0XHR9KVxuXHRcdH0gZWxzZXtcblxuXHRcdH07XG5cdH07XG5cblx0JHNjb3BlLnVwZGF0ZSA9IGZ1bmN0aW9uKCl7XG5cblx0XHR2YXIgdXBkYXRlTWVtYmVyID0ge1xuXHRcdFx0ICBtZW1iZXJJZCAgOiBtZW1iZXIubWVtYmVySWQsXG5cdFx0XHQgIGlkIFx0XHQ6IFwiXCIsXG5cdFx0XHQgIG5hbWUgXHRcdDogJHNjb3BlLm1lbWJlci5uYW1lLFxuXHRcdFx0ICBjb3JwcyBcdDogJHNjb3BlLm1lbWJlci5jb3Jwcyxcblx0XHRcdCAgYnJhbmNoIFx0OiAkc2NvcGUubWVtYmVyLmJyYW5jaCxcblx0XHRcdCAgdGl0bGUgXHQ6ICRzY29wZS5tZW1iZXIudGl0bGUsXG5cdFx0XHQgIHdvcmtpbmdUaW1lIDogJHNjb3BlLm1lbWJlci53b3JraW5nVGltZSxcblx0XHRcdCAgcmFkaW9Db2RlICA6ICRzY29wZS5tZW1iZXIucmFkaW9Db2RlLFxuXHRcdFx0ICByYWRpb0NvZGVQcmVmaXggOiByYWRpb0NvZGVQcmVmaXgoJHNjb3BlLm1lbWJlci5icmFuY2gpXG5cdFx0fVxuXG5cdFx0aWYgKCRzY29wZS5tZW1iZXIubmFtZSkge1xuXHRcdFx0TWVtYmVyU3ZjLnVwZGF0ZUJ5TWVtYmVySWQodXBkYXRlTWVtYmVyKTtcblx0XHRcdCRtb2RhbEluc3RhbmNlLmNsb3NlKHVwZGF0ZU1lbWJlcik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdFxuXHRcdH07XG5cdH07XG5cblx0JHNjb3BlLmNhbmNlbCA9IGZ1bmN0aW9uKCl7XG5cdFx0JG1vZGFsSW5zdGFuY2UuZGlzbWlzcygnY2FuY2VsJyk7XG5cdH07XG5cdFxufV0pIiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uc2VydmljZSgnTWVtYmVyU3ZjJywgWyckaHR0cCcsZnVuY3Rpb24gKCRodHRwKSB7XG5cblx0dGhpcy5mZXRjaCA9IGZ1bmN0aW9uKCl7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9tZW1iZXJzJylcblx0fVxuXG5cdHRoaXMuZmluZEJ5QnJhbmNoID0gZnVuY3Rpb24oIGJyYW5jaCApe1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvbWVtYmVycy8nICsgYnJhbmNoIClcblx0fVxuXG5cdHRoaXMuZmV0Y2hPbkR1dHkgPSBmdW5jdGlvbihicmFuY2gpe1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvbWVtYmVycy9vbkR1dHk/YnJhbmNoPScgKyBicmFuY2gpO1xuXHR9XG5cblx0dGhpcy51cGRhdGVPbkR1dHkgPSBmdW5jdGlvbihtZW1iZXIpe1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvbWVtYmVycy9vbkR1dHkvZmluZEJ5SWQ/bWVtYmVySWQ9JyArIG1lbWJlci5tZW1iZXJJZCwgbWVtYmVyKTtcblx0fTtcblxuXHR0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uKG1lbWJlcil7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoJy9hcGkvbWVtYmVycy8nLCBtZW1iZXIpXG5cdH1cblxuXHR0aGlzLnVwZGF0ZSA9IGZ1bmN0aW9uKG1lbWJlcil7XG5cdFx0cmV0dXJuICRodHRwLnB1dCgnL2FwaS9tZW1iZXJzLycsIG1lbWJlci5pZClcblx0fVxuXG5cdHRoaXMudXBkYXRlQnlNZW1iZXJJZCA9IGZ1bmN0aW9uKHVwZGF0ZU1lbWJlcil7XG5cdFx0cmV0dXJuICRodHRwLnB1dCgnL2FwaS9tZW1iZXJzL2ZpbmRCeUlkLycgKyB1cGRhdGVNZW1iZXIubWVtYmVySWQgLCB1cGRhdGVNZW1iZXIpXG5cdH1cblxuXHR0aGlzLnVwZGF0ZUlzQ2hlY2tlZCA9IGZ1bmN0aW9uKG1lbWJlckRhdGEpe1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvbWVtYmVycz9pZD0nICsgbWVtYmVyRGF0YS5tZW1iZXJJZCwgbWVtYmVyRGF0YSlcblx0fVxuXG5cdHRoaXMudXBkYXRlVXNlciA9IGZ1bmN0aW9uKHVzZXJuYW1lKXtcblx0XHRyZXR1cm4gJGh0dHAucHV0KCcvYXBpL21lbWJlcnMvdXNlcj91c2VybmFtZT0nKyB1c2VybmFtZSk7XG5cdH1cblxuXHR0aGlzLnJlbW92ZVVzZXIgPSBmdW5jdGlvbih1c2VybmFtZSl7XG5cdFx0cmV0dXJuICRodHRwLnB1dCgnL2FwaS9tZW1iZXJzL3VzZXIvcmVtb3ZlP3VzZXJuYW1lPScgKyB1c2VybmFtZSlcblx0fVxuXG5cdHRoaXMuZGVsZXRlTWVtYmVyID0gZnVuY3Rpb24obWVtYmVyKXtcblx0XHRyZXR1cm4gJGh0dHAuZGVsZXRlKCcvYXBpL21lbWJlcnMvJyArIG1lbWJlci5faWQpXG5cdH1cblxuXHRcblxufV0pIiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uY29udHJvbGxlcignTmF2Q3RybCcsIFsnJHNjb3BlJywgJ0JyYW5jaFN2YycsICdzdG9yZScsICdqd3RIZWxwZXInLCAnVXNlclN2YycsXG5cdGZ1bmN0aW9uICgkc2NvcGUsIEJyYW5jaFN2Yywgc3RvcmUsIGp3dEhlbHBlciwgVXNlclN2Yykge1xuXG5cdCRzY29wZS51c2VybmFtZSA9IFVzZXJTdmMuY3VycmVudFVzZXIoKTtcblx0JHNjb3BlLmJyYW5jaCA9IFVzZXJTdmMudXNlckJyYW5jaCgpO1xuXG5cdEJyYW5jaFN2Yy5mZXRjaChVc2VyU3ZjLnVzZXJDb3JwcygpKS5zdWNjZXNzKGZ1bmN0aW9uKGJyYW5jaGVzKXtcblx0XHQkc2NvcGUuYnJhbmNoZXMgPSBicmFuY2hlcztcblx0fSk7XG5cblx0JHNjb3BlLmlzVmFsaWQgPSBmdW5jdGlvbihicmFuY2gpe1xuXHRcdHJldHVybiBVc2VyU3ZjLmlzVmFsaWQoYnJhbmNoKTtcblx0fTtcblx0XG59XSk7IiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uc2VydmljZSgnTnRmU3ZjJywgWyAnJGh0dHAnLCBmdW5jdGlvbiAoICRodHRwKSB7XG5cblx0dGhpcy5mZXRjaCA9IGZ1bmN0aW9uKCl7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9uZnRzJyk7XHRcblx0fTtcblx0XG59XSkiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb25maWcoWyAnJHN0YXRlUHJvdmlkZXInLCckdXJsUm91dGVyUHJvdmlkZXInLCAnJGxvY2F0aW9uUHJvdmlkZXInLCBcbiAgICBmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlciwgJGxvY2F0aW9uUHJvdmlkZXIpIHtcblxuICAgICR1cmxSb3V0ZXJQcm92aWRlclxuICAgICAgICAub3RoZXJ3aXNlKCcvbG9naW4nKTtcblxuICAgICRzdGF0ZVByb3ZpZGVyXG4gICAgICAgIC5zdGF0ZSgnYW5vbicse1xuICAgICAgICAgICAgdXJsIDogXCJcIixcbiAgICAgICAgICAgIGFic3RyYWN0IDogdHJ1ZSxcbiAgICAgICAgICAgIHRlbXBsYXRlIDogXCI8dWktdmlldz5cIixcbiAgICAgICAgfSlcbiAgICAgICAgLnN0YXRlKCdhbm9uLmxvZ2luJyx7XG4gICAgICAgICAgICB1cmwgOiBcIi9sb2dpblwiLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmwgOlwidmlld3MvbG9naW4uaHRtbFwiLFxuICAgICAgICAgICAgY29udHJvbGxlciA6IFwiTG9naW5DdHJsXCIsXG4gICAgICAgIH0pXG4gICAgICAgIC5zdGF0ZSgnYW5vbi40MDQnLHtcbiAgICAgICAgICAgIHVybCA6IFwiLzQwNFwiLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmwgOiBcInZpZXdzLzQwNC5odG1sXCJcbiAgICAgICAgfSlcblxuICAgIC8vIGR1dHkgZGVzayBcblx0JHN0YXRlUHJvdmlkZXJcblx0XHQuc3RhdGUoJ2R1dHlEZXNrJywge1xuICAgICAgICAgICAgYWJzdHJhY3Q6IHRydWUsXG4gICAgICAgICAgICB1cmw6IFwiL2R1dHlEZXNrXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCJ2aWV3cy9jb21tb24vY29udGVudC5odG1sXCIsXG4gICAgICAgICAgICBkYXRhIDoge1xuICAgICAgICAgICAgICAgIHJlcXVpcmVkTG9naW4gOiB0cnVlLFxuICAgICAgICAgICAgICAgIHJvbGUgOiBbXCJhZG1pblwiXVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuc3RhdGUoJ2R1dHlEZXNrLmRhc2hib2FyZCcsIHtcbiAgICAgICAgICAgIHVybDogXCIvZGFzaGJvYXJkXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCJ2aWV3cy9kYXNoYm9hcmQuaHRtbFwiLFxuICAgICAgICAgICAgY29udHJvbGxlciA6IFwiRGFzaGJvYXJkQ3RybFwiLFxuICAgICAgICAgICAgZGF0YSA6IHtcbiAgICAgICAgICAgICAgICByZXF1aXJlZExvZ2luIDogdHJ1ZSxcbiAgICAgICAgICAgICAgICByb2xlIDogW1wiYWRtaW5cIl1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLnN0YXRlKCdkdXR5RGVzay5jYXNlJywge1xuICAgICAgICAgICAgdXJsOiBcIi9jYXNlXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCJ2aWV3cy9jYXNlL2Nhc2UuaW5kZXguaHRtbFwiLFxuICAgICAgICAgICAgY29udHJvbGxlciA6IFwiQ2FzZUN0cmxcIixcbiAgICAgICAgfSlcbiAgICAgICAgLnN0YXRlKCdkdXR5RGVzay5zYWZldHknLHtcbiAgICAgICAgICAgIHVybCA6IFwiL2Nhc2UvOmlkXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybCA6IFwidmlld3Mvc3VtbWFyeS9zdW1tYXJ5LmluZGV4Lmh0bWxcIixcbiAgICAgICAgICAgIGNvbnRyb2xsZXIgOiBcIlN1bW1hcnlDdHJsXCJcbiAgICAgICAgfSlcbiAgICAgICAgLnN0YXRlKCdkdXR5RGVzay5kdXR5bGlzdCcse1xuICAgICAgICAgICAgYWJzdHJhY3QgOiB0cnVlLFxuICAgICAgICAgICAgdGVtcGxhdGUgOiBcIjx1aS12aWV3PlwiXG4gICAgICAgIH0pXG4gICAgICAgIC5zdGF0ZSgnZHV0eURlc2suZHV0eWxpc3Quc2hvdycsIHtcbiAgICAgICAgICAgIHVybDogXCIvZHV0eWxpc3QvOmJyYW5jaFwiLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6IFwidmlld3MvZHV0eWxpc3QvZHV0eWxpc3QuaW5kZXguaHRtbFwiLFxuICAgICAgICAgICAgY29udHJvbGxlciA6IFwiRHV0eUxpc3RDdHJsXCIsXG4gICAgICAgIH0pXG4gICAgICAgIC5zdGF0ZSgnZHV0eURlc2suZHV0eWxpc3QuZWRpdCcsIHtcbiAgICAgICAgICAgIHVybDogXCIvZHV0eWxpc3QvOmJyYW5jaC9lZGl0XCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCJ2aWV3cy9kdXR5bGlzdC9kdXR5bGlzdC5lZGl0Lmh0bWxcIixcbiAgICAgICAgICAgIGNvbnRyb2xsZXIgOiBcIkR1dHlMaXN0RWRpdEN0cmxcIixcbiAgICAgICAgfSlcbiAgICAgICAgLnN0YXRlKCdkdXR5RGVzay5tZW1iZXInLHtcbiAgICAgICAgICAgIGFic3RyYWN0IDogdHJ1ZSxcbiAgICAgICAgICAgIHRlbXBsYXRlIDogXCI8dWktdmlldz5cIlxuICAgICAgICB9KVxuICAgICAgICAuc3RhdGUoJ2R1dHlEZXNrLm1lbWJlci5zaG93Jywge1xuICAgICAgICAgICAgdXJsOiBcIi9tZW1iZXIvOmJyYW5jaFwiLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6IFwidmlld3MvbWVtYmVyL21lbWJlci5pbmRleC5odG1sXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyIDogXCJNZW1iZXJDdHJsXCIsXG4gICAgICAgIH0pXG4gICAgICAgIC5zdGF0ZSgnZHV0eURlc2subWVtYmVyLmVkaXQnLCB7XG4gICAgICAgICAgICB1cmw6IFwiL21lbWJlci86YnJhbmNoL2VkaXRcIixcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcInZpZXdzL21lbWJlci9tZW1iZXIuZWRpdC5odG1sXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyIDogXCJNZW1iZXJFZGl0Q3RybFwiLFxuICAgICAgICB9KVxuICAgICAgICAuc3RhdGUoJ2R1dHlEZXNrLmNhcicsIHtcbiAgICAgICAgICAgIGFic3RyYWN0IDogdHJ1ZSxcbiAgICAgICAgICAgIHRlbXBsYXRlIDogXCI8dWktdmlldz5cIlxuICAgICAgICB9KVxuICAgICAgICAuc3RhdGUoJ2R1dHlEZXNrLmNhci5zaG93Jyx7XG4gICAgICAgICAgICB1cmw6IFwiL2Nhci86YnJhbmNoXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybCA6IFwidmlld3MvY2Fycy9jYXIuaW5kZXguaHRtbFwiLFxuICAgICAgICAgICAgY29udHJvbGxlciA6IFwiQ2FySW5kZXhDdHJsXCJcbiAgICAgICAgfSlcbiAgICAgICAgLnN0YXRlKCdkdXR5RGVzay5jYXIuZWRpdCcse1xuICAgICAgICAgICAgdXJsOiBcIi9jYXIvOmJyYW5jaC9lZGl0XCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybCA6IFwidmlld3MvY2Fycy9jYXIuZWRpdC5odG1sXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyIDogXCJDYXJFZGl0Q3RybFwiXG4gICAgICAgIH0pXG4gICAgLy8gZGlyZWN0b3IgXG4gICAgJHN0YXRlUHJvdmlkZXJcbiAgICAgICAgLnN0YXRlKCdkaXJlY3Rvcicse1xuICAgICAgICAgICAgYWJzdHJhY3QgOiB0cnVlLFxuICAgICAgICAgICAgdXJsIDogXCJcIixcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsIDogXCJ2aWV3cy9kaXJlY3Rvci9kaXJlY3Rvci5jb250ZW50Lmh0bWxcIixcbiAgICAgICAgICAgIGRhdGEgOiB7XG4gICAgICAgICAgICAgICAgcmVxdWlyZWRMb2dpbiA6IHRydWUsXG4gICAgICAgICAgICAgICAgcm9sZSA6IFtcInVzZXJcIl1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLnN0YXRlKCdkaXJlY3Rvci5zYWZldHknLHtcbiAgICAgICAgICAgIGFic3RyYWN0IDogdHJ1ZSxcbiAgICAgICAgICAgIHVybCA6IFwiL3NhZmV0eVwiLFxuICAgICAgICAgICAgdGVtcGxhdGUgOiBcIjx1aS12aWV3PlwiIFxuICAgICAgICB9KVxuICAgICAgICAuc3RhdGUoJ2RpcmVjdG9yLnNhZmV0eS5pbmRleCcse1xuICAgICAgICAgICAgdXJsIDogXCIvaW5kZXhcIixcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsIDogXCJ2aWV3cy9zYWZldHkvc2FmZXR5LmluZGV4Lmh0bWxcIixcbiAgICAgICAgICAgIGNvbnRyb2xsZXIgOiBcIlNhZmV0eUluZGV4Q3RybFwiXG4gICAgICAgIH0pXG4gICAgICAgIC5zdGF0ZSgnZGlyZWN0b3Iuc2FmZXR5Lm1hbmFnZW1lbnQnLHtcbiAgICAgICAgICAgIHVybCA6IFwiL2luZGV4LzppZFwiLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmwgOiBcInZpZXdzL3NhZmV0eS9zYWZldHkubWFuYWdlLmh0bWxcIixcbiAgICAgICAgICAgIGNvbnRyb2xsZXIgOiBcIlNhZmV0eU1hbmFnZUN0cmxcIiAgICAgICAgIFxuICAgICAgICB9KVxuICAgICAgICAuc3RhdGUoJ2RpcmVjdG9yLnNhZmV0eS5zdW1tYXJ5Jyx7XG4gICAgICAgICAgICB1cmwgOiBcIi9zdW1tYXJ5LzppZFwiLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmwgOiBcInZpZXdzL3N1bW1hcnkvc3VtbWFyeS5pbmRleC5odG1sXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyIDogXCJTdW1tYXJ5Q3RybFwiXG4gICAgICAgIH0pXG4gICAgICAgIC5zdGF0ZSgnZGlyZWN0b3IubWFwJyx7XG4gICAgICAgICAgICB1cmwgOiBcIi9tYXBcIixcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsIDogXCJ2aWV3cy9tYXAvbWFwLmluZGV4Lmh0bWxcIixcbiAgICAgICAgICAgIGNvbnRyb2xsZXIgOiBcIk1hcEluZGV4Q3RybFwiXG4gICAgICAgIH0pXG4gICAgICAgIC5zdGF0ZSgnZGlyZWN0b3IuZHV0eWxpc3QnLHtcbiAgICAgICAgICAgIGFic3RyYWN0IDogdHJ1ZSxcbiAgICAgICAgICAgIHVybCA6IFwiL2R1dHlsaXN0XCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZSA6IFwiPHVpLXZpZXc+XCIgXG4gICAgICAgIH0pXG4gICAgICAgIC5zdGF0ZSgnZGlyZWN0b3IuZHV0eWxpc3QuaW5kZXgnLHtcbiAgICAgICAgICAgIHVybCA6IFwiL2luZGV4XCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCJ2aWV3cy9kdXR5bGlzdC9kaXJlY3Rvci5kdXR5bGlzdC5pbmRleC5odG1sXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyIDogXCJEaXJEdXR5TGlzdEN0cmxcIixcbiAgICAgICAgfSlcbiAgICAgICAgLnN0YXRlKCdkaXJlY3Rvci5kdXR5bGlzdC5lZGl0Jyx7XG4gICAgICAgICAgICB1cmwgOiBcIi9lZGl0XCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCJ2aWV3cy9kdXR5bGlzdC9kaXJlY3Rvci5kdXR5bGlzdC5lZGl0Lmh0bWxcIixcbiAgICAgICAgICAgIGNvbnRyb2xsZXIgOiBcIkR1dHlMaXN0RWRpdEN0cmxcIixcbiAgICAgICAgfSlcdFxufV0pXG5cbi5ydW4oWyAnJHJvb3RTY29wZScsICckc3RhdGUnLCAnJHN0YXRlUGFyYW1zJywgJ3N0b3JlJywgJ2p3dEhlbHBlcicsICdVc2VyU3ZjJywgJ1NvY2tldFN2YycsXG4gICAgZnVuY3Rpb24gKCAkcm9vdFNjb3BlLCAkc3RhdGUsICRzdGF0ZVBhcmFtcywgc3RvcmUsIGp3dEhlbHBlciwgVXNlclN2YywgU29ja2V0U3ZjKSB7XG5cbiAgICAkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3RhcnQnLGZ1bmN0aW9uKGV2ZW50LCB0b1N0YXRlLCB0b1BhcmFtcywgZnJvbVN0YXRlLCBmcm9tUGFyYW1zKXtcblxuICAgICAgICBpZiAodG9TdGF0ZS5uYW1lID09IFwiYW5vbi5sb2dpblwiKSB7XG4gICAgICAgICAgICBzdG9yZS5yZW1vdmUoJ2p3dCcpO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGlmICh0b1N0YXRlLmRhdGEgJiYgdG9TdGF0ZS5kYXRhLnJlcXVpcmVkTG9naW4pIHtcblxuICAgICAgICAgICAgICAgIGlmICghVXNlclN2Yy5pc0xvZ2dlZEluKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgJHN0YXRlLmdvKCdhbm9uLmxvZ2luJyk7XG4gICAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0b1N0YXRlLmRhdGEucm9sZS5pbmRleE9mKGp3dEhlbHBlci5kZWNvZGVUb2tlbihzdG9yZS5nZXQoJ2p3dCcpKS5yb2xlKSA9PSAtMSApIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgJHN0YXRlLmdvKFwiYW5vbi5sb2dpblwiKVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9OyBcbiAgICAgICAgfVxuXG4gICAgfSk7XG5cbiAgICAkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlRXJyb3InLGZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbn1dKSIsIi8qKlxuKiBJbk5ldCBNb2R1bGVcbipcbiogRGVzY3JpcHRpb25cbiovXG5hbmd1bGFyLm1vZHVsZSgnSW5OZXQnKVxuLmNvbnRyb2xsZXIoJ1NhZmV0eUluZGV4Q3RybCcsIFsnJHNjb3BlJywgJ0Nhc2VTdmMnLCAnVXNlclN2YycsICdTb2NrZXRTdmMnLCAnJHJvb3RTY29wZScsXG5cdGZ1bmN0aW9uICgkc2NvcGUsIENhc2VTdmMsIFVzZXJTdmMsIFNvY2tldFN2YywgJHJvb3RTY29wZSkge1xuXG5cdFx0U29ja2V0U3ZjLm9uKCduZXdDYXNlJyxmdW5jdGlvbihfY2FzZSl7XG5cdFx0XHQkc2NvcGUuY2FzZXMucHVzaChfY2FzZSk7XG5cdFx0fSk7XG5cblx0XHRTb2NrZXRTdmMub24oJ2Nhc2VDbG9zZScsZnVuY3Rpb24oZGF0YSl7XG5cdFx0XHRpZiAoIWRhdGEuaXNPbmdvaW5nKSB7XG5cdFx0XHRcdCRzY29wZS5jYXNlcyA9ICRzY29wZS5jYXNlcy5maWx0ZXIoZnVuY3Rpb24oX2Nhc2Upe1xuXHRcdFx0XHRcdHJldHVybiBfY2FzZS5faWQgIT0gZGF0YS5jYXNlSWRcblx0XHRcdFx0fSlcblx0XHRcdH07XG5cdFx0fSk7XG5cblx0XHR2YXIgdXNlckNvbmRpdGlvbiA9IHtcblx0XHRcdGJyYW5jaCA6IFVzZXJTdmMudXNlckJyYW5jaCgpLFxuXHRcdFx0YWNjZXNzTGV2ZWwgOiBVc2VyU3ZjLmFjY2Vzc0xldmVsKCksXG5cdFx0XHRjb3JwcyA6IFVzZXJTdmMudXNlckNvcnBzKClcblx0XHR9XG5cblx0XHRDYXNlU3ZjLmZldGNoUmVsYXRpdmVDYXNlKHVzZXJDb25kaXRpb24pLnN1Y2Nlc3MoZnVuY3Rpb24oY2FzZXMpe1xuXHRcdFx0JHNjb3BlLmNhc2VzID0gY2FzZXM7XG5cdFx0fSk7XG5cblx0XHQkc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uIChldmVudCkge1xuXHQgICAgICAgIFNvY2tldFN2Yy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcblx0ICAgIH0pXG5cblx0ICAgICRzY29wZS5hY2Nlc3NMZXZlbCA9IFVzZXJTdmMuYWNjZXNzTGV2ZWwoKTtcblxuXHRcdFxufV0pIiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uY29udHJvbGxlcignU2FmZXR5TWFuYWdlQ3RybCcsIFsnJHNjb3BlJywnJHN0YXRlUGFyYW1zJywgJyRtb2RhbCcsICdTdFN2YycsICckc3RhdGUnLCAnTWVtYmVyU3ZjJywnJGxvZycsICdVc2VyU3ZjJywgJ0JyYW5jaFN2YycsICdTb2NrZXRTdmMnLCAnQ2FzZVN2YycsXG5cdGZ1bmN0aW9uICgkc2NvcGUsICRzdGF0ZVBhcmFtcywgJG1vZGFsLCBTdFN2YywgJHN0YXRlLCBNZW1iZXJTdmMsICRsb2csIFVzZXJTdmMsIEJyYW5jaFN2YywgU29ja2V0U3ZjLCBDYXNlU3ZjKSB7XG5cblx0XHQkc2NvcGUucXVpY2tTdGFydCA9ICBmYWxzZTtcblxuXHRcdHZhciBCUkFOQ0ggPSBVc2VyU3ZjLnVzZXJCcmFuY2goKTtcblx0XHQkc2NvcGUuQUNDRVNTTEVWRUwgPSBVc2VyU3ZjLmFjY2Vzc0xldmVsKCk7XG5cblx0XHQkc2NvcGUuYnJhbmNoT3B0aW9ucyA9IHtcblx0XHRcdGJyYW5jaCA6IEJSQU5DSCxcblx0XHRcdGJyYW5jaGVzIDogW11cblx0XHR9O1xuXG5cdFx0Q2FzZVN2Yy5maW5kQnlJZCgkc3RhdGVQYXJhbXMuaWQpLnN1Y2Nlc3MoZnVuY3Rpb24oX2Nhc2Upe1xuXHRcdFx0JHNjb3BlLmJyYW5jaE9wdGlvbnMuYnJhbmNoZXMgPSBfY2FzZS5icmFuY2hlc1xuXHRcdFx0JHNjb3BlLmJyYW5jaE9wdGlvbnMuYnJhbmNoZXMuc3BsaWNlKDAsMCxCUkFOQ0gpO1xuXHRcdH0pO1xuXG5cdFx0QnJhbmNoU3ZjLmZldGNoQnlOYW1lKEJSQU5DSCkuc3VjY2VzcyhmdW5jdGlvbihkZXRhaWxzKXtcblx0XHRcdCRzY29wZS5kZXRhaWxzID0gZGV0YWlscztcblx0XHR9KS50aGVuKGZ1bmN0aW9uKCl7XG5cdFx0XHRpZiAoQUNDRVNTTEVWRUwgPiAxICkge1xuXHRcdFx0XHRTdFN2Yy5mZXRjaEJ5Q2FzZSgkc3RhdGVQYXJhbXMuaWQpLnN1Y2Nlc3MoZnVuY3Rpb24oc3RzKXtcblx0XHRcdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXMgPSBzdHM7IFxuXHRcdFx0XHR9KVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0U3RTdmMuZmV0Y2goJHN0YXRlUGFyYW1zLmlkLEJSQU5DSCkuc3VjY2VzcyhmdW5jdGlvbihzdHMpe1xuXHRcdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXMgPSBzdHM7XG5cdFx0XHRcdFx0aWYgKCRzY29wZS5kZXRhaWxzLm1lbWJlcnMubGVuZ3RoIDwgOCAmJiBfLmlzRW1wdHkoJHNjb3BlLnN0cmlrZVRlYW1zKSkgeyAkc2NvcGUucXVpY2tTdGFydCA9IHRydWUgIH07IFxuXHRcdFx0XHR9KTsgXG5cdFx0XHR9O1xuXHRcdH0pO1xuXG5cdFx0U29ja2V0U3ZjLm9uKCduZXdTdCcsIGZ1bmN0aW9uKHN0KXtcblx0XHRcdGlmIChBQ0NFU1NMRVZFTCA+ICAxICYmIGFuZ3VsYXIuZXF1YWxzKCRzdGF0ZVBhcmFtcy5pZCxzdC5jYXNlSWQpICkge1xuXHRcdFx0XHRcdCRzY29wZS5zdHJpa2VUZWFtcy5wdXNoKHN0KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmIChhbmd1bGFyLmVxdWFscyhCUkFOQ0gsc3QuYnJhbmNoKSAmJiBhbmd1bGFyLmVxdWFscygkc3RhdGVQYXJhbXMuaWQsc3QuY2FzZUlkKSApIHtcblx0XHRcdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXMucHVzaChzdCk7XG5cdFx0XHRcdH07XG5cdFx0XHR9O1xuXHRcdH0pO1xuXG5cdFx0U29ja2V0U3ZjLm9uKCd1cGRhdGVTdCcsIGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0dmFyIG1lbWJlcnMgPSBhbmd1bGFyLmNvcHkoZGF0YS5tZW1iZXJzKTtcblx0XHRcdGZvciAodmFyIGkgPSAkc2NvcGUuc3RyaWtlVGVhbXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcblx0XHRcdFx0aWYoYW5ndWxhci5lcXVhbHMoJHNjb3BlLnN0cmlrZVRlYW1zW2ldLl9pZCxkYXRhLmlkKSl7XG5cdFx0XHRcdFx0JHNjb3BlLnN0cmlrZVRlYW1zW2ldLnBvc2l0aW9uID0gZGF0YS5wb3NpdGlvbjtcblx0XHRcdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXNbaV0uYXJlYSA9IGRhdGEuYXJlYTtcblx0XHRcdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXNbaV0ubWVtYmVycy5wdXNoLmFwcGx5KCRzY29wZS5zdHJpa2VUZWFtc1tpXS5tZW1iZXJzLCBtZW1iZXJzKTtcblx0XHRcdFx0fTtcblx0XHRcdH07XG5cdFx0fSlcblxuXHRcdFNvY2tldFN2Yy5vbignZGlzbWlzcycsIGZ1bmN0aW9uKHN0KXtcblx0XHRcdHZhciBfc3RJZCA9IHN0LnN0SWQ7XG5cdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXMgPSAkc2NvcGUuc3RyaWtlVGVhbXMuZmlsdGVyKGZ1bmN0aW9uKHN0KSB7XHRcdFx0XHRcblx0XHRcdFx0cmV0dXJuIHN0Ll9pZCAhPSBfc3RJZDtcblx0XHRcdH0pO1xuXHRcdH0pO1xuXHRcdFxuXHRcdCRzY29wZS5zdHJpa2VUZWFtID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHRcdFx0ICBcdHRlbXBsYXRlVXJsOiAndmlld3Mvc2FmZXR5L3NhZmV0eS5tb2RhbC5odG1sJyxcblx0XHRcdCAgICBjb250cm9sbGVyOiAnU2FmZXR5TW9kYWxDdHJsJyxcblx0XHRcdCAgICBzaXplOiBcIm1kXCIsXG5cdFx0XHQgICAgcmVzb2x2ZSA6IHtcblx0XHRcdCAgICBcdHN0SWQgOiBmdW5jdGlvbigpe1xuXHRcdFx0ICAgIFx0XHRpZiAoIF8uaXNFbXB0eSgkc2NvcGUuc3RyaWtlVGVhbXMpKSB7XG5cdFx0XHQgICAgXHRcdFx0cmV0dXJuIDBcblx0XHRcdCAgICBcdFx0fSBlbHNle1xuXHRcdFx0ICAgIFx0XHRcdHJldHVybiAkc2NvcGUuc3RyaWtlVGVhbXNbJHNjb3BlLnN0cmlrZVRlYW1zLmxlbmd0aC0xXS5pZDtcblx0XHRcdCAgICBcdFx0fTtcblx0XHRcdCAgICBcdH0sXG5cdFx0XHQgICAgXHRicmFuY2ggOiBmdW5jdGlvbigpe1xuXHRcdFx0ICAgIFx0XHRyZXR1cm4gJHNjb3BlLmJyYW5jaE9wdGlvbnMuYnJhbmNoO1xuXHRcdFx0ICAgIFx0fVxuXHRcdFx0ICAgIH1cblx0XHQgICAgfSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5vcGVuU2V0dGluZ01vZGFsID0gZnVuY3Rpb24oc3RyaWtlVGVhbSwgaWQpe1xuXHQgICAgICAgIHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xuXHQgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3NhZmV0eS9zYWZldHkuc2V0dGluZy5tb2RhbC5odG1sJyxcblx0ICAgICAgICAgICAgY29udHJvbGxlcjogJ1NhZmV0eVNldHRpbmdDdHJsJyxcblx0ICAgICAgICAgICAgc2l6ZTogXCJsZ1wiLFxuXHQgICAgICAgICAgICByZXNvbHZlOiB7XG5cdCAgICAgICAgICAgICAgICBzdHJpa2VUZWFtIDogZnVuY3Rpb24oKXtcblx0ICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RyaWtlVGVhbTtcblx0ICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgIH0pO1xuXHQgICAgICAgIG1vZGFsSW5zdGFuY2UucmVzdWx0LnRoZW4oZnVuY3Rpb24gKHVwZGF0ZWRTdCkge1xuXHQgICAgICAgIFx0Zm9yICh2YXIgaSA9ICRzY29wZS5zdHJpa2VUZWFtcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuXHRcdFx0XHRcdGlmKGFuZ3VsYXIuZXF1YWxzKCRzY29wZS5zdHJpa2VUZWFtc1tpXS5faWQsdXBkYXRlZFN0LmlkKSl7XG5cdFx0XHRcdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXNbaV0ucG9zaXRpb24gPSB1cGRhdGVkU3QucG9zaXRpb247XG5cdFx0XHRcdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXNbaV0uYXJlYSA9IHVwZGF0ZWRTdC5hcmVhO1xuXHRcdFx0XHRcdFx0JHNjb3BlLnN0cmlrZVRlYW1zW2ldLm1lbWJlcnMucHVzaC5hcHBseSgkc2NvcGUuc3RyaWtlVGVhbXNbaV0ubWVtYmVycywgdXBkYXRlZFN0Lm1lbWJlcnMpO1xuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH07XG5cblx0XHQgICAgfSwgZnVuY3Rpb24gKCkge1xuXHRcdCAgICAgICRsb2cuaW5mbygnTW9kYWwgZGlzbWlzc2VkIGF0OiAnICsgbmV3IERhdGUoKSk7XG5cdFx0ICAgIH0pO1xuXHQgICAgfTtcblxuXHRcdCRzY29wZS5kaXNtaXNzID0gZnVuY3Rpb24oc3RyaWtlVGVhbSAsIGlkKXtcblx0XHRcdFxuXHQgICAgICAgXHRTdFN2Yy5kaXNtaXNzU3Qoe1xuXHQgICAgICAgXHRcdGlkIDogc3RyaWtlVGVhbS5faWRcblx0ICAgICAgIFx0fSkuc3VjY2VzcyhmdW5jdGlvbigpe1xuXHQgICAgICAgXHRcdGZvciAodmFyIGkgPSBzdHJpa2VUZWFtLm1lbWJlcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcblx0XHQgICAgICAgICAgICBNZW1iZXJTdmMudXBkYXRlSXNDaGVja2VkKHtcblx0XHQgICAgICAgICAgICAgICAgbWVtYmVySWQgIDogc3RyaWtlVGVhbS5tZW1iZXJzW2ldLl9pZCxcblx0XHQgICAgICAgICAgICAgICAgbWlzc2lvblx0ICA6IHN0cmlrZVRlYW0ubWVtYmVyc1tpXS5taXNzaW9uLFxuXHRcdCAgICAgICAgICAgICAgICBpc0NoZWNrZWQgOiBmYWxzZVxuXHRcdCAgICAgICAgICAgIH0pXG5cdFx0ICAgICAgICB9O1x0XG5cdCAgICAgICBcdH0pXG5cdCAgICAgICBcdCRzY29wZS5zdHJpa2VUZWFtcy5zcGxpY2UoaWQsMSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5xdWlja09yZ2FuaXppbmcgPSBmdW5jdGlvbigpe1xuXHRcdFx0JHNjb3BlLnF1aWNrU3RhcnQgPSBmYWxzZTtcblx0XHRcblx0XHRcdHZhciBtZW1iZXJzID0gICRzY29wZS5kZXRhaWxzLm1lbWJlcnMuZmlsdGVyKGZ1bmN0aW9uKG1lbWJlcikge1xuXHRcdFx0XHRpZiAoIG1lbWJlci5taXNzaW9uID09ICflj7jmqZ8nIHx8IG1lbWJlci5taXNzaW9uID09ICflronlhajnrqHliLblk6EnIHx8IG1lbWJlci5taXNzaW9uID09ICfmlZHorbfkurrlk6EnKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlICBcblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0IFx0dmFyIHN0cmlrZVRlYW0gPSB7XG5cdCAgICAgIFx0XHRpZCBcdFx0ICAgIDogMSwgXG5cdCAgICAgIFx0XHRjYXNlSWQgICAgICA6ICRzdGF0ZVBhcmFtcy5pZCxcblx0ICAgICAgXHRcdGJyYW5jaCAgICAgIDogJHNjb3BlLmRldGFpbHMubmFtZSxcblx0ICAgICAgXHRcdGRpcmVjdG9yICAgIDogJHNjb3BlLmRldGFpbHMuZGlyZWN0b3IsXG5cdCAgICAgIFx0XHRwb3NpdGlvbiAgICA6IFwi56ys5LiA6Z2iXCIsXG5cdCAgICAgIFx0XHRwb3NpdGlvbnMgICA6IFtcIuesrOS4gOmdolwiLFwi56ys5LqM6Z2iXCIsXCLnrKzkuInpnaJcIixcIuesrOWbm+mdolwiXSxcblx0ICAgICAgXHRcdG1pc3Npb24gICAgIDogXCLmu4XngavlsI/ntYRcIixcblx0ICAgICAgXHRcdG1pc3Npb25zICAgIDogW1wi5ruF54Gr5bCP57WEXCIsXCLnoLTlo57lsI/ntYRcIixcIuaQnOaVkeWwj+e1hFwiXSxcblx0ICAgICAgXHRcdGFyZWEgXHRcdDogXCLnrKzkuIDljYBcIixcblx0ICAgICAgXHRcdGFyZWFzIFx0XHQ6IFtcIuesrOS4gOWNgFwiLFwi56ys5LqM5Y2AXCIsXCLnrKzkuInljYBcIixcIuesrOWbm+WNgFwiLFwi56ys5LqU5Y2AXCJdLFxuXHQgICAgICBcdFx0bWVtYmVycyAgICAgOiBtZW1iZXJzLFxuXHQgICAgICBcdFx0aXNEaXNtaXNzZWQgOiBmYWxzZSxcblx0ICAgICAgXHRcdHdvcmtpbmdUaW1lIDogXy5taW4obWVtYmVycywgZnVuY3Rpb24obWVtYmVyKXsgcmV0dXJuIG1lbWJlci53b3JraW5nVGltZTsgfSkud29ya2luZ1RpbWUsXG5cdCAgICAgIFx0XHRjcmVhdG9yIFx0OiBVc2VyU3ZjLmN1cnJlbnRVc2VyKCkgXHRcblx0ICAgICAgXHR9O1xuXG5cdCAgICAgIFx0Zm9yICh2YXIgaSA9IG1lbWJlcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBcdFx0XHRNZW1iZXJTdmMudXBkYXRlSXNDaGVja2VkKHtcbiAgICBcdFx0XHRcdG1lbWJlcklkICA6IG1lbWJlcnNbaV0uX2lkLFxuICAgIFx0XHRcdFx0aXNDaGVja2VkIDogdHJ1ZSxcbiAgICBcdFx0XHRcdG1pc3Npb25cdCAgOiBtZW1iZXJzW2ldLm1pc3Npb25cbiAgICBcdFx0XHR9KTtcdFx0XG5cdFx0ICAgIH07XG5cblx0ICAgICAgXHRTb2NrZXRTdmMuZW1pdChcImNyZWF0ZVN0cmlrZVRlYW1cIiwgc3RyaWtlVGVhbSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS4kb24oJyRkZXN0cm95JywgZnVuY3Rpb24gKGV2ZW50KSB7XG5cdCAgICAgICAgU29ja2V0U3ZjLnJlbW92ZUFsbExpc3RlbmVycygpO1xuXHQgICAgfSlcbn1dKTsiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdTYWZldHlNb2RhbEN0cmwnLCBbJyRzY29wZScsJyRtb2RhbEluc3RhbmNlJywgJyRzdGF0ZVBhcmFtcycsJ1N0U3ZjJywgJ01lbWJlclN2YycsICckc3RhdGUnLCAnJHdpbmRvdycsICdzdElkJywgJ1VzZXJTdmMnLCAnQnJhbmNoU3ZjJywnU29ja2V0U3ZjJywnYnJhbmNoJyxcblx0ZnVuY3Rpb24gKCRzY29wZSwgJG1vZGFsSW5zdGFuY2UsICRzdGF0ZVBhcmFtcywgU3RTdmMsIE1lbWJlclN2YywgJHN0YXRlLCAkd2luZG93LCBzdElkLCBVc2VyU3ZjLCAgQnJhbmNoU3ZjLCBTb2NrZXRTdmMsIGJyYW5jaCkge1xuIFxuXHRcdCRzY29wZS50aXRsZSA9IGJyYW5jaCArICAoc3RJZCArIDEgKTtcblxuXHRcdEJyYW5jaFN2Yy5mZXRjaEJ5TmFtZShicmFuY2gpLnN1Y2Nlc3MoZnVuY3Rpb24oZGV0YWlscyl7XG5cdFx0XHQkc2NvcGUuZGV0YWlscyA9IGRldGFpbHM7XG5cdFx0fSkudGhlbihmdW5jdGlvbigpe1xuXHRcdFx0aWYgKCAkc2NvcGUuZGV0YWlscykge1xuXHRcdFx0XHQkc2NvcGUuZGV0YWlscy5tZW1iZXJzID0gJHNjb3BlLmRldGFpbHMubWVtYmVycy5maWx0ZXIoZnVuY3Rpb24obWVtYmVyKXtcblx0XHRcdFx0XHRyZXR1cm4gbWVtYmVyLmlzQ2hlY2tlZCAhPSB0cnVlOyAgXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHQkc2NvcGUuZGV0YWlscy5tZW1iZXJzLmZvckVhY2goZnVuY3Rpb24obWVtYmVyKXtcblx0XHRcdFx0XHRtZW1iZXIubGltaXRUaW1lID0gbW9tZW50LmR1cmF0aW9uKG1lbWJlci53b3JraW5nVGltZSwgJ3NlY29uZHMnKTtcblx0XHRcdFx0fSlcblx0XHRcdH07XG5cdFx0fSk7XG5cblx0XHQkc2NvcGUuc3RyaWtlVGVhbSA9IHtcblx0XHRcdHBvc2l0aW9uICA6IFwi56ys5LiA6Z2iXCIsXG5cdFx0XHRwb3NpdGlvbnMgOiBbXCLnrKzkuIDpnaJcIixcIuesrOS6jOmdolwiLFwi56ys5LiJ6Z2iXCIsXCLnrKzlm5vpnaJcIl0sXG5cdFx0XHRtaXNzaW9uICAgOiBcIua7heeBq+Wwj+e1hFwiLFxuXHRcdFx0bWlzc2lvbnMgIDogW1wi5ruF54Gr5bCP57WEXCIsXCLnoLTlo57lsI/ntYRcIixcIuaQnOaVkeWwj+e1hFwiXSxcblx0XHRcdGFyZWEgXHQgIDogXCLnrKzkuIDljYBcIixcblx0XHRcdGFyZWFzIFx0ICA6IFtcIuesrOS4gOWNgFwiLFwi56ys5LqM5Y2AXCIsXCLnrKzkuInljYBcIixcIuesrOWbm+WNgFwiLFwi56ys5LqU5Y2AXCJdXG5cdFx0fTtcblxuXHRcdCRzY29wZS5jaGVjayA9IGZ1bmN0aW9uKG1lbWJlcil7XG5cdFx0XHRtZW1iZXIuaXNDaGVja2VkID0gIW1lbWJlci5pc0NoZWNrZWQ7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5jYW5jZWwgPSBmdW5jdGlvbigpe1xuXHRcdFx0JG1vZGFsSW5zdGFuY2UuZGlzbWlzcygnY2FuY2VsJyk7XG5cdFx0fTtcblxuXHQgICAgJHNjb3BlLnNhdmUgPSBmdW5jdGlvbigpe1xuXHQgICAgXHR2YXIgbWVtYmVycyA9ICRzY29wZS5kZXRhaWxzLm1lbWJlcnMuZmlsdGVyKGZ1bmN0aW9uKG1lbWJlcikge1xuXHRcdCAgICBcdFx0XHRcdHJldHVybiBtZW1iZXIuaXNDaGVja2VkID09PSB0cnVlIFxuXHQgICAgXHRcdFx0XHR9KTtcblxuXHQgICAgXHRpZiAobWVtYmVycy5sZW5ndGggPiAtMSkge1xuXG5cdFx0ICAgIFx0dmFyIHN0cmlrZVRlYW0gPSB7XG5cdFx0ICAgICAgXHRcdGlkIFx0XHQgICAgOiBzdElkICsgMSB8fCAwICwgXG5cdFx0ICAgICAgXHRcdGNhc2VJZCAgICAgIDogJHN0YXRlUGFyYW1zLmlkLFxuXHRcdCAgICAgIFx0XHRicmFuY2ggICAgICA6ICRzY29wZS5kZXRhaWxzLm5hbWUsXG5cdFx0ICAgICAgXHRcdGRpcmVjdG9yICAgIDogJHNjb3BlLmRldGFpbHMuZGlyZWN0b3IsXG5cdFx0ICAgICAgXHRcdHBvc2l0aW9uICAgIDogJHNjb3BlLnN0cmlrZVRlYW0ucG9zaXRpb24sXG5cdFx0ICAgICAgXHRcdHBvc2l0aW9ucyAgIDogJHNjb3BlLnN0cmlrZVRlYW0ucG9zaXRpb25zLFxuXHRcdCAgICAgIFx0XHRtaXNzaW9uICAgICA6ICRzY29wZS5zdHJpa2VUZWFtLm1pc3Npb24sXG5cdFx0ICAgICAgXHRcdG1pc3Npb25zICAgIDogJHNjb3BlLnN0cmlrZVRlYW0ubWlzc2lvbnMsIFxuXHRcdCAgICAgIFx0XHRhcmVhIFx0XHQ6ICRzY29wZS5zdHJpa2VUZWFtLmFyZWEsXG5cdFx0ICAgICAgXHRcdGFyZWFzIFx0XHQ6ICRzY29wZS5zdHJpa2VUZWFtLmFyZWFzLCBcblx0XHQgICAgICBcdFx0bWVtYmVycyAgICAgOiBtZW1iZXJzLFxuXHRcdCAgICAgIFx0XHRpc0Rpc21pc3NlZCA6IGZhbHNlLFxuXHRcdCAgICAgIFx0XHR3b3JraW5nVGltZSA6IF8ubWluKG1lbWJlcnMsIGZ1bmN0aW9uKG1lbWJlcil7IHJldHVybiBtZW1iZXIud29ya2luZ1RpbWU7IH0pLndvcmtpbmdUaW1lLFxuXHRcdCAgICAgIFx0XHRjcmVhdG9yIFx0OiBVc2VyU3ZjLmN1cnJlbnRVc2VyKCkgXHRcblx0XHQgICAgICBcdH07XG5cblx0ICAgICAgXHRcdGZvciAodmFyIGkgPSBtZW1iZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdCAgICBcdFx0XHRNZW1iZXJTdmMudXBkYXRlSXNDaGVja2VkKHtcblx0ICAgIFx0XHRcdFx0bWVtYmVySWQgIDogbWVtYmVyc1tpXS5faWQsXG5cdCAgICBcdFx0XHRcdGlzQ2hlY2tlZCA6IG1lbWJlcnNbaV0uaXNDaGVja2VkLFxuXHQgICAgXHRcdFx0XHRtaXNzaW9uXHQgIDogbWVtYmVyc1tpXS5taXNzaW9uXG5cdCAgICBcdFx0XHR9KVx0XHRcblx0XHQgICAgXHR9O1xuXG5cdFx0ICAgICAgXHQvLyBTdFN2Yy5jcmVhdGUoc3RyaWtlVGVhbSlcblx0XHQgICAgICBcdFNvY2tldFN2Yy5lbWl0KFwiY3JlYXRlU3RyaWtlVGVhbVwiLCBzdHJpa2VUZWFtKVxuXHRcdCAgICAgIFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcblx0ICAgIFx0fWVsc2V7XG5cdCAgICBcdFx0JHdpbmRvdy5hbGVydChcInlvdSBtdXN0IG9yZ2FuaXplIHN0cmlrZSB0ZWFtXCIpXG5cdCAgICBcdH07XG5cdFx0fTtcblx0XG59XSk7IiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uY29udHJvbGxlcignU2FmZXR5U2V0dGluZ0N0cmwnLCBbJyRzY29wZScsICdzdHJpa2VUZWFtJywgJyRtb2RhbEluc3RhbmNlJywgJ1N0U3ZjJywgJyRzdGF0ZScsICdNZW1iZXJTdmMnLCAnQ2FzZVN2YycsICckc3RhdGVQYXJhbXMnLCAnU29ja2V0U3ZjJyxcblx0ZnVuY3Rpb24gKCRzY29wZSwgc3RyaWtlVGVhbSwgJG1vZGFsSW5zdGFuY2UsIFN0U3ZjLCAkc3RhdGUsIE1lbWJlclN2YywgQ2FzZVN2YywgJHN0YXRlUGFyYW1zLCBTb2NrZXRTdmMpIHtcblx0XHRcblx0XHR2YXIgbWVtYmVycyA9IFtdO1xuXHRcdHZhciBtZW1iZXJPYmpzID1bXTtcblx0XHQkc2NvcGUuc3RyaWtlVGVhbSA9IHN0cmlrZVRlYW07XG5cblx0XHRDYXNlU3ZjLmZldGNoRGV0YWlscygkc3RhdGVQYXJhbXMuaWQpLnN1Y2Nlc3MoZnVuY3Rpb24oZGV0YWlscyl7XG5cdFx0XHQkc2NvcGUuZGlzcGF0Y2ggPSBkZXRhaWxzLmJyYW5jaElkcztcblx0XHR9KTtcblxuXHRcdCRzY29wZS5jaG9vc2VCcmFuY2ggPSBmdW5jdGlvbihpZCl7XG5cdFx0XHQkc2NvcGUubWVtYmVycyA9ICRzY29wZS5kaXNwYXRjaFtpZF0ubWVtYmVyc1xuXHRcdFx0Zm9yICh2YXIgaSA9ICRzY29wZS5tZW1iZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHRcdGlmKCAkc2NvcGUubWVtYmVyc1tpXS5pc0NoZWNrZWQgKXtcblx0XHRcdFx0XHQkc2NvcGUubWVtYmVycy5zcGxpY2UoaSwxKTtcblx0XHRcdFx0fTtcblx0XHRcdH07XG5cdFx0fTtcblxuXHRcdCRzY29wZS5jYW5jZWwgPSBmdW5jdGlvbigpe1xuXHRcdFx0JG1vZGFsSW5zdGFuY2UuZGlzbWlzcygnY2FuY2VsJyk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5jaGVjayA9IGZ1bmN0aW9uKG1lbWJlcil7XG5cdFx0XHRtZW1iZXIuaXNDaGVja2VkID0gIW1lbWJlci5pc0NoZWNrZWQ7XG5cdFx0XHRtZW1iZXJzLnB1c2gobWVtYmVyLl9pZCk7XG5cdFx0XHRtZW1iZXJPYmpzLnB1c2gobWVtYmVyKTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLnVuY2hlY2sgPSBmdW5jdGlvbihtZW1iZXIsIGlkKXtcblx0XHRcdG1lbWJlci5pc0NoZWNrZWQgPSAhbWVtYmVyLmlzQ2hlY2tlZDtcblx0XHRcdG1lbWJlcnMuc3BsaWNlKGlkLDEpO1xuXHRcdFx0bWVtYmVyT2Jqcy5zcGxpY2UoaWQsMSk7XG5cdFx0fVxuXG5cdFx0JHNjb3BlLnNhdmUgPSBmdW5jdGlvbigpe1xuXG5cdFx0XHRTdFN2Yy51cGRhdGVTdCh7XG5cdFx0XHRcdGlkIDogc3RyaWtlVGVhbS5faWQsXG5cdFx0XHRcdHBvc2l0aW9uIDogc3RyaWtlVGVhbS5wb3NpdGlvbixcblx0XHRcdFx0YXJlYSA6IHN0cmlrZVRlYW0uYXJlYSxcblx0XHRcdFx0bWlzc2lvbiA6IHN0cmlrZVRlYW0ubWlzc2lvbixcblx0XHRcdFx0bWVtYmVySWRzIDogbWVtYmVyc1xuXHRcdFx0fSkuc3VjY2VzcyhmdW5jdGlvbigpe1xuXHRcdFx0XHRmb3IgKHZhciBpID0gbWVtYmVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuXHRcdCAgICAgICAgICAgIE1lbWJlclN2Yy51cGRhdGVJc0NoZWNrZWQoe1xuXHRcdCAgICAgICAgICAgICAgICBtZW1iZXJJZCAgOiBtZW1iZXJPYmpzW2ldLl9pZCxcblx0XHQgICAgICAgICAgICAgICAgbWlzc2lvblx0ICA6IG1lbWJlck9ianNbaV0ubWlzc2lvbiwgXG5cdFx0ICAgICAgICAgICAgICAgIGlzQ2hlY2tlZCA6IHRydWUsXG5cdFx0ICAgICAgICAgICAgfSlcblx0XHQgICAgICAgIH07XG5cdFx0XHR9KVxuXG5cdFx0XHQkbW9kYWxJbnN0YW5jZS5jbG9zZSh7XG5cdFx0XHRcdGlkIDogc3RyaWtlVGVhbS5faWQsXG5cdFx0XHRcdHBvc2l0aW9uIDogc3RyaWtlVGVhbS5wb3NpdGlvbixcblx0XHRcdFx0YXJlYSA6IHN0cmlrZVRlYW0uYXJlYSxcblx0XHRcdFx0bWVtYmVycyA6IG1lbWJlck9ianMsXG5cdFx0XHRcdGNhc2VJZCAgOiBzdHJpa2VUZWFtLmNhc2VJZCBcblx0XHRcdH0pO1xuXG5cdFx0XHRcblx0XHR9O1xufV0pIiwiLyoqXG4qIEluTmV0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXIubW9kdWxlKCdJbk5ldCcpXG4uc2VydmljZSgnU29ja2V0U3ZjJyxbICckcm9vdFNjb3BlJywgJ3N0b3JlJywgJyRxJywgJyR0aW1lb3V0JyxcbiAgZnVuY3Rpb24gKCRyb290U2NvcGUsIHN0b3JlLCAkcSwgJHRpbWVvdXQpIHtcblxuICB0aGlzLmluaXQgPSAgZnVuY3Rpb24odG9rZW4pe1xuICAgIHZhciBhdXRoVG9rZW4gPSBudWxsXG4gICAgaWYgKHRva2VuKSB7XG4gICAgICBhdXRoVG9rZW4gPSB0b2tlbiBcbiAgICB9IGVsc2Uge1xuICAgICAgYXV0aFRva2VuID0gc3RvcmUuZ2V0KCdqd3QnKVxuICAgIH07XG4gICAgcmV0dXJuIGlvLmNvbm5lY3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcseyBxdWVyeSA6ICd0b2tlbj0nICsgYXV0aFRva2VuICwgJ2ZvcmNlTmV3Jzp0cnVlIH0pO1xuICB9XG5cbiAgdmFyIHNvY2tldCA9IHRoaXMuaW5pdCgpO1xuXG4gIHRoaXMub24gPSAgZnVuY3Rpb24gKGV2ZW50TmFtZSwgY2FsbGJhY2spIHtcbiAgICB0aGlzLmluaXQoKS5vbihldmVudE5hbWUsIGZ1bmN0aW9uICgpIHsgIFxuICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAkcm9vdFNjb3BlLiRhcHBseShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNhbGxiYWNrLmFwcGx5KHNvY2tldCwgYXJncyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHRoaXMuZW1pdCA9ICBmdW5jdGlvbiAoZXZlbnROYW1lLCBkYXRhLCBjYWxsYmFjaykge1xuICAgIHRoaXMuaW5pdCgpLmVtaXQoZXZlbnROYW1lLCBkYXRhLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICRyb290U2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgY2FsbGJhY2suYXBwbHkoc29ja2V0LCBhcmdzKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSlcbiAgfVxuXG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzID0gZnVuY3Rpb24gKGV2ZW50TmFtZSwgY2FsbGJhY2spIHtcbiAgICB0aGlzLmluaXQoKS5yZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnROYW1lLCBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgICRyb290U2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBjYWxsYmFjay5hcHBseShzb2NrZXQsIGFyZ3MpO1xuICAgICAgICB9KTtcbiAgICB9KTsgXG4gIH1cbiAgXG59XSkiLCIvKipcbiogSW5OZXcgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5zZXJ2aWNlKCdTdFN2YycsIFsgJyRodHRwJywgZnVuY3Rpb24gKCRodHRwKSB7XG5cdHRoaXMuZmV0Y2ggPSBmdW5jdGlvbihjYXNlSWQsIGJyYW5jaCl7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9zdHJpa2VUZWFtcz9jYXNlSWQ9JyArIGNhc2VJZCArICcmYnJhbmNoPScgKyBicmFuY2gpO1xuXHR9O1xuXG5cdHRoaXMuZmV0Y2hCeUNhc2UgPSBmdW5jdGlvbihjYXNlSWQpe1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvc3RyaWtlVGVhbXMvdG90YWw/Y2FzZUlkPScgKyBjYXNlSWQpO1xuXHR9O1xuXG5cdHRoaXMuZmluZEJ5SWQgPSBmdW5jdGlvbihjYXNlSWQpe1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvc3RyaWtlVGVhbXMvJyArIGNhc2VJZCk7XG5cdH1cblxuXHR0aGlzLmRpc21pc3NTdCA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvc3RyaWtlVGVhbXMvZGlzbWlzcz9pZD0nICsgZGF0YS5pZCk7XG5cdH07XG5cblx0dGhpcy51cGRhdGVTdCA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvc3RyaWtlVGVhbXMvdXBkYXRlP2lkPScgKyBkYXRhLmlkLCBkYXRhKTtcblx0fTtcblxuXHR0aGlzLnVwZGF0ZVRpbWVSZWNvcmQgPSBmdW5jdGlvbihkYXRhKXtcblx0XHRyZXR1cm4gJGh0dHAucHV0KCcvYXBpL3N0cmlrZVRlYW1zL3RpbWU/aWQ9JyArIGRhdGEuaWQsIGRhdGEpO1xuXHR9O1xuXG5cdHRoaXMuY3JlYXRlID0gZnVuY3Rpb24oc3RyaWtlVGVhbSl7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoJy9hcGkvc3RyaWtlVGVhbXMnLCBzdHJpa2VUZWFtKTtcblx0fTtcblxuXHR0aGlzLmNvdW50ID0gZnVuY3Rpb24oY2FzZUlkKXtcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3N0cmlrZVRlYW1zL2NvdW50P2Nhc2VJZD0nICsgY2FzZUlkKTtcblx0fTtcblx0XG59XSkiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdTdW1tYXJ5Q3RybCcsIFsnJHNjb3BlJywgJ1N0U3ZjJywgJyRzdGF0ZVBhcmFtcycsICckaW50ZXJ2YWwnLCAnJHN0YXRlJywgJ1NvY2tldFN2YycsXG5cdGZ1bmN0aW9uICgkc2NvcGUsIFN0U3ZjLCAkc3RhdGVQYXJhbXMsICRpbnRlcnZhbCwgJHN0YXRlLCBTb2NrZXRTdmMpIHtcblxuXHRcdFNvY2tldFN2Yy5vbigndGltZXJSdW5uaW5nJyxmdW5jdGlvbihzdCl7XG5cdFx0XHRmb3IgKHZhciBpID0gJHNjb3BlLnN0cmlrZVRlYW1zLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHRcdGlmKCBhbmd1bGFyLmVxdWFscygkc2NvcGUuc3RyaWtlVGVhbXNbaV0uX2lkLCBzdC5zdElkKSl7XG5cdFx0XHRcdFx0JHNjb3BlLnN0cmlrZVRlYW1zW2ldLnRpbWVyUnVubmluZyA9IHN0LnRpbWVyUnVubmluZztcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9KVxuXG5cdFx0U29ja2V0U3ZjLm9uKCdwcm9ncmVzc1VwZGF0ZScsZnVuY3Rpb24oZGF0YSl7XG5cdFx0XHRmb3IgKHZhciBpID0gJHNjb3BlLnN0cmlrZVRlYW1zLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHRcdGlmKCBhbmd1bGFyLmVxdWFscygkc2NvcGUuc3RyaWtlVGVhbXNbaV0uX2lkLCBkYXRhLmlkKSApe1xuXHRcdFx0XHRcdCRzY29wZS5zdHJpa2VUZWFtc1tpXS50aW1lclx0PSBtb21lbnQuZHVyYXRpb24oZGF0YS5taWxsaXMpOyBcblx0XHRcdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXNbaV0ucHJvZ3Jlc3MgID0gZGF0YS5wcm9ncmVzcztcblx0XHRcdFx0XHQkc2NvcGUuc3RyaWtlVGVhbXNbaV0ucHJvZ3Jlc3NTdGF0ZSA9ICBkYXRhLnByb2dyZXNzU3RhdGU7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0fSlcblxuXHRcdFNvY2tldFN2Yy5vbignbmV3U3QnLCBmdW5jdGlvbihzdCl7XG5cdFx0XHRpZiAoIGFuZ3VsYXIuZXF1YWxzKGNhc2VJZCxzdC5jYXNlSWQpKSB7XG5cdFx0XHRcdHZhciBuZXdTdCA9IGFuZ3VsYXIuY29weShzdCk7XG5cdFx0XHRcdCRzY29wZS5zdHJpa2VUZWFtcy5wdXNoKG5ld1N0KTtcblx0XHRcdH07XG5cdFx0XHQkc2NvcGUuZGVwbG95cyA9IGluaXRUYWJsZSgkc2NvcGUuc3RyaWtlVGVhbXMpO1xuXHRcdH0pO1xuXG5cdFx0U29ja2V0U3ZjLm9uKCd1cGRhdGVTdCcsIGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0U3RTdmMuZmV0Y2hCeUNhc2UoY2FzZUlkKS5zdWNjZXNzKGZ1bmN0aW9uKHN0cmlrZVRlYW1zKXtcblx0XHRcdFx0JHNjb3BlLnN0cmlrZVRlYW1zID0gc3RyaWtlVGVhbXM7XG5cdFx0XHRcdCRzY29wZS5zdHJpa2VUZWFtcy5mb3JFYWNoKGZ1bmN0aW9uKHN0KXtcblx0XHRcdFx0XHRzdC5saW1pdFRpbWUgPSBtb21lbnQuZHVyYXRpb24oc3Qud29ya2luZ1RpbWUsJ3NlY29uZHMnKTtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdCRzY29wZS5kZXBsb3lzID0gaW5pdFRhYmxlKCRzY29wZS5zdHJpa2VUZWFtcyk7XG5cdFx0XHR9KTtcblxuXHRcdH0pXG5cblx0XHRTb2NrZXRTdmMub24oJ2Rpc21pc3MnLCBmdW5jdGlvbihkYXRhKXtcblx0XHRcdFN0U3ZjLmZldGNoQnlDYXNlKGNhc2VJZCkuc3VjY2VzcyhmdW5jdGlvbihzdHJpa2VUZWFtcyl7XG5cdFx0XHRcdCRzY29wZS5zdHJpa2VUZWFtcyA9IHN0cmlrZVRlYW1zO1xuXHRcdFx0XHQkc2NvcGUuZGVwbG95cyA9IGluaXRUYWJsZSgkc2NvcGUuc3RyaWtlVGVhbXMpO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cblxuXHRcdHZhciBjYXNlSWQgPSAkc3RhdGVQYXJhbXMuaWQ7IFxuXG5cdFx0U3RTdmMuZmV0Y2hCeUNhc2UoY2FzZUlkKS5zdWNjZXNzKGZ1bmN0aW9uKHN0cmlrZVRlYW1zKXtcblx0XHRcdCRzY29wZS5zdHJpa2VUZWFtcyA9IHN0cmlrZVRlYW1zO1xuXHRcdFx0JHNjb3BlLnN0cmlrZVRlYW1zLmZvckVhY2goZnVuY3Rpb24oc3Qpe1xuXHRcdFx0XHRzdC5saW1pdFRpbWUgPSBtb21lbnQuZHVyYXRpb24oc3Qud29ya2luZ1RpbWUsJ3NlY29uZHMnKTtcblx0XHRcdH0pO1xuXHRcdFx0JHNjb3BlLmRlcGxveXMgPSBpbml0VGFibGUoJHNjb3BlLnN0cmlrZVRlYW1zKTtcblx0XHR9KTtcblxuXHRcdCRzY29wZS5wb3NpdGlvbiA9IHtcblx0XHRcdGRlZmF1bHRQb3MgOiBcIuesrOS4gOmdolwiLFxuXHRcdFx0cG9zaXRpb25zIDogW1wi56ys5LiA6Z2iXCIsXCLnrKzkuozpnaJcIixcIuesrOS4iemdolwiLFwi56ys5Zub6Z2iXCJdXG5cdFx0fTtcblxuXHRcdHZhciBpbml0VGFibGUgPSAgZnVuY3Rpb24oc3RyaWtlVGVhbXMpe1xuXHRcdCAgXHR2YXIgZGVwbG95QXJyYXkgPSBfLnJhbmdlKDQpLm1hcChmdW5jdGlvbiAoKSB7XG5cdFx0ICAgICAgICByZXR1cm4gXy5yYW5nZSg1KS5tYXAoZnVuY3Rpb24gKCkge1xuXHRcdCAgICAgICAgICAgIHJldHVybiB7IHRvdGFsTWVtYmVyIDogMCwgc3RUb3RhbCA6IDB9IDtcblx0XHQgICAgICAgIH0pO1xuXHRcdCAgICB9KTtcblxuXHRcdFx0aWYgKCBzdHJpa2VUZWFtcyApe1xuXHRcdFx0XHRmb3IgKHZhciBpID0gc3RyaWtlVGVhbXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcblx0XHRcdFx0XHR2YXIgdG90YWxNZW1iZXIgPSAwO1xuXHRcdFx0XHRcdHZhciBzdCA9IDA7ICBcblx0XHRcdFx0XHR2YXIgeCA9IF8uaW5kZXhPZihzdHJpa2VUZWFtc1tpXS5wb3NpdGlvbnMsIHN0cmlrZVRlYW1zW2ldLnBvc2l0aW9uKTtcblx0XHRcdFx0XHR2YXIgeSA9IF8uaW5kZXhPZihzdHJpa2VUZWFtc1tpXS5hcmVhcywgc3RyaWtlVGVhbXNbaV0uYXJlYSk7XG5cdFx0XHRcdFx0ZGVwbG95QXJyYXlbeF1beV0uc3RUb3RhbCArPSAxO1xuXHRcdFx0XHRcdGRlcGxveUFycmF5W3hdW3ldLnRvdGFsTWVtYmVyICs9IHN0cmlrZVRlYW1zW2ldLm1lbWJlcnMubGVuZ3RoOyAgXG5cblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBkZXBsb3lBcnJheVxuXHRcdH07XG5cdFx0XG5cdFx0JHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoZXZlbnQpIHtcblx0ICAgICAgICBTb2NrZXRTdmMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG5cdCAgICB9KTtcbn1dKTsiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdUaW1lckN0cmwnLCBbJyRzY29wZScsICdTb2NrZXRTdmMnLFxuICAgIGZ1bmN0aW9uKCRzY29wZSwgU29ja2V0U3ZjKXtcblxuXHQkc2NvcGUudGltZXJSdW5uaW5nID0gZmFsc2U7XG5cbiAgICAkc2NvcGUuc3RhcnRUaW1lciA9IGZ1bmN0aW9uKHN0LCBpZCl7XG4gICAgXHQkc2NvcGUuJGJyb2FkY2FzdCgndGltZXItc3RhcnQnKTtcbiAgICBcdCRzY29wZS50aW1lclJ1bm5pbmcgPSB0cnVlO1xuICAgICAgICBTb2NrZXRTdmMuZW1pdCgndGltZXInLCB7IHN0SWQgOiBzdC5faWQsIHRpbWVyUnVubmluZyA6IHRydWUgfSApXG4gICAgfTtcblxuICAgICRzY29wZS5zdG9wVGltZXIgPSBmdW5jdGlvbihzdCxpZCl7XG4gICAgXHQkc2NvcGUuJGJyb2FkY2FzdCgndGltZXItc3RvcCcpO1xuICAgIFx0JHNjb3BlLnRpbWVyUnVubmluZyA9IGZhbHNlO1xuICAgICAgICBTb2NrZXRTdmMuZW1pdCgndGltZXInLCB7IHN0SWQgOiBzdC5faWQsIHRpbWVyUnVubmluZyA6IGZhbHNlIH0gKVxuICAgIH07XG5cdFxufV0pOyIsIi8qKlxuKiAgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5jb250cm9sbGVyKCdUb3BOYXZDdHJsJywgWyckc2NvcGUnLCAnJGxvY2F0aW9uJywnJHN0YXRlJywgJyRpbnRlcnZhbCcsICdzdG9yZScsICdTb2NrZXRTdmMnLCAnVXNlclN2YycsJyR3aW5kb3cnLFxuXHRmdW5jdGlvbiAoJHNjb3BlLCAkbG9jYXRpb24sJHN0YXRlLCAkaW50ZXJ2YWwsIHN0b3JlLCBTb2NrZXRTdmMsIFVzZXJTdmMsICR3aW5kb3cpIHtcblxuXHQkc2NvcGUuY3VycmVudFRpbWUgPSAgbW9tZW50KCkuZm9ybWF0KCdNTU0gRG8sIGg6bW06c3MgYScpO1xuXHQkaW50ZXJ2YWwoZnVuY3Rpb24oKXtcblx0XHRtb21lbnQubG9jYWxlKCd6aC10dycpO1xuXHRcdCRzY29wZS5jdXJyZW50VGltZSA9ICBtb21lbnQoKS5mb3JtYXQoJ01NTSBEbywgaDptbTpzcyBhJyk7XG5cdH0sIDEwMDApO1xuXG5cdCRzY29wZS5sb2dvdXQgPSBmdW5jdGlvbigpe1xuXHRcdHZhciBhY2NvdW50ID0gVXNlclN2Yy5jdXJyZW50QWNjb3VudCgpO1xuXHRcdFNvY2tldFN2Yy5lbWl0KCdsb2dvdXQnKTtcblx0XHQkc3RhdGUuZ28oJ2Fub24ubG9naW4nKTtcblx0fTtcblx0XG59XSkiLCIvKipcbiogSW5OZXQgTW9kdWxlXG4qXG4qIERlc2NyaXB0aW9uXG4qL1xuYW5ndWxhci5tb2R1bGUoJ0luTmV0Jylcbi5zZXJ2aWNlKCdVc2VyU3ZjJywgWyAnJGh0dHAnLCAnc3RvcmUnLCAnand0SGVscGVyJywgZnVuY3Rpb24gKCRodHRwLCBzdG9yZSwgand0SGVscGVyKSB7XG5cblx0dGhpcy5mZXRjaE9ubGluZVVzZXIgPSBmdW5jdGlvbigpe1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdXNlcnMvdXNlclN0YXRlJyk7XG5cdH07XG5cblx0dGhpcy5hY3RpdmF0ZSA9IGZ1bmN0aW9uKHVzZXIpe1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3VzZXJzJywgdXNlcik7XG5cdH07XG5cblx0dGhpcy5yZW1vdmVVc2VyID0gZnVuY3Rpb24odXNlcm5hbWUpe1xuXHRcdHJldHVybiAkaHR0cC5kZWxldGUoJy9hcGkvdXNlcnMvZGVsZXRlP3VzZXJuYW1lPScgKyB1c2VybmFtZSk7XG5cdH07XG5cblx0dGhpcy5sb2dpbiA9IGZ1bmN0aW9uKHVzZXIpe1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3VzZXJzL2F1dGhlbnRpY2F0ZScsIHVzZXIpO1xuXHR9O1xuXG5cdHRoaXMuaXNMb2dnZWRJbiA9IGZ1bmN0aW9uKCl7XG5cdFx0cmV0dXJuIHN0b3JlLmdldCgnand0Jyk7XG5cdH07XG5cblx0dGhpcy5pc1ZhbGlkID0gZnVuY3Rpb24oIGJyYW5jaCApe1xuXHRcdGlmICh0aGlzLmlzTG9nZ2VkSW4pIHtcblx0XHRcdGlmIChqd3RIZWxwZXIuZGVjb2RlVG9rZW4oc3RvcmUuZ2V0KCdqd3QnKSkuYWNjZXNzTGV2ZWwgPiAxICAgfHwgand0SGVscGVyLmRlY29kZVRva2VuKHN0b3JlLmdldCgnand0JykpLmJyYW5jaCA9PSBicmFuY2gpIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7IFxuXHRcdFx0fWVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH07XG5cblx0XHRyZXR1cm4gZmFsc2UgXG5cdH07XG5cblx0dGhpcy51c2VyQnJhbmNoID0gZnVuY3Rpb24oKXtcblx0XHRpZiAodGhpcy5pc0xvZ2dlZEluKSB7XG5cdFx0XHRyZXR1cm4gand0SGVscGVyLmRlY29kZVRva2VuKHN0b3JlLmdldCgnand0JykpLmJyYW5jaDtcblx0XHR9O1xuXHR9O1xuXG5cdHRoaXMudXNlckNvcnBzID0gZnVuY3Rpb24oKXtcblx0XHRpZiAodGhpcy5pc0xvZ2dlZEluKSB7XG5cdFx0XHRyZXR1cm4gand0SGVscGVyLmRlY29kZVRva2VuKHN0b3JlLmdldCgnand0JykpLmNvcnBzO1xuXHRcdH07XG5cdH07XG5cblx0dGhpcy5jdXJyZW50VXNlciA9IGZ1bmN0aW9uKCl7XG5cdFx0aWYgKHRoaXMuaXNMb2dnZWRJbikge1xuXHRcdFx0cmV0dXJuIGp3dEhlbHBlci5kZWNvZGVUb2tlbihzdG9yZS5nZXQoJ2p3dCcpKS51c2VybmFtZTtcblx0XHR9O1xuXHR9O1xuXG5cdHRoaXMuY3VycmVudEFjY291bnQgPSBmdW5jdGlvbigpe1xuXHRcdGlmICh0aGlzLmlzTG9nZ2VkSW4pIHtcblx0XHRcdHJldHVybiBqd3RIZWxwZXIuZGVjb2RlVG9rZW4oc3RvcmUuZ2V0KCdqd3QnKSkuYWNjb3VudDtcblx0XHR9OyBcblx0fTtcblxuXHR0aGlzLmFjY2Vzc0xldmVsID0gZnVuY3Rpb24oKXtcblx0XHRpZiAodGhpcy5pc0xvZ2dlZEluKSB7XG5cdFx0XHRyZXR1cm4gand0SGVscGVyLmRlY29kZVRva2VuKHN0b3JlLmdldCgnand0JykpLmFjY2Vzc0xldmVsO1xuXHRcdH07XG5cdH07XG5cblx0dGhpcy5jYXNlSWQgPSBmdW5jdGlvbigpe1xuXHRcdGlmICh0aGlzLmlzTG9nZ2VkSW4pIHtcblx0XHRcdHJldHVybiBqd3RIZWxwZXIuZGVjb2RlVG9rZW4oc3RvcmUuZ2V0KCdqd3QnKSkuY2FzZUlkO1xuXHRcdH07XG5cdH07XG5cbn1dKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=