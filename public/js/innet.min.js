angular.module("InNet",["ui.router","ui.bootstrap","timer","angular-storage","angular-jwt","leaflet-directive","angular.filter"]),angular.module("InNet").service("BranchSvc",["$http",function(e){this.fetch=function(t){return e.get("/api/branch?corps="+t)},this.fetchByName=function(t){return e.get("/api/branch/name?branch="+t)},this.totalListFindByName=function(t){return e.get("/api/branch/name/total?branch="+t)},this.getDetails=function(t){return e.get("/api/branch/"+t)},this.update=function(t){return e.put("/api/branch/"+t.branch,t)},this.updateDirector=function(t){return e.put("/api/branch?branch="+t.branch,t)}}]),angular.module("InNet").controller("CarEditCtrl",["$scope",function(e){}]),angular.module("InNet").controller("CarIndexCtrl",["$scope",function(e){}]),angular.module("InNet").service("CarSvc",["$http",function(e){this.fetch=function(){return e.get("/api/cars")},this.findByBranch=function(t){return e.get("/api/cars/"+t)},this.update=function(t){return e.put("/api/cars/"+t.id,t)}}]),angular.module("InNet").controller("CaseCtrl",["$scope","$stateParams","$modal","CaseSvc","$log","SocketSvc","UserSvc",function(e,t,n,s,r,i,a){e.maxSize=5,e.bigTotalItems=175,e.bigCurrentPage=1,s.fetch(a.userCorps()).success(function(t){e.cases=t}),i.on("newCase",function(t){e.cases.unshift(t)}),i.on("caseModified",function(t){e.cases[t.caseId-1]=t}),e.choose=function(t){s.findById(e.cases[t]._id).success(function(t){e.caseDetails=t})},e.addNewCase=function(){var t=n.open({templateUrl:"views/case/case.modal.html",controller:"CaseModalCtrl",size:"lg",resolve:{caseId:function(){return _.isEmpty(e.cases)?0:e.cases[0].caseId},caseDetails:function(){return{}}}});t.result.then(function(e){console.log(e)},function(){r.info("Modal dismissed at: "+new Date)})},e.editCase=function(t){n.open({templateUrl:"views/case/case.modal.html",controller:"CaseModalCtrl",size:"lg",resolve:{caseId:function(){return t},caseDetails:function(){return e.caseDetails}}})}}]),angular.module("InNet").controller("CaseModalCtrl",["$scope","CarSvc","$modalInstance","CaseSvc","$state","caseId","caseDetails","StSvc","$window","BranchSvc","UserSvc",function(e,t,n,s,r,i,a,c,o,u,l){function m(e){var t=[],n=[],s=[];if(e.cars){for(var r=e.cars.length-1;r>=0;r--)t.push(e.cars[r].radioCode),n.push(e.cars[r]._id),s.push(e.cars[r].branch);return{dispatchList:t,carIds:n,branches:s}}return{}}function d(t){for(var n=_.unique(t),s=[],r=0;r<e.branches.length;r++)n.indexOf(e.branches[r].name)>-1&&s.push(e.branches[r]._id);return s}if(_.isEmpty(a))e.isNew=!0,f=[];else{e.isNew=!1;var f=a.cars}u.fetch(l.userCorps()).success(function(t){e.branches=t}),e.caseObj={address:a.address||null,phone:a.phone||null,type:a.type||"火警",types:["火警","救護","災害","檢舉","其他"],carIds:m(a).carIds||[],dispatchList:m(a).dispatchList||[],branches:m(a).branches||[]},e.dispatchList=e.caseObj.dispatchList.join(" "),e.getCars=function(n){t.findByBranch(n.name).success(function(t){for(var n=t.length-1;n>=0;n--)e.caseObj.carIds.indexOf(t[n]._id)>-1&&(t[n].isChecked=!0);e.cars=t})},e.cancel=function(){n.dismiss("cancel")},e.cancelDispatch=function(t){t.isChecked=!1,f.splice(f.indexOf(t),1),e.caseObj.carIds.splice(e.caseObj.dispatchList.indexOf(t._id),1),e.caseObj.dispatchList.splice(e.caseObj.dispatchList.indexOf(t.radioCode),1),e.caseObj.branches.splice(e.caseObj.dispatchList.indexOf(t.branch),1),e.dispatchList=e.caseObj.dispatchList.join(" ")},e.dispatch=function(t){t.isChecked=!0,f.push(t),e.caseObj.carIds.push(t._id),e.caseObj.dispatchList.push(t.radioCode),e.caseObj.branches.push(t.branch),e.dispatchList=e.caseObj.dispatchList.join(" ")},e.closeCase=function(){c.count(a._id).success(function(e){e>0?o.alert("尚有隊員在安全管制"):(s.closeCase({id:a._id,isOngoing:!1}).success(function(e){console.log(e)}),n.dismiss("cancel"),r.reload())})},e.save=function(){s.create({caseId:i+1,address:e.caseObj.address||"測試",officerReceiver:l.currentUser()||"劉曉曼",type:e.caseObj.type||"救護",phone:e.caseObj.phone||"測試",branches:_.unique(e.caseObj.branches),branchIds:d(e.caseObj.branches),cars:e.caseObj.carIds,isOngoing:!0,corps:l.userCorps()}).success(function(e){n.close(e)})},e.update=function(){var t={id:a._id,caseId:i,address:e.caseObj.address,officerReceiver:l.currentUser()||"劉曉曼",type:e.caseObj.type,phone:e.caseObj.phone,branches:_.unique(e.caseObj.branches),branchIds:d(e.caseObj.branches),cars:e.caseObj.carIds,isOngoing:!0};s.update(t),n.dismiss("cancel")}}]),angular.module("InNet").service("CaseSvc",["$http",function(e){this.fetch=function(t){return e.get("/api/cases?corps="+t)},this.fetchAll=function(){return e.get("/api/cases/details")},this.fetchRelativeCase=function(t){return e.get("/api/cases/branch?branch="+t.branch+"&accessLevel="+t.accessLevel+"&corps="+t.corps)},this.fetchDetails=function(t){return e.get("/api/cases/details/"+t)},this.findById=function(t){return e.get("/api/cases/"+t)},this.create=function(t){return e.post("/api/cases",t)},this.update=function(t){return e.put("/api/cases/"+t.id,t)},this["delete"]=function(t){return e.post("/api/cases/"+t)},this.closeCase=function(t){return e.put("/api/cases/close?id="+t.id,t)}}]),angular.module("InNet").controller("DashboardCtrl",["$scope","$location","SocketSvc","UserSvc","BranchSvc",function(e,t,n,s,r){r.fetch(s.userCorps()).success(function(t){e.branches=t}),s.fetchOnlineUser().success(function(t){e.users=t}),n.on("userLogin",function(t){e.users.push(t)}),n.on("userDisconnect",function(t){e.users=e.users.filter(function(e){return e.username!=t.username})}),n.on("userLogout",function(t){e.users=e.users.filter(function(e){return e.username!=t.username})}),e.$on("$destroy",function(e){n.removeAllListeners()})}]),angular.module("InNet").directive("minimalizaSidebar",["$timeout",function(e){return{restrict:"A",template:'<a class="navbar-minimalize minimalize-styl-2 btn btn-primary" href="" ng-click="minimalize()"><i class="fa fa-bars"></i></a>',controller:["$scope","$element",function(e,t){e.minimalize=function(){$("body").toggleClass("mini-navbar"),!$("body").hasClass("mini-navbar")||$("body").hasClass("body-small")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},100)):$("body").hasClass("fixed-sidebar")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},300)):$("#side-menu").removeAttr("style")}}]}}]).directive("sideNavigation",["$timeout",function(e){return{restrict:"A",link:function(t,n){e(function(){n.metisMenu()})}}}]).directive("iboxTools",["$timeout",function(e){return{restrict:"A",scope:!0,templateUrl:"views/common/ibox_tools.html",controller:["$scope","$element",function(t,n){t.showhide=function(){var t=n.closest("div.ibox"),s=n.find("i:first"),r=t.find("div.ibox-content");r.slideToggle(200),s.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"),t.toggleClass("").toggleClass("border-bottom"),e(function(){t.resize(),t.find("[id^=map-]").resize()},50)},t.closebox=function(){var e=n.closest("div.ibox");e.remove()}}]}}]).directive("back",["$window",function(e){return{restrict:"A",link:function(t,n,s){n.bind("click",function(){e.history.back()})}}}]),angular.module("InNet").controller("DispatchCtrl",["$scope","$stateParams","$modal","CaseSvc","BranchSvc","CarSvc","UserSvc",function(e,t,n,s,r,i,a){s.fetch(a.userCorps()).success(function(n){e.cases=n,s.findById(e.cases[t.caseId]._id).success(function(t){e.caseDetails=t})}),r.fetch(a.userCorps()).success(function(t){e.branchList=t}),i.fetch().success(function(t){e.carsData=t}),e.addNewCase=function(){n.open({templateUrl:"/partials/casePanel/caseAddModal",controller:"CaseAddModalCtrl",size:"lg",resolve:{caseId:function(){return e.id="新增案件"},branchList:function(){return e.branchList},carsData:function(){return e.carsData},isNew:function(){return!0},caseDetails:function(){return{}}}})},e.editCase=function(){n.open({templateUrl:"/partials/casePanel/caseAddModal",controller:"CaseAddModalCtrl",size:"lg",resolve:{caseId:function(){return e.id=e.cases[t.caseId].caseId},branchList:function(){return e.branchList},carsData:function(){for(var t=e.carsData.length-1;t>=0;t--)for(var n=e.caseDetails.cars.length-1;n>=0;n--)e.carsData[t].radioCode===e.caseDetails.cars[n].radio_code&&(e.carsData[t].isChecked=!0);return e.carsData},isNew:function(){return!1},caseDetails:function(){return e.caseDetails}}})}}]),angular.module("InNet").controller("DutyListCtrl",["$scope","BranchSvc","$stateParams","SocketSvc","UserSvc","$q",function(e,t,n,s,r,i){function a(e){for(var t=0,n=0;n<e.members.length;n++)e.members[n].onDuty&&(t+=1);return t}if(r.accessLevel()<2)var c=r.userBranch();else var c=n.branch;t.totalListFindByName(c).success(function(t){e.branch=t,e.onDutyTotal=a(e.branch)})}]),angular.module("InNet").controller("DutyListEditCtrl",["$scope","BranchSvc","$stateParams","MemberSvc","$location","$window","UserSvc",function(e,t,n,s,r,i,a){if(a.accessLevel()<2)var c=a.userBranch();else var c=n.branch;t.totalListFindByName(c).success(function(t){e.branch=t,e.onDutyTotal=0}),e.check=function(e){e.onDuty=!e.onDuty},e.save=function(){t.updateDirector({branch:e.branch.name,director:e.branch.director}).success(function(){for(var t=0;t<e.branch.members.length;t++)s.updateOnDuty({memberId:e.branch.members[t]._id,onDuty:e.branch.members[t].onDuty,mission:e.branch.members[t].mission})}).then(function(){i.history.back()})}}]),angular.module("InNet").service("GeoSvc",["$q",function(e){this.getGeolocationCoordinates=function(){var t=e.defer();return navigator.geolocation.getCurrentPosition(function(e){t.resolve(e.coords)},function(e){t.resolve(null)}),t.promise}}]),angular.module("InNet").controller("LoginCtrl",["$scope","UserSvc","store","$state","jwtHelper","$http","SocketSvc",function(e,t,n,s,r,i,a){var c=null;e.user={},e.login=function(){t.login(e.user).success(function(e){e.success?(n.set("jwt",e.token),i.defaults.headers.common["x-access-token"]=e.token,c=e.token):console.log("password is not existed!")}).then(function(){a.init(c),a.emit("login")}).then(function(){s.go("admin"==r.decodeToken(c).role?"dutyDesk.dashboard":"director.safety.index")})}}]),angular.module("InNet").controller("MapIndexCtrl",["$scope","leafletData","GeoSvc",function(e,t,n){n.getGeolocationCoordinates().then(function(t){e.nowPos.lat=t.latitude,e.nowPos.lng=t.longitude,e.nowPos.zoom=17}),angular.extend(e,{nowPos:{lat:24.988,lng:121.5752,zoom:17},controls:{draw:{}}}),t.getMap().then(function(t){var n=e.controls.edit.featureGroup;t.on("draw:created",function(e){var t=e.layer;n.addLayer(t),FeatureCollections.push(t.toGeoJSON())})})}]),angular.module("InNet").controller("MemberAccountModalCtrl",["$scope","UserSvc","MemberSvc","member","$modalInstance",function(e,t,n,s,r){e.user=s,e.save=function(){_.isEmpty(e.user)?console.log("please enter your account and password!"):e.user.account?e.user.password?(t.activate(e.user),n.updateUser(s.name),r.close(e.user)):console.log("password can't be blank"):(console.log("account can't be blank!"),e.user.password||console.log("passwod can't be blank!"))},e.cancel=function(){r.dismiss("cancel")}}]),angular.module("InNet").controller("MemberCtrl",["$scope","MemberSvc","$stateParams",function(e,t,n){e.branch=n.branch,t.findByBranch(n.branch).success(function(t){e.members=t,e.members.forEach(function(e){e.workingTime=moment.duration(e.workingTime,"seconds")})})}]),angular.module("InNet").controller("MemberEditCtrl",["$scope","MemberSvc","BranchSvc","$stateParams","$window","$modal","$state","UserSvc",function(e,t,n,s,r,i,a,c){e.alerts=[],e.memberDeleted=!1;var o=null;e.accessLevel=c.accessLevel();var u=function(){t.findByBranch(s.branch).success(function(t){e.members=t,e.members.forEach(function(e){e.workingTime=moment.duration(e.workingTime,"seconds")})})};u(),e.save=function(){for(var t=[],i=[],a=0;a<e.members.length;a++)t.push(e.members[a]._id),i.push(e.members[a].name),("分隊長"==e.members[a].title||"小隊長"==e.members[a].title||"中隊長"==e.members[a].title||"大隊長"==e.members[a].title)&&(director=e.members[a].name);n.update({branch:s.branch,members:t,directors:i,director:director}),r.history.back()},e.addNewMember=function(){var t=i.open({templateUrl:"views/member/member.modal.html",controller:"MemberModalCtrl",size:"md",resolve:{branch:function(){return s.branch},member:function(){return{workingTime:null}}}});t.result.then(function(t){t&&u(),e.alerts.push({type:"success",msg:"人員新增成功！ "+t.name+" 已加入 "+t.branch})})},e.update=function(t){var n=t,r=i.open({templateUrl:"views/member/member.modal.html",controller:"MemberModalCtrl",size:"md",resolve:{branch:function(){return s.branch},member:function(){return{memberId:t._id,id:t.id,name:t.name,title:t.title,branches:t.branches,corps:t.corps,radioCode:t.radioCode,workingTime:60*t.workingTime.minutes()+t.workingTime.seconds()}}}});r.result.then(function(t){u(),e.alerts.push({type:"info",msg:n.name+"修改成功!"})})},e.activateAccount=function(t){var n=e.members.filter(function(e){return e.isUser});if(n.length<3){var s=i.open({templateUrl:"views/member/member.account.html",controller:"MemberAccountModalCtrl",size:"md",resolve:{member:function(){return t}}});s.result.then(function(t){u(),e.alerts.push({type:"info",msg:t.name+" 已開通為使用者"})})}else e.alerts.push({type:"warning",msg:"無法開通"+t.name+" 因為使用者已超過3位，請解除其他人帳號後再開通 "})};var l=function(n){c.removeUser(o.name).success(function(s){t.removeUser(s.username),e.closeAlert(n),u()})},m=function(n){e.memberDeleted=!0,t.deleteMember(o).success(function(){e.memberDeleted=!1}),e.closeAlert(n),u()},d=function(t){e.memberDeleted=!1,e.closeAlert(t)};e.deleteAlert=function(t){e.alerts.push({type:"danger",msg:"是否確定要刪除！"+t.name,execute:m,cancel:d}),o=t},e.deActivateAlert=function(t){var n=e.members.filter(function(e){return e.isUser});1==n.length?e.alerts.push({type:"warning",msg:"每分隊至少要有1個使用者，無法取消"+t.name+"的登入權限"}):(e.alerts.push({type:"danger",msg:"是否確定要解除"+t.name+"登入權限",execute:l,cancel:d}),o=t)},e.closeAlert=function(t){e.alerts.splice(t,1)}}]),angular.module("InNet").controller("MemberModalCtrl",["$scope","branch","MemberSvc","$modalInstance","$state","member","BranchSvc","UserSvc",function(e,t,n,s,r,i,a,c){e.alerts=[],e.isNew=_.isNull(i.workingTime),e.member={id:i.id||"",name:i.name||null,title:"消防隊員",titles:["消防隊員","小隊長","分隊長","中隊長","大隊長","副大隊長"],branch:i.branch||t,workingTime:i.workingTime||1200,radioCode:i.radioCode||null,mission:"瞄子手",missions:["瞄子手","副瞄子手","司機","帶隊官","安全管制員","聯絡官"],corps:c.userCorps(),corpss:["第一救災救護大隊","第三救災救護大隊"]},a.fetch(c.userCorps()).success(function(t){if(e.branches=t,!e.isNew){for(var n=[],s=t.length-1;s>=0;s--)n.push(t[s].name);e.member.branches=n}});var o=function(e){var t=e.split("").slice(-2).join("");return"大隊"==t||"中隊"==t?"北海":e.split("").slice(0,2).join("")};e.save=function(){e.member.name&&(e.member.radioCodePrefix=o(e.member.branch),n.create(e.member).success(function(){e.member.workingTime=moment.duration(parseInt(e.member.workingTime),"seconds")}).then(function(){s.close(e.member)}))},e.update=function(){var t={memberId:i.memberId,id:"",name:e.member.name,corps:e.member.corps,branch:e.member.branch,title:e.member.title,workingTime:e.member.workingTime,radioCode:e.member.radioCode,radioCodePrefix:o(e.member.branch)};e.member.name&&(n.updateByMemberId(t),s.close(t))},e.cancel=function(){s.dismiss("cancel")}}]),angular.module("InNet").service("MemberSvc",["$http",function(e){this.fetch=function(){return e.get("/api/members")},this.findByBranch=function(t){return e.get("/api/members/"+t)},this.fetchOnDuty=function(t){return e.get("/api/members/onDuty?branch="+t)},this.updateOnDuty=function(t){return e.put("/api/members/onDuty/findById?memberId="+t.memberId,t)},this.create=function(t){return e.post("/api/members/",t)},this.update=function(t){return e.put("/api/members/",t.id)},this.updateByMemberId=function(t){return e.put("/api/members/findById/"+t.memberId,t)},this.updateIsChecked=function(t){return e.put("/api/members?id="+t.memberId,t)},this.updateUser=function(t){return e.put("/api/members/user?username="+t)},this.removeUser=function(t){return e.put("/api/members/user/remove?username="+t)},this.deleteMember=function(t){return e["delete"]("/api/members/"+t._id)}}]),angular.module("InNet").controller("NavCtrl",["$scope","BranchSvc","store","jwtHelper","UserSvc",function(e,t,n,s,r){e.username=r.currentUser(),e.branch=r.userBranch(),t.fetch(r.userCorps()).success(function(t){e.branches=t}),e.isValid=function(e){return r.isValid(e)}}]),angular.module("InNet").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,n){t.otherwise("/login"),e.state("anon",{url:"","abstract":!0,template:"<ui-view>"}).state("anon.login",{url:"/login",templateUrl:"views/login.html",controller:"LoginCtrl"}).state("anon.404",{url:"/404",templateUrl:"views/404.html"}),e.state("dutyDesk",{"abstract":!0,url:"/dutyDesk",templateUrl:"views/common/content.html",data:{requiredLogin:!0,role:["admin"]}}).state("dutyDesk.dashboard",{url:"/dashboard",templateUrl:"views/dashboard.html",controller:"DashboardCtrl",data:{requiredLogin:!0,role:["admin"]}}).state("dutyDesk.case",{url:"/case",templateUrl:"views/case/case.index.html",controller:"CaseCtrl"}).state("dutyDesk.safety",{url:"/case/:id",templateUrl:"views/summary/summary.index.html",controller:"SummaryCtrl"}).state("dutyDesk.dutylist",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.dutylist.show",{url:"/dutylist/:branch",templateUrl:"views/dutylist/dutylist.index.html",controller:"DutyListCtrl"}).state("dutyDesk.dutylist.edit",{url:"/dutylist/:branch/edit",templateUrl:"views/dutylist/dutylist.edit.html",controller:"DutyListEditCtrl"}).state("dutyDesk.member",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.member.show",{url:"/member/:branch",templateUrl:"views/member/member.index.html",controller:"MemberCtrl"}).state("dutyDesk.member.edit",{url:"/member/:branch/edit",templateUrl:"views/member/member.edit.html",controller:"MemberEditCtrl"}).state("dutyDesk.car",{"abstract":!0,template:"<ui-view>"}).state("dutyDesk.car.show",{url:"/car/:branch",templateUrl:"views/cars/car.index.html",controller:"CarIndexCtrl"}).state("dutyDesk.car.edit",{url:"/car/:branch/edit",templateUrl:"views/cars/car.edit.html",controller:"CarEditCtrl"}),e.state("director",{"abstract":!0,url:"",templateUrl:"views/director/director.content.html",data:{requiredLogin:!0,role:["user"]}}).state("director.safety",{"abstract":!0,url:"/safety",template:"<ui-view>"}).state("director.safety.index",{url:"/index",templateUrl:"views/safety/safety.index.html",controller:"SafetyIndexCtrl"}).state("director.safety.management",{url:"/index/:id",templateUrl:"views/safety/safety.manage.html",controller:"SafetyManageCtrl"}).state("director.safety.summary",{url:"/summary/:id",templateUrl:"views/summary/summary.index.html",controller:"SummaryCtrl"}).state("director.map",{url:"/map",templateUrl:"views/map/map.index.html",controller:"MapIndexCtrl"}).state("director.dutylist",{"abstract":!0,url:"/dutylist",template:"<ui-view>"}).state("director.dutylist.index",{url:"/index",templateUrl:"views/dutylist/director.dutylist.index.html",controller:"DutyListCtrl"}).state("director.dutylist.edit",{url:"/edit",templateUrl:"views/dutylist/director.dutylist.edit.html",controller:"DutyListEditCtrl"})}]).run(["$rootScope","$state","$stateParams","store","jwtHelper","UserSvc","SocketSvc",function(e,t,n,s,r,i,a){e.$on("$stateChangeStart",function(e,n,a,c,o){"anon.login"==n.name?s.remove("jwt"):n.data&&n.data.requiredLogin&&(i.isLoggedIn()?-1==n.data.role.indexOf(r.decodeToken(s.get("jwt")).role)&&(e.preventDefault(),t.go("anon.login")):(e.preventDefault(),t.go("anon.login")))}),e.$on("$stateChangeError",function(e){e.preventDefault()})}]),angular.module("InNet").controller("SafetyIndexCtrl",["$scope","CaseSvc","UserSvc","SocketSvc","$rootScope",function(e,t,n,s,r){s.on("newCase",function(t){e.cases.push(t)}),s.on("caseClose",function(t){t.isOngoing||(e.cases=e.cases.filter(function(e){return e._id!=t.caseId}))});var i={branch:n.userBranch(),accessLevel:n.accessLevel(),corps:n.userCorps()};t.fetchRelativeCase(i).success(function(t){e.cases=t}),e.$on("$destroy",function(e){s.removeAllListeners()}),e.accessLevel=n.accessLevel()}]),angular.module("InNet").controller("SafetyManageCtrl",["$scope","$stateParams","$modal","StSvc","$state","MemberSvc","$log","UserSvc","BranchSvc","SocketSvc",function(e,t,n,s,r,i,a,c,o,u){var l=c.userBranch();o.fetchByName(l).success(function(t){e.details=t}),s.fetch(t.id,l).success(function(t){e.strikeTeams=t}),u.on("newSt",function(n){angular.equals(l,n.branch)&&angular.equals(t.id,n.caseId)&&e.strikeTeams.push(n)}),u.on("updateSt",function(t){for(var n=angular.copy(t.members),s=e.strikeTeams.length-1;s>=0;s--)angular.equals(e.strikeTeams[s]._id,t.id)&&(e.strikeTeams[s].position=t.position,e.strikeTeams[s].area=t.area,e.strikeTeams[s].members.push.apply(e.strikeTeams[s].members,n))}),u.on("dismiss",function(t){var n=t.stId;e.strikeTeams=e.strikeTeams.filter(function(e){return e._id!=n})}),e.strikeTeam=function(){n.open({templateUrl:"views/safety/safety.modal.html",controller:"SafetyModalCtrl",size:"md",resolve:{stId:function(){return _.isEmpty(e.strikeTeams)?0:e.strikeTeams[e.strikeTeams.length-1].id}}})},e.openSettingModal=function(t,s){var r=n.open({templateUrl:"views/safety/safety.setting.modal.html",controller:"SafetySettingCtrl",size:"lg",resolve:{strikeTeam:function(){return t}}});r.result.then(function(t){for(var n=e.strikeTeams.length-1;n>=0;n--)angular.equals(e.strikeTeams[n]._id,t.id)&&(e.strikeTeams[n].position=t.position,e.strikeTeams[n].area=t.area,e.strikeTeams[n].members.push.apply(e.strikeTeams[n].members,t.members))},function(){a.info("Modal dismissed at: "+new Date)})},e.dismiss=function(t,n){s.dismissSt({id:t._id}).success(function(){for(var e=t.members.length-1;e>=0;e--)i.updateIsChecked({memberId:t.members[e]._id,mission:t.members[e].mission,isChecked:!1})}),e.strikeTeams.splice(n,1)},e.$on("$destroy",function(e){u.removeAllListeners()})}]),angular.module("InNet").controller("SafetyModalCtrl",["$scope","$modalInstance","$stateParams","StSvc","MemberSvc","$state","$window","stId","UserSvc","BranchSvc","SocketSvc",function(e,t,n,s,r,i,a,c,o,u,l){var m=o.userBranch();e.title=m+(c+1),u.fetchByName(m).success(function(t){e.details=t}).then(function(){e.details&&(e.details.members=e.details.members.filter(function(e){return 1!=e.isChecked}),e.details.members.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}))}),e.strikeTeam={position:"第一面",positions:["第一面","第二面","第三面","第四面"],mission:"搶救小組",missions:["搶救小組","救援小組","搜救小組"],area:"第一區",areas:["第一區","第二區","第三區","第四區","第五區"]},e.check=function(e){e.isChecked=!e.isChecked},e.cancel=function(){t.dismiss("cancel")},e.save=function(){var s=e.details.members.filter(function(e){return e.isChecked===!0});if(s.length>-1){for(var i={id:c+1||0,caseId:n.id,branch:e.details.name,director:e.details.director,position:e.strikeTeam.position,positions:e.strikeTeam.positions,mission:e.strikeTeam.mission,missions:e.strikeTeam.missions,area:e.strikeTeam.area,areas:e.strikeTeam.areas,members:s,isDismissed:!1,workingTime:_.min(s,function(e){return e.workingTime}).workingTime,creator:o.currentUser()},u=s.length-1;u>=0;u--)r.updateIsChecked({memberId:s[u]._id,isChecked:s[u].isChecked,mission:s[u].mission});l.emit("createStrikeTeam",i),t.close()}else a.alert("you must organize strike team")}}]),angular.module("InNet").controller("SafetySettingCtrl",["$scope","strikeTeam","$modalInstance","StSvc","$state","MemberSvc","CaseSvc","$stateParams","SocketSvc",function(e,t,n,s,r,i,a,c,o){var u=[],l=[];e.strikeTeam=t,a.fetchDetails(c.id).success(function(t){e.dispatch=t.branchIds}),e.chooseBranch=function(t){e.members=e.dispatch[t].members;for(var n=e.members.length-1;n>=0;n--)e.members[n].isChecked&&e.members.splice(n,1)},e.cancel=function(){n.dismiss("cancel")},e.check=function(e){e.isChecked=!e.isChecked,u.push(e._id),l.push(e)},e.uncheck=function(e,t){e.isChecked=!e.isChecked,u.splice(t,1),l.splice(t,1)},e.save=function(){s.updateSt({id:t._id,position:t.position,area:t.area,mission:t.mission,memberIds:u}).success(function(){for(var e=u.length-1;e>=0;e--)i.updateIsChecked({memberId:u[e]._id,mission:u[e].mission,isChecked:!0})}),n.close({id:t._id,position:t.position,area:t.area,members:l,caseId:t.caseId})}}]),angular.module("InNet").service("SocketSvc",["$rootScope","store","$q","$timeout",function(e,t,n,s){this.init=function(e){var n=null;return n=e?e:t.get("jwt"),io.connect("http://localhost:3000",{query:"token="+n,forceNew:!0})};var r=this.init();this.on=function(t,n){this.init().on(t,function(){var t=arguments;e.$apply(function(){n.apply(r,t)})})},this.emit=function(t,n,s){this.init().emit(t,n,function(){var t=arguments;e.$apply(function(){s&&s.apply(r,t)})})},this.removeAllListeners=function(t,n){this.init().removeAllListeners(t,function(){var t=arguments;e.$apply(function(){n.apply(r,t)})})}}]),angular.module("InNet").service("StSvc",["$http",function(e){this.fetch=function(t,n){return e.get("/api/strikeTeams?caseId="+t+"&branch="+n)},this.fetchByCase=function(t){return e.get("/api/strikeTeams/total?caseId="+t)},this.dismissSt=function(t){return e.put("/api/strikeTeams/dismiss?id="+t.id)},this.updateSt=function(t){return e.put("/api/strikeTeams/update?id="+t.id,t)},this.updateTimeRecord=function(t){return e.put("/api/strikeTeams/time?id="+t.id,t)},this.create=function(t){return e.post("/api/strikeTeams",t)},this.count=function(t){return e.get("/api/strikeTeams/count?caseId="+t)}}]),angular.module("InNet").controller("SummaryCtrl",["$scope","StSvc","$stateParams","$interval","$state","SocketSvc",function(e,t,n,s,r,i){i.on("timerRunning",function(t){for(var n=e.strikeTeams.length-1;n>=0;n--)angular.equals(e.strikeTeams[n]._id,t.stId)&&(e.strikeTeams[n].timerRunning=t.timerRunning)}),i.on("progressUpdate",function(t){for(var n=e.strikeTeams.length-1;n>=0;n--)angular.equals(e.strikeTeams[n]._id,t.id)&&(e.strikeTeams[n].timer=moment.duration(t.millis),e.strikeTeams[n].progress=t.progress,e.strikeTeams[n].progressState=t.progressState)}),i.on("newSt",function(t){if(angular.equals(a,t.caseId)){var n=angular.copy(t);e.strikeTeams.push(n)}e.deploys=c(e.strikeTeams)}),i.on("updateSt",function(n){t.fetchByCase(a).success(function(t){e.strikeTeams=t,e.strikeTeams.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}),e.deploys=c(e.strikeTeams)})}),i.on("dismiss",function(n){t.fetchByCase(a).success(function(t){e.strikeTeams=t,e.deploys=c(e.strikeTeams)})});var a=n.id;t.fetchByCase(a).success(function(t){e.strikeTeams=t,e.strikeTeams.forEach(function(e){e.limitTime=moment.duration(e.workingTime,"seconds")}),e.deploys=c(e.strikeTeams)}),e.position={defaultPos:"第一面",positions:["第一面","第二面","第三面","第四面"]};var c=function(e){var t=_.range(4).map(function(){return _.range(5).map(function(){return{totalMember:0,stTotal:0}})});if(e)for(var n=e.length-1;n>=0;n--){var s=_.indexOf(e[n].positions,e[n].position),r=_.indexOf(e[n].areas,e[n].area);t[s][r].stTotal+=1,t[s][r].totalMember+=e[n].members.length}return t};e.$on("$destroy",function(e){i.removeAllListeners()})}]),angular.module("InNet").controller("TimerCtrl",["$scope","SocketSvc",function(e,t){e.timerRunning=!0,e.startTimer=function(n,s){e.$broadcast("timer-start"),e.timerRunning=!0,t.emit("timer",{stId:n._id,timerRunning:!0})},e.stopTimer=function(n,s){e.$broadcast("timer-stop"),e.timerRunning=!1,t.emit("timer",{stId:n._id,timerRunning:!1})},e.resumeTimer=function(){e.$broadcast("timer-resume"),e.timerRunning=!1}}]),angular.module("InNet").controller("TopNavCtrl",["$scope","$location","$state","$interval","store","SocketSvc","UserSvc","$window",function(e,t,n,s,r,i,a,c){e.currentTime=moment().format("MMM Do, h:mm:ss a"),s(function(){moment.locale("zh-tw"),e.currentTime=moment().format("MMM Do, h:mm:ss a")},1e3),e.logout=function(){a.currentAccount();i.emit("logout"),n.go("anon.login")}}]),angular.module("InNet").service("UserSvc",["$http","store","jwtHelper",function(e,t,n){this.fetchOnlineUser=function(){return e.get("/api/users/userState")},this.activate=function(t){return e.post("/api/users",t)},this.removeUser=function(t){return e["delete"]("/api/users/delete?username="+t)},this.login=function(t){return e.post("/api/users/authenticate",t)},this.isLoggedIn=function(){return t.get("jwt")},this.isValid=function(e){return this.isLoggedIn&&(n.decodeToken(t.get("jwt")).accessLevel>1||n.decodeToken(t.get("jwt")).branch==e)?!0:!1},this.userBranch=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).branch:void 0},this.userCorps=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).corps:void 0},this.currentUser=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).username:void 0},this.currentAccount=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).account:void 0},this.accessLevel=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).accessLevel:void 0},this.caseId=function(){return this.isLoggedIn?n.decodeToken(t.get("jwt")).caseId:void 0}}]);
//# sourceMappingURL=data:application/json;base64,